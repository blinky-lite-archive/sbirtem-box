[
    {
        "id": "e170e03.a0caf2",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8475ab9.3d26058",
        "type": "tab",
        "label": "Web App Socket Router",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a858ad3a.95706",
        "type": "tab",
        "label": "Web Launchers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9c854ea3.68416",
        "type": "tab",
        "label": "Web Apps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e17f7487.2a78e8",
        "type": "tab",
        "label": "blinky-lite-dataLogger",
        "disabled": false,
        "info": ""
    },
    {
        "id": "90f83725.6dae08",
        "type": "tab",
        "label": "blinky-lite-Utility Apps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dc20c6e0.0feb98",
        "type": "tab",
        "label": "blinky-lite-scalarDevice",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b94899c9.b16088",
        "type": "tab",
        "label": "blinky-lite-vectorDevice",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ca529822.9112f8",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "99bb1519.85fc18"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "fcfe7ca7.f566a",
        "type": "subflow",
        "name": "Core CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "ba2c1c11.88703"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "ba2c1c11.88703",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e3c68b88.d82258",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "f5a9eda8.5c5bc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "f5a9eda8.5c5bc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2c5d25cb.3428ca",
        "type": "subflow",
        "name": "App NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "c104210d.418eb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "c104210d.418eb",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "7eddf0fe.4ce23",
        "type": "subflow",
        "name": "Core NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "d08de07e.32d22"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "d08de07e.32d22",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "f22a539a.a67b3",
        "type": "subflow",
        "name": "Core HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "e4d36fde.932ed"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "8341090a.df9758",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "966e270e.701e48"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e13648d6.d698c8",
        "type": "subflow",
        "name": "Log Setting",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "347f36fe.94ed7a"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "df70f6f.9e4ed08",
        "type": "subflow",
        "name": "Scalar Device Menu",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 0,
                "y": 80,
                "wires": [
                    {
                        "id": "ddfc02aa.3af39"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 80,
                "wires": [
                    {
                        "id": "e98d4d33.bcca2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2dba0745.a98d98",
        "type": "subflow",
        "name": "Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 120,
                "wires": [
                    {
                        "id": "3deefd6d.1dde92"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1080,
                "y": 120,
                "wires": [
                    {
                        "id": "f3358361.19029",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1080,
                "y": 200,
                "wires": [
                    {
                        "id": "360e39e7.c89036",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2d027d69.1fdeb2",
        "type": "subflow",
        "name": "App Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3966deae.453262"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 60,
                "wires": [
                    {
                        "id": "3966deae.453262",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "495f0879.c831c8",
        "type": "subflow",
        "name": "Core Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "8e411315.2b09f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 40,
                "wires": [
                    {
                        "id": "8e411315.2b09f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Chill Detector",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3c1c519e.83272e",
        "type": "websocket-listener",
        "z": "",
        "path": "/scalarArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "8d993328.9d4c4",
        "type": "websocket-listener",
        "z": "",
        "path": "/scalarPlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3c933d8a.80b7a2",
        "type": "websocket-listener",
        "z": "",
        "path": "/vectorPlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "869ccabd.6400e8",
        "type": "websocket-listener",
        "z": "",
        "path": "/vectorArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3d5cd97c.77df96",
        "type": "websocket-listener",
        "z": "",
        "path": "/scalarViewer/websocket",
        "wholemsg": "false"
    },
    {
        "id": "84d80994.260508",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "2b65833e.87911c",
        "type": "websocket-listener",
        "z": "",
        "path": "/scalarAlarmScanner/websocket",
        "wholemsg": "false"
    },
    {
        "id": "9cd5ff5e.caf86",
        "type": "mongodb3",
        "z": "",
        "uri": "$(MONGODBIP)",
        "name": "blinky-lite",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "23623a1c.e4ce46",
        "type": "nexmobasic",
        "z": ""
    },
    {
        "id": "6acefdd9.69f124",
        "type": "JsonWebToken_config",
        "z": "",
        "name": "blinky-lite-core-jwt-key",
        "secret": "$(JWTKEYSECRET)"
    },
    {
        "id": "47794345.2e8b8c",
        "type": "websocket-listener",
        "z": "",
        "path": "/access-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "fcd0f0f1.e1a0f",
        "type": "websocket-listener",
        "z": "",
        "path": "/settings-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "84a0efe3.385ca",
        "type": "websocket-listener",
        "z": "",
        "path": "/setServerTime/websocket",
        "wholemsg": "false"
    },
    {
        "id": "e71c9288.03dd3",
        "type": "websocket-listener",
        "z": "",
        "path": "/vad-kul-sensor/websocket",
        "wholemsg": "false"
    },
    {
        "id": "e154ab6.e010658",
        "type": "websocket-listener",
        "z": "",
        "path": "/vad-kul-archive/websocket",
        "wholemsg": "false"
    },
    {
        "id": "da60ea3b.6a2998",
        "type": "websocket-listener",
        "z": "",
        "path": "/vad-kul-history/websocket",
        "wholemsg": "false"
    },
    {
        "id": "6308abaa.624654",
        "type": "websocket-listener",
        "z": "",
        "path": "/vad-kul-tv/websocket",
        "wholemsg": "false"
    },
    {
        "id": "f7a2f382.03ec3",
        "type": "websocket-listener",
        "z": "",
        "path": "/vad-kul-bar/websocket",
        "wholemsg": "false"
    },
    {
        "id": "ee7a7e47.e8f98",
        "type": "websocket-listener",
        "z": "",
        "path": "/vad-kul-monitor/websocket",
        "wholemsg": "false"
    },
    {
        "id": "d8aea031.7f89d",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarPlotter",
        "url": "/scalarPlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "83301a46.e7b368"
            ]
        ]
    },
    {
        "id": "761db118.51922",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarPlotter",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "5ddca0da.79e6e"
            ]
        ]
    },
    {
        "id": "472ae883.652f08",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarPlotter",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 1630,
        "y": 300,
        "wires": []
    },
    {
        "id": "5ddca0da.79e6e",
        "type": "json",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 380,
        "wires": [
            [
                "f445d1dd.72e4"
            ]
        ]
    },
    {
        "id": "f445d1dd.72e4",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getArchiveValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 430,
        "y": 380,
        "wires": [
            [
                "7ef5d7af.5aeed8"
            ],
            [
                "80b3fbd.ba21908"
            ],
            [
                "ccb4a4a2.49a2e8"
            ],
            [
                "8e79cfec.1347"
            ],
            [
                "98c9d4ad.3f54f8"
            ],
            [
                "4819746c.65db8c"
            ]
        ]
    },
    {
        "id": "7ef5d7af.5aeed8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getDeviceList",
        "func": "var newMsg = \n{\n    topic           : 'getDeviceList',\n    userID          : msg.payload.userID,\n    payload         : [{},{projection:{deviceType:1, _id:0}}]\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "b6d95279.1b494",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"8%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"7%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y1</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y2</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">pt</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)'></td>\n            </tr>\n        </table>\n    </div>\n    <div>\n        <div class='row'>\n            <div class='col-md-6'>\n                <table>\n                    <tr>\n                        <td width=50%  align=\"center\"class=\"tableHeading\">Span</td>\n                        <td width=50% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                         <td align=\"center\">\n                            <input class=\"form-control\" id=\"plotLength\" type=\"text\" value=\"300\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button class=\"btn jumbotron-button\" id=\"startPlotButton\" type=\"button\" onclick=\"startPlot()\">Start Plot</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n     </div>",
        "output": "str",
        "x": 1190,
        "y": 40,
        "wires": [
            [
                "72941646.0206b8"
            ]
        ]
    },
    {
        "id": "2b6693c7.697dbc",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse device list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar deviceList = [];\ndeviceList[0] = msg.payload[0].deviceType;\nif (numDevices > 1)\n{\n    for (var idevice = 1; idevice < numDevices; ++idevice)\n    {\n        var deviceAlreadyFound = false;\n        for (ii = 0; ii < idevice; ++ii)\n        {\n            if (msg.payload[idevice].deviceType == deviceList[ii]) deviceAlreadyFound = true;\n        }\n        if (!deviceAlreadyFound) deviceList[idevice] = msg.payload[idevice].deviceType;\n    }\n}\n\nreturn {\n    topic:'getDeviceList',\n    payload:{\n        topic           : 'getDeviceList',\n        payload         : deviceList,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 300,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "ccb4a4a2.49a2e8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getAttrList",
        "func": "var projectionFilter =  {projection:{id:0}};\nvar newMsg = \n{\n    topic           : 'getAttrList',\n    userID          : msg.payload.userID,\n    payload         : [{$and : [{deviceType:msg.payload.deviceType}, {name:msg.payload.name}]}, projectionFilter],\n    prop            : msg.payload.prop,\n    name            : msg.payload.name,\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 380,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "d206e66b.d73eb8",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1090,
        "y": 380,
        "wires": [
            [
                "2b6693c7.697dbc"
            ],
            [
                "818972ac.61492"
            ],
            [
                "a73ef173.723ab"
            ],
            [
                "dfbf9465.6e7518"
            ]
        ]
    },
    {
        "id": "a73ef173.723ab",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse attrList",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar device = msg.payload[0];\nvar attrList = [];\nvar keys = Object.keys(device);\nfor (var ii = 0; ii < keys.length; ++ii)\n{\n    if (device[keys[ii]].hasOwnProperty('type'))\n    {\n        if (device[keys[ii]].type == 'scalar')\n        {\n            if (device[keys[ii]].action == msg.prop)\n            {\n                attrList.push(keys[ii]);\n            }\n        }\n    }\n}\nif (attrList.length < 1) return null;\nreturn {\n    topic:'getAttrList',\n    payload:{\n        topic           : 'getAttrList',\n        userID          : msg.userID,\n        prop            : msg.prop,\n        name            : msg.name,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n        attrList        : attrList\n\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 380,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "7b9e1c55.c445c4",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var plotStarted = false;\n        var plotTraces = [];\n        var plotStartTime = 0;\n        var plotLength = 0;\n        var plotLayout = {};\n \n        function onDocumentReadySpecial()\n        {\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n            upDatePlot();\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n        }\n        function attrSelectedSpecial(itrace)\n        {\n        }\n\n        function selectAxis(itrace,axis)\n        {\n            devInfo[itrace].axis  = axis;\n        }\n        function selectPts(itrace)\n        {\n            devInfo[itrace].pts = !devInfo[itrace].pts;\n        }\n        function startPlot()\n        {\n            if (!plotStarted)\n            {\n                $(\"#startPlotButton\").html('Stop Plot');\n            }\n            else\n            {\n                $(\"#startPlotButton\").html('Start Plot');\n            }\n            plotStarted = !plotStarted;\n            if (!plotStarted)\n            {\n                plotTraces = [];\n                for (var itrace = 0; itrace < numTraces; ++itrace)\n                {\n                    deviceSelect[itrace].disabled = false;\n                    nameSelect[itrace].disabled = false;\n                    propSelect[itrace].disabled = false;\n                    attrSelect[itrace].disabled = false;\n                    $('#plotAxis_' + itrace.toString() + 'y1').prop( \"disabled\", false );\n                    $('#plotAxis_' + itrace.toString() + 'y2').prop( \"disabled\", false );\n                    $('#pts_' + itrace.toString()).prop( \"disabled\", false );\n                }\n                return;\n            }\n            plotTraces = [];\n            \n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace].disabled = true;\n                nameSelect[itrace].disabled = true;\n                propSelect[itrace].disabled = true;\n                attrSelect[itrace].disabled = true;\n                $('#plotAxis_' + itrace.toString() + 'y1').prop( \"disabled\", true );\n                $('#plotAxis_' + itrace.toString() + 'y2').prop( \"disabled\", true );\n                $('#pts_' + itrace.toString()).prop( \"disabled\", true );\n                if (devInfo[itrace].name.length > 0)\n                {\n                    var modeType = 'lines';\n                    if (devInfo[itrace].pts) modeType = 'markers';\n                    var trace =  \n                    {\n                        x: [],\n                        y: [],\n                        name: devInfo[itrace].axis + ' ' + devInfo[itrace].deviceType + '.' + devInfo[itrace].name + '.' + devInfo[itrace].prop + '.' + devInfo[itrace].attr + ' (' + devInfo[itrace].device[devInfo[itrace].attr].unit + ')',\n                        yaxis: devInfo[itrace].axis,\n                        type: 'scatter',\n                        mode: modeType\n                    };\n                    plotTraces.push(trace);\n                }\n            }\n            plotLayout =\n            {\n                showlegend: true,\n                legend: {x: 0,y: 1.35},\n                xaxis: {title: 'Time (seconds)'},\n                yaxis: {title: 'y1'},\n                yaxis2: {title: 'y2',overlaying: 'y',side: 'right'}\n            };\n\n            plotStartTime = new Date().getTime();\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n            plotLength = Number($(\"#plotLength\").val());\n        }\n        function upDatePlot()\n        {\n            if (!plotStarted) return;\n            var now = (new Date().getTime() - plotStartTime) / 1000;\n            var plotBeginning = now - plotLength;\n            var traceCount = 0;\n            var deltaT = (new Date().getTime() - plotStartTime) / 1000;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].name.length > 0)\n                {\n                    var removeDone = false;\n                    while(!removeDone)\n                    {\n                        if (plotTraces[traceCount].x[0] < plotBeginning)\n                        {\n                            plotTraces[traceCount].x.shift();\n                            plotTraces[traceCount].y.shift();\n                        }\n                        else\n                        {\n                            removeDone = true;\n                        }\n                    }\n                    plotTraces[traceCount].x.push(deltaT);\n                    plotTraces[traceCount].y.push(devInfo[itrace].device[devInfo[itrace].attr].value);\n                    ++traceCount;\n                }\n            }\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n        }",
        "output": "str",
        "x": 670,
        "y": 40,
        "wires": [
            [
                "da88a362.516c9"
            ]
        ]
    },
    {
        "id": "662fe630.391fd8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Plotter",
        "output": "str",
        "x": 1070,
        "y": 40,
        "wires": [
            [
                "b6d95279.1b494"
            ]
        ]
    },
    {
        "id": "8a439be9.030ab8",
        "type": "subflow:ca529822.9112f8",
        "z": "f22a539a.a67b3",
        "name": "",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "699dce99.1fe68",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 890,
        "y": 380,
        "wires": [
            [
                "d206e66b.d73eb8"
            ]
        ]
    },
    {
        "id": "8e79cfec.1347",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getDeviceValues",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getDeviceValues',\n    userID          : msg.payload.userID,\n    payload         : [msg.payload.queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 420,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "dfbf9465.6e7518",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse getDeviceValues",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar devices = [];\nfor (var idev = 0; idev < numDevices; ++idev) devices[idev] = msg.payload[idev];\nreturn {\n    topic:'getDeviceValues',\n    payload:{\n        topic           : 'getDeviceValues',\n        userID          : msg.userID,\n        devices         : devices,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 420,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "68b75168.59f04",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarArchivePlotter",
        "url": "/scalarArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "bc63b66b.867d18"
            ]
        ]
    },
    {
        "id": "2857fd6b.987de2",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"8%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"7%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y1</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y2</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">pt</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv0' href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv1' href='' target='_blank' download=\"data1.csv\" class=\"csv-linked\">2</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv2' href='' target='_blank' download=\"data2.csv\" class=\"csv-linked\">3</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv3' href='' target='_blank' download=\"data3.csv\" class=\"csv-linked\">4</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)'></td>\n            </tr>\n        </table>\n    </div>\n    <div id='plotSetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                        <td width=10% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"500\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n       </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card' id=\"timePlotCard\" >\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1190,
        "y": 100,
        "wires": [
            [
                "bb160287.a4943"
            ]
        ]
    },
    {
        "id": "3662caf5.96ce96",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var startDate = 0;\n        var stopDate = 0;\n        var csvFile = [];\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        function onDocumentReadySpecial()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n                csvFile[itrace] = null;\n\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#timePlotCard').hide();\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getArchiveValues':\n                    archiveList.push(msg.payload);\n                    if (archiveRequestList.length > 0)\n                    {\n                        getArchiveValues();\n                    }\n                    else\n                    {\n                        loadArchiveValues();\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n            $('#csv'+ itrace.toString()).removeAttr(\"href\");\n            $('#csv'+ itrace.toString()).css('color', 'black');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n       }\n        function attrSelectedSpecial(itrace)\n        {\n            $('#csv'+ itrace.toString()).removeAttr(\"href\");\n            $('#csv'+ itrace.toString()).css('color', 'black');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n        }\n        function selectAxis(itrace,axis)\n        {\n            devInfo[itrace].axis  = axis;\n        }\n        function selectPts(itrace)\n        {\n            devInfo[itrace].pts = !devInfo[itrace].pts;\n        }\n        function getArchiveData()\n        {\n            archiveRequestList = [];\n            archiveList = [];\n            startDate = new Date($( \"#startDate\" ).val()).getTime();\n            stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].name.length > 0) \n                {\n                    archiveRequestList[traceCount] = \n                    {\n                        deviceType  : devInfo[itrace].deviceType, \n                        name        : devInfo[itrace].name, \n                        prop        : devInfo[itrace].prop, \n                        attr        : devInfo[itrace].attr,\n                        startDate   : startDate, \n                        stopDate    : stopDate,\n                        itrace      : itrace\n                    };\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            $('#plotSetupTable').hide();\n            $('#timePlotCard').hide();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            }\n            messageDialog('Alert', 'Wait!', 'Requesting data ...');\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var maxPtsToPlot = Number($( \"#maxPtsToPlot\" ).val());\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getArchiveValues',\n                    userID      : userID,\n                    device      : archiveRequestList[0],\n                    maxPtsToPlot: maxPtsToPlot\n                });\n            archiveRequestList.shift();\n            return;\n        }\n        function loadArchiveValues()\n        {\n            $( \"#messageDialog\" ).dialog('close');\n            $('#plotSetupTable').show();\n            var plotTraces = [];\n            for (ii = 0; ii < archiveList.length; ++ii)\n            {\n                itrace = archiveList[ii].itrace;\n                var modeType = 'lines';\n                if (devInfo[itrace].pts) modeType = 'markers';\n                var trace =  \n                {\n                    x: [],\n                    y: [],\n                    name: devInfo[itrace].axis + ' ' + devInfo[itrace].deviceType + '.' + devInfo[itrace].name + '.' + devInfo[itrace].prop + '.' + devInfo[itrace].attr + ' (' + devInfo[itrace].device[devInfo[itrace].attr].unit + ')',\n                    yaxis: devInfo[itrace].axis,\n                    type: 'scatter',\n                    mode: modeType\n                }\n                for (var ipt = 0; ipt < archiveList[ii].trace.length; ++ipt)\n                {\n                    trace.x[ipt] = (archiveList[ii].trace[ipt].timeStamp - startDate) / 3600000;\n                    trace.y[ipt] = archiveList[ii].trace[ipt].value;\n                }\n                plotTraces.push(trace);\n                makeCsvFile(ii);\n            }\n            var plotLayout =\n            {\n                showlegend: true,\n                legend: {x: 0,y: 1.35},\n                xaxis: {title: 'Hours  since '  + new Date(startDate).toLocaleString()},\n                yaxis: {title: 'y1'},\n                yaxis2: {title: 'y2',overlaying: 'y',side: 'right'}\n            };\n            $('#timePlotCard').show();\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n        }\n        function makeCsvFile(ii)\n        {\n            var dataString = '';\n            var startT = archiveList[ii].trace[0].timeStamp;\n            var itrace = archiveList[ii].itrace;\n        \n            dataString = dataString + 'Device,' + devInfo[itrace].deviceType + ',' + devInfo[itrace].name + ',' + devInfo[itrace].prop + ',' + devInfo[itrace].attr  +'\\n';\n            dataString = dataString + 'StartDate,' + new Date(startT).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}) + '\\n';\n            dataString = dataString + 'StartDate (mS),' + startT.toString() + '\\n';\n            dataString = dataString + 'Time (sec), Value (' + devInfo[itrace].device[devInfo[itrace].attr].unit + ')\\n';\n            for (var ipt = 0; ipt < archiveList[ii].trace.length; ++ipt)\n            {\n                var x = (archiveList[ii].trace[ipt].timeStamp - startT) / 1000;\n                var y = archiveList[ii].trace[ipt].value;\n                dataString = dataString + x.toString() + ',' + y.toString() + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[itrace] !== null) {\n              window.URL.revokeObjectURL(csvFile[itrace]);\n            }\n        \n            csvFile[itrace] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ itrace.toString()).css('color', 'blue');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'underline');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            $('#csv'+ itrace.toString()).attr(\"href\", csvFile[itrace]);\n            $('#csv'+ itrace.toString()).attr(\"download\", devInfo[itrace].deviceType + '-' + devInfo[itrace].name + '-' + devInfo[itrace].prop + '-' + devInfo[itrace].attr + '.csv');\n        \n        }\n",
        "output": "str",
        "x": 670,
        "y": 100,
        "wires": [
            [
                "7d3145f.8eb39bc"
            ]
        ]
    },
    {
        "id": "c767ad27.32df7",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Archive Plotter",
        "output": "str",
        "x": 1070,
        "y": 100,
        "wires": [
            [
                "2857fd6b.987de2"
            ]
        ]
    },
    {
        "id": "e4e0d070.30842",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarArchivePlotter",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "5ddca0da.79e6e"
            ]
        ]
    },
    {
        "id": "2672654d.766b0a",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarArchivePlotter",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 1660,
        "y": 360,
        "wires": []
    },
    {
        "id": "1f6a9f15.3d80c1",
        "type": "link out",
        "z": "dc20c6e0.0feb98",
        "name": "Scalar DB Info",
        "links": [
            "23adba5a.1575e6"
        ],
        "x": 1415,
        "y": 360,
        "wires": []
    },
    {
        "id": "23adba5a.1575e6",
        "type": "link in",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "links": [
            "1f6a9f15.3d80c1",
            "7ed83a34.453664"
        ],
        "x": 1495,
        "y": 360,
        "wires": [
            [
                "472ae883.652f08",
                "2672654d.766b0a",
                "3b8105e.0ce10fa"
            ]
        ]
    },
    {
        "id": "98c9d4ad.3f54f8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getArchiveValues",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1, \n        [msg.payload.device.attr]     :   1\n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n    maxPtsToPlot    : msg.payload.maxPtsToPlot,\n    itrace          : msg.payload.device.itrace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 460,
        "wires": [
            [
                "c83b72f2.fbac"
            ]
        ]
    },
    {
        "id": "c83b72f2.fbac",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 890,
        "y": 460,
        "wires": [
            [
                "91696018.4cd47"
            ]
        ]
    },
    {
        "id": "91696018.4cd47",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic:'getArchiveValues',\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {itrace: msg.itrace, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nvar maxPts = msg.maxPtsToPlot;\nvar nstep = numRecords / msg.maxPtsToPlot;\nif (nstep < 1.0) \n{\n    nstep = 1.0;\n    maxPts = numRecords;\n}\nvar icnt = 0;\n\nwhile(icnt < maxPts)\n{\n    var index = Math.round(icnt * nstep);\n    trace[icnt] = {timeStamp: records[index].timeStamp, value: records[index][msg.device.attr]};\n    ++icnt\n}\n\nreturn {\n    topic:'getArchiveValues',\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {itrace: msg.itrace, trace:trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 460,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "101f39eb.3dbc86",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarViewer",
        "url": "/scalarViewer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "5fe2ee6b.e7801"
            ]
        ]
    },
    {
        "id": "98ef08d2.acd658",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"9%\"  align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Edit</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton0\" type=\"button\" onclick=\"editDevice(0)\">Edit</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton1\" type=\"button\" onclick=\"editDevice(1)\">Edit</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton2\" type=\"button\" onclick=\"editDevice(2)\">Edit</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton3\" type=\"button\" onclick=\"editDevice(3)\">Edit</button>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n        <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Value</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"attrValue\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LoLo</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LOW</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HIGH</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HiHi</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Notify Name</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Notify Number</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                </tr>\n            </table>\n        </div>\n    </div>",
        "output": "str",
        "x": 1190,
        "y": 160,
        "wires": [
            [
                "bc45cf67.b90c6"
            ]
        ]
    },
    {
        "id": "ddfc02aa.3af39",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript.scalardevicemenu",
        "field": "payload.javascript.scalardevicemenu",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 4;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var propSelect=[];\n        var attrSelect=[];\n        var valSelect=[];\n        var devInfo = [];\n        var permitGetDeviceValues = true;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                propSelect[itrace] = document.getElementById('propSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType: '', name : '',  prop : '',attr : '',device : {}, axis:'y1', pts:false};\n                $('#unitSelect'+ itrace.toString()).html('');\n            }\n            setInterval(getDeviceValues, 1000);\n            onDocumentReadySpecial();\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getDeviceValues':\n                        loadDeviceValues(msg);\n                        break;\n                    default:\n                        onWebSocketMessageSpecial(msg);\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            sendWebSocketMessageObject({topic : 'getDeviceList',payload : {}, 'userID' : userID,});\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getNameList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                });\n        }\n        function nameSelected(itrace)\n        {\n            clearPropOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var readOpt = document.createElement('option');\n            readOpt.value = 'reading';\n            readOpt.innerHTML = 'reading';\n            propSelect[itrace].appendChild(readOpt);\n            var setOpt = document.createElement('option');\n            setOpt.value = 'setting';\n            setOpt.innerHTML = 'setting';\n            propSelect[itrace].appendChild(setOpt);\n            \n            propSelect[itrace].value = 'notSelected';\n        }\n        function propSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (propSelect[itrace].value == 'notSelected') return;\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getAttrList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : propSelect[itrace].value\n                });\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            if (attrSelect[itrace].value == 'notSelected') \n            {\n                $('#valueSelect' + itrace.toString()).html('');\n                $('#unitSelect' + itrace.toString()).html('');\n                $('#editDeviceButton'+ itrace.toString()).hide();\n\n                return;\n            }\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].prop = propSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n            attrSelectedSpecial(itrace);\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearPropOptionList(itrace);\n        }\n        function clearPropOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (propSelect[itrace].firstChild)\n            {\n                propSelect[itrace].removeChild(propSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            propSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            $('#unitSelect'+ itrace.toString()).html('');\n            $('#valueSelect' + itrace.toString()).html('');\n            clearAttrOptionListSpecial(itrace);\n        }\n        function getDeviceValues()\n        {\n            var devList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((devInfo[itrace].deviceType.length > 0) && (devInfo[itrace].name.length > 0)) \n                {\n                    devList[traceCount] = { $and: [ {deviceType : devInfo[itrace].deviceType}, {name : devInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: devList };\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getDeviceValues',\n                    userID      : userID,\n                    queryFilter : queryFilter,\n                });\n \n        }\n        function loadDeviceValues(data)\n        {\n            if (!permitGetDeviceValues) return;\n            var devices = data.devices;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0)\n                {\n                    for (idev = 0; idev < devices.length; ++idev)\n                    {\n                        if (devices[idev].deviceType == devInfo[itrace].deviceType)\n                        {\n                            if(devices[idev].name == devInfo[itrace].name)\n                            {\n                                devInfo[itrace].device = devices[idev];\n                                var attr = devInfo[itrace].device[devInfo[itrace].attr];\n                                var valueColor = 'black';\n                                if (attr.alarm.value > 0) valueColor = 'orange';\n                                if (attr.alarm.value > 2) valueColor = 'red';\n                                $('#valueSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#valueSelect' + itrace.toString()).html(attr.value.toString());\n                                $('#unitSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#unitSelect' + itrace.toString()).html(attr.unit);\n                            }\n                        }\n                    } \n                }\n            }\n            loadDeviceValuesSpecial(data);\n        }\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "e98d4d33.bcca2"
            ]
        ]
    },
    {
        "id": "64bfcc43.f50934",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Viewer",
        "output": "str",
        "x": 1070,
        "y": 160,
        "wires": [
            [
                "98ef08d2.acd658"
            ]
        ]
    },
    {
        "id": "3b8105e.0ce10fa",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarViewer",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 1630,
        "y": 420,
        "wires": []
    },
    {
        "id": "c885dc27.153e5",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarViewer",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "5ddca0da.79e6e"
            ]
        ]
    },
    {
        "id": "5d93334c.7b160c",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "projectName",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "projectName",
        "payload": "PROJECT",
        "payloadType": "env",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "e06b15ee.c3bf78"
            ]
        ]
    },
    {
        "id": "e06b15ee.c3bf78",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save Project Name",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4819746c.65db8c",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 500,
        "wires": [
            [
                "6381975d.b98928",
                "2e134ccf.236a14"
            ]
        ]
    },
    {
        "id": "6381975d.b98928",
        "type": "mqtt out",
        "z": "dc20c6e0.0feb98",
        "name": "Publish setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1240,
        "y": 500,
        "wires": []
    },
    {
        "id": "482179b1.0efb28",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarAlarmScanner",
        "url": "/scalarAlarmScanner",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "fac3ac47.cbce"
            ]
        ]
    },
    {
        "id": "9661ff85.f96c8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class=\"row\"> \n            <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"toggleSoundButton\" type=\"button\" onclick=\"toggleSound()\">Turn Sound On</button>\n            </div>\n            <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n        </div>\n    </div>\n    <div width=\"100%\">\n        <table width=\"100%\" id='alarmTable'>\n            <tr class=\"tableHeading\">\n                <td width='12%'>Alarm</td>\n                <td width='12%'>Device</td>\n                <td width='12%'>Name</td>\n                <td width='12%'>Property</td>\n                <td width='12%'>Attribute</td>\n                <td width='12%'>Value</td>\n                <td width='12%'>Unit</td>\n                <td width='12%'>Type</td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1190,
        "y": 220,
        "wires": [
            [
                "f07664a9.ede108"
            ]
        ]
    },
    {
        "id": "30fbb3de.45ba1c",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var audioAlarm = new Audio('/audio/alarm.ogg');\n        var alarmSoundOn = false;\n        var soundLastPlayed = 0;\n        var soundInterval = 4000;\n        \n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            createAlarmTableRows(100);\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n               case 'alarmList':\n                    alarmScan(msg.payload);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function createAlarmTableRows(nrows)\n        {\n            var alarmTable = document.getElementById('alarmTable');\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                var row = alarmTable.insertRow(irow + 1);\n                row.setAttribute(\"id\", \"alarmTable\" + irow.toString());\n                row.setAttribute(\"class\", \"tableText\");\n                var iconCell = row.insertCell(0);\n                var devCell  = row.insertCell(1);\n                var nameCell = row.insertCell(2);\n                var propCell = row.insertCell(3);\n                var attrCell = row.insertCell(4);\n                var valueCell= row.insertCell(5);\n                var unitCell = row.insertCell(6);\n                var typeCell = row.insertCell(7);\n                iconCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_icon\");\n                devCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_dev\");\n                nameCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_name\");\n                propCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_prop\");\n                attrCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_attr\");\n                valueCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_value\");\n                unitCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_unit\");\n                typeCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_type\");\n                $('#alarmTable' + irow.toString()).hide();\n                iconCell.innerHTML = \"<img id='alarmTable\" + irow.toString() + \"_led'\" + \" src='/img/redLight.png' height='50px'/>\";\n            }\n        \n        }\n        function alarmScan(alarmList)\n        {\n            var deviceInfo = [];\n            var nrows = $('#alarmTable tr').length;\n            nrows = nrows - 1;\n            if (alarmList.length > nrows) alert('Too many alarms to display!');\n            for (var idev = 0; idev < alarmList.length; ++idev)\n            {\n                $('#alarmTable' + idev.toString()).show();\n                $('#alarmTable' + idev.toString() + '_dev').html(alarmList[idev].deviceType);\n                $('#alarmTable' + idev.toString() + '_name').html(alarmList[idev].name);\n                $('#alarmTable' + idev.toString() + '_prop').html(alarmList[idev].prop);\n                $('#alarmTable' + idev.toString() + '_attr').html(alarmList[idev].attr);\n                $('#alarmTable' + idev.toString() + '_value').html(alarmList[idev].value);\n                $('#alarmTable' + idev.toString() + '_unit').html(alarmList[idev].unit);\n                var type = '';\n                if (alarmList[idev].alarm == 1) type = 'LOW';\n                if (alarmList[idev].alarm == 2) type = 'HIGH';\n                if (alarmList[idev].alarm == 3) type = 'LOLO';\n                if (alarmList[idev].alarm == 4) type = 'HIHI';\n                $('#alarmTable' + idev.toString() + '_type').html(type);\n                if (alarmList[idev].alarm < 3)\n                {\n                    $('#alarmTable' + idev.toString() + '_led').attr('src','/img/yellowLight.png');\n                }\n                else\n                {\n                    $('#alarmTable' + idev.toString() + '_led').attr('src','/img/redLight.png');\n                    if (alarmSoundOn)\n                    {\n                        if ((new Date().getTime() - soundLastPlayed) > soundInterval)\n                        {\n                            audioAlarm.play();\n                            soundLastPlayed = new Date().getTime();\n                        }\n                    }\n                    \n                }\n        \n            }\n            for (var idev = alarmList.length; idev < nrows; ++idev)\n            {\n                $('#alarmTable' + idev.toString()).hide();\n            }\n        \n        }\n        function toggleSound()\n        {\n            alarmSoundOn = !alarmSoundOn;\n            var soundButtonText = 'Turn Sound On';\n            if (alarmSoundOn) soundButtonText = 'Turn Sound Off';\n            $('#toggleSoundButton').html(soundButtonText);\n        }",
        "output": "str",
        "x": 930,
        "y": 220,
        "wires": [
            [
                "f98b12be.28903"
            ]
        ]
    },
    {
        "id": "f98b12be.28903",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Alarm Scanner",
        "output": "str",
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "9661ff85.f96c8"
            ]
        ]
    },
    {
        "id": "8923ffe3.37bda",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarAlarmScanner",
        "server": "2b65833e.87911c",
        "client": "",
        "x": 800,
        "y": 740,
        "wires": []
    },
    {
        "id": "60f8d457.92c10c",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "902a8791.29d718"
            ]
        ]
    },
    {
        "id": "6eaf67b8.ba2648",
        "type": "inject",
        "z": "dc20c6e0.0feb98",
        "name": "Every 10 sec",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "'name'",
        "payloadType": "str",
        "x": 140,
        "y": 740,
        "wires": [
            [
                "60f8d457.92c10c"
            ]
        ]
    },
    {
        "id": "902a8791.29d718",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Scan for alarms",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar oldAlarmList = context.get('oldAlarmList')\nif (oldAlarmList == undefined) oldAlarmList = [];\nvar numDevices = objectLength(msg.payload);\nvar props = ['readings', 'settings'];\nvar alarmList = [];\nvar alarmCount = 0;\nfor (var idev = 0; idev < numDevices; ++idev)\n{\n    var device = msg.payload[idev];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == 'scalar')\n            {\n                if (device[keys[ii]].alarm.value > 0)\n                {\n                    alarmList[alarmCount] = \n                    {\n                        deviceType: device.deviceType,\n                        name  : device.name,\n                        prop  : device[keys[ii]].action,\n                        attr  : keys[ii],\n                        value : device[keys[ii]].value,\n                        unit  : device[keys[ii]].unit,\n                        alarm : device[keys[ii]].alarm.value,\n                        id    : device.deviceType + '-' +  device.name + '-' +  device[keys[ii]].action + '-' + keys[ii],\n                        notify: device[keys[ii]].alarm.notify\n                    };\n                    ++alarmCount;\n                }\n            }\n        }\n    }\n}\n\nvar newAlarmList = [];\nvar newAlarmCount = 0;\nfor (var ialarm = 0; ialarm < alarmCount; ++ialarm)\n{\n    var oldAlarm = oldAlarmList.find(oldAlarm => oldAlarm.id === alarmList[ialarm].id);\n    if (oldAlarm == undefined) \n    {\n        newAlarmList[newAlarmCount] = alarmList[ialarm];\n        ++newAlarmCount;\n    }\n}\ncontext.set('oldAlarmList', alarmList);\nreturn [{topic:'alarmList', payload:{topic:'alarmList',payload:alarmList}},{topic:'newAlarmList', payload:newAlarmList}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 740,
        "wires": [
            [
                "8923ffe3.37bda"
            ],
            [
                "fcd3d5a6.7bdaf8"
            ]
        ]
    },
    {
        "id": "1c8b36de.a489c9",
        "type": "sendsms",
        "z": "dc20c6e0.0feb98",
        "creds": "23623a1c.e4ce46",
        "to": "{{msg.to}}",
        "fr": "{{msg.from}}",
        "text": "{{msg.payload}}",
        "unicode": false,
        "x": 1310,
        "y": 800,
        "wires": [
            [
                "30c5692.3ac4c96"
            ]
        ]
    },
    {
        "id": "30c5692.3ac4c96",
        "type": "debug",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1450,
        "y": 800,
        "wires": []
    },
    {
        "id": "fcd3d5a6.7bdaf8",
        "type": "split",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 800,
        "wires": [
            [
                "81b10ec2.0f878"
            ]
        ]
    },
    {
        "id": "81b10ec2.0f878",
        "type": "delay",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 900,
        "y": 800,
        "wires": [
            [
                "77c8c2b5.2b57ec"
            ]
        ]
    },
    {
        "id": "77c8c2b5.2b57ec",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Prepare SMS",
        "func": "if (msg.payload.notify.name.length < 1) return null;\nif (msg.payload.notify.number.length < 1) return null;\nvar type = '';\nif (msg.payload.alarm == 1) type = 'LOW';\nif (msg.payload.alarm == 2) type = 'HIGH';\nif (msg.payload.alarm == 3) type = 'LOLO';\nif (msg.payload.alarm == 4) type = 'HIHI';\nvar message = 'Alarm-' + type + ': ' + msg.payload.id;\nmessage = message + ' is at ' + msg.payload.value.toString() + ' ' + msg.payload.unit\nreturn {topic:'sms',to:msg.payload.notify.number, payload:message, from:'46000000000'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1080,
        "y": 800,
        "wires": [
            [
                "78c1fcc3.ec6164"
            ]
        ]
    },
    {
        "id": "39872684.4aa40a",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "settingsPassword",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "settingsPassword",
        "payload": "SETTINGSPASSWORD",
        "payloadType": "env",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "996ed5f8.da8f88"
            ]
        ]
    },
    {
        "id": "996ed5f8.da8f88",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save Settings Password",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "ba2c1c11.88703",
        "type": "template",
        "z": "fcfe7ca7.f566a",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color:var(--white);\n          padding-bottom: 10px;\n          padding-top: 10px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n          font-weight: 900;\n        }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n          padding: 10px;\n        }\n        .card-body\n        {\n          background-color: var(--color3);\n        }\n        .card-button\n        {\n          color: var(--color5);\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: bold;\n        }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n        }\n        .tableHeading\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .tableText\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .custom-select\n        {\n          color: white;\n          background-color: var(--color3);\n        \n        }\n        .form-control\n        {\n          text-align: center;\n        }\n        .checkbox-align\n        {\n          vertical-align: middle;\n          text-align: center;\n        }\n        .csv-linked\n        {\n            color: blue;\n        }\n        .csv-unlinked\n        {\n            color: red;\n        }\n        .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        div.ui-datepicker\n        {\n            font-size:30px;\n        }",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e4d36fde.932ed",
        "type": "subflow:fcfe7ca7.f566a",
        "z": "f22a539a.a67b3",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "c8d8e93c.2234a8"
            ]
        ]
    },
    {
        "id": "f5a9eda8.5c5bc",
        "type": "template",
        "z": "e3c68b88.d82258",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "966e270e.701e48",
        "type": "subflow:e3c68b88.d82258",
        "z": "8341090a.df9758",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "899d0666.97b868"
            ]
        ]
    },
    {
        "id": "9460eaf0.da7628",
        "type": "subflow:ca529822.9112f8",
        "z": "8341090a.df9758",
        "name": "",
        "x": 620,
        "y": 80,
        "wires": []
    },
    {
        "id": "c104210d.418eb",
        "type": "template",
        "z": "2c5d25cb.3428ca",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a class=\"jumbotron-title big-text bold-text\" href='https://www.hornanpabrantevik.com/'>B&amp;B</a>\n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/apps'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d08de07e.32d22",
        "type": "template",
        "z": "7eddf0fe.4ce23",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.blinky-lite.io/' target='_blank'>\n                        <img src=\"/img/BlinkyLogo.gif\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">{{{payload.title}}}</h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/core'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n    \n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "899d0666.97b868",
        "type": "subflow:2c5d25cb.3428ca",
        "z": "8341090a.df9758",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "9460eaf0.da7628"
            ]
        ]
    },
    {
        "id": "c8d8e93c.2234a8",
        "type": "subflow:7eddf0fe.4ce23",
        "z": "f22a539a.a67b3",
        "x": 430,
        "y": 80,
        "wires": [
            [
                "8a439be9.030ab8"
            ]
        ]
    },
    {
        "id": "72941646.0206b8",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 40,
        "wires": []
    },
    {
        "id": "bb160287.a4943",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 100,
        "wires": []
    },
    {
        "id": "bc45cf67.b90c6",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 160,
        "wires": []
    },
    {
        "id": "f07664a9.ede108",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 220,
        "wires": []
    },
    {
        "id": "58100264.e2a28c",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "vectorPlotter",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "ee46cfff.2056c"
            ]
        ]
    },
    {
        "id": "c10d43eb.a111b",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "vectorPlotter",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 1530,
        "y": 180,
        "wires": []
    },
    {
        "id": "813098f2.aa5c28",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "/vectorPlotter",
        "url": "/vectorPlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "421bd3a6.9feaac"
            ]
        ]
    },
    {
        "id": "43013e03.44494",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n            </tr>\n            <tr>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div class='vert-pad' width=\"100%\">\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Spectrogram</p>\n                    <div class='card-body' align=\"center\">\n                        <div width=\"100%\" id=\"spectrogram\" align=\"center\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div width=\"100%\">\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"freezeButton\" type=\"button\" onclick=\"freezeRun()\"></button>\n            </div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"birdsEyeView()\">Birds Eye</button>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"sliceView()\">Slice View</button>\n            </div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"topView()\">Top View</button>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"right\" >\n                <span class=\"tableHeading\" style=\"font-size: medium;\">Start Time</span>\n            </div>\n            <div class=\"col-md-6\">\n                <span class=\"tableHeading\"  style=\"font-size: medium;\" id=\"startTime\"></span>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\"  align=\"right\">\n                <span class=\"tableHeading\" style=\"font-size: medium;\">Stop Time</span>\n            </div>\n            <div class=\"col-md-6\">\n                <span class=\"tableHeading\" id=\"stopTime\" style=\"font-size: medium;\"></span>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-3\" align=\"right\" >\n                <span class=\"tableHeading\" style=\"font-size: medium;\">PlotSlices</span>\n            </div>\n            <div class=\"col-md-6\">\n                <input class=\"form-control center-justify\" id=\"plotslices\" type=\"text\" value=\"0\" style=\"font-size: medium;\"/>\n            </div>\n        </div>\n    </div>\n    ",
        "output": "str",
        "x": 910,
        "y": 40,
        "wires": [
            [
                "c6c23586.848c58"
            ]
        ]
    },
    {
        "id": "6a7aaea9.6b97f",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 1;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var attrSelect=[];\n        var valSelect=[];\n        var devInfo = [];\n\n        var graph3d = null;\n        var itimeSlice = 0;\n        var timeMax = 32;\n        var dataArray = [];\n        var timeStamp = [];\n        var deltaT = 0;\n        var freeze = false;\n        var sliceViewActive = false;\n        var birdsEyeViewActive = false;\n        var topViewActive = false;\n        var birdsEyeTimeMax = 32;\n        var plotStarted = false;\n        \n        var threedPlotOptions =\n        {\n            width: '850px',\n            height: '600px',\n            style: 'surface',\n            showPerspective: false,\n            showGrid: true,\n            showShadow: false,\n            keepAspectRatio: false,\n            verticalRatio: 0.6,\n            showZAxis: true,\n            xLabel: 'x',\n            yLabel: 'Time',\n            tooltip: true,\n            axisColor: '#ffffff',\n        };\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType: '', name : '',  prop : 'reading', attr : '',device : {}};\n            }\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            $(\"#plotslices\").change(function()\n            {\n                timeMax = Number($(\"#plotslices\").val());\n                if (timeMax < 2)\n                {\n                    alert('Number of plot slices must be greater than 1');\n                    timeMax = 2;\n                }\n                birdsEyeTimeMax = timeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n                dataArray = [];\n                itimeSlice = 0;\n                plotStarted = false;\n            });\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n            setInterval(getDeviceValues, 1000);\n        }\n        function restartPlot()\n        {\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            dataArray = [];\n            itimeSlice = 0;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getDeviceValues':\n                        loadDeviceValues(msg);\n                        break;\n                    default:\n                       break;\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            sendWebSocketMessageObject({topic : 'getDeviceList',payload : {}, 'userID' : userID,});\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getNameList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                });\n        }\n        function nameSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getAttrList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : 'reading'\n                });\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            restartPlot();\n            if (attrSelect[itrace].value == 'notSelected')  return;\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            \n        }\n        function getDeviceValues()\n        {\n            var devList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((devInfo[itrace].deviceType.length > 0) && (devInfo[itrace].name.length > 0)) \n                {\n                    devList[traceCount] = { $and: [ {deviceType : devInfo[itrace].deviceType}, {name : devInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: devList };\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getDeviceValues',\n                    userID      : userID,\n                    queryFilter : queryFilter,\n                });\n \n        }\n        function loadDeviceValues(data)\n        {\n            var devices = data.devices;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0)\n                {\n                    for (idev = 0; idev < devices.length; ++idev)\n                    {\n                        if (devices[idev].deviceType == devInfo[itrace].deviceType)\n                        {\n                            if(devices[idev].name == devInfo[itrace].name)\n                            {\n                                devInfo[itrace].device = devices[idev];\n                                var attr = devInfo[itrace].device[devInfo[itrace].attr];\n                                upDatePlot(attr.value);\n                            }\n                        }\n                    } \n                }\n            }\n        }\n        function upDatePlot(value)\n        {\n            var npts = value[0].length;\n            if(!plotStarted)\n            {\n                dataArray = [];\n                for (var ix = 0; ix < npts; ++ix)\n                {\n                    dataArray[ix] =\n                    {\n                        'x': value[0][ix],\n                        'y': 0,\n                        'z': value[1][ix],\n                        'style': value[1][ix]\n                    };\n                }\n                var container = document.getElementById('spectrogram');\n            \n                graph3d = new vis.Graph3d(container, dataArray, threedPlotOptions);\n                $(\"#startTime\").text(new Date().toLocaleString());\n                $(\"#stopTime\").text(new Date().toLocaleString());\n                graph3d.on('cameraPositionChange', onCameraPositionChange);\n                if (sliceViewActive) sliceView();\n                if (birdsEyeViewActive) birdsEyeView();\n                if (topViewActive) topView();\n                plotStarted = true;\n            }\n            else\n            {\n                if (freeze) return;\n                if (itimeSlice < timeMax)\n                {\n                    timeStamp[itimeSlice] = new Date().getTime();\n                    deltaT = (timeStamp[itimeSlice] - timeStamp[0]) / 1000;\n                    for (var ix = 0; ix < npts; ++ix)\n                    {\n                        dataArray[itimeSlice * npts + ix] =\n                        {\n                            'x': value[0][ix],\n                            'y': deltaT,\n                            'z': value[1][ix],\n                            'style': value[1][ix]\n                        };\n                    }\n                    ++itimeSlice;\n                }\n                else\n                {\n                    for (var itime = 0; itime < (timeMax - 1); ++itime)\n                    {\n                        timeStamp[itime] = timeStamp[itime + 1];\n                        deltaT = (timeStamp[itime] - timeStamp[0]) / 1000;\n                        for (var ix = 0; ix < npts; ++ix)\n                        {\n                            dataArray[itime * npts + ix] =\n                            {\n                                'x': dataArray[(itime + 1) * npts + ix].x,\n                                'y': deltaT,\n                                'z': dataArray[(itime + 1) * npts + ix].z,\n                                'style': dataArray[(itime + 1) * npts + ix].style\n                            };\n                        }\n                    }\n                    timeStamp[timeMax - 1] = new Date().getTime();\n                    deltaT = (timeStamp[timeMax - 1] - timeStamp[0]) / 1000;\n                    for (var ix = 0; ix < npts; ++ix)\n                    {\n                        dataArray[(timeMax - 1) * npts + ix] =\n                        {\n                            'x': value[0][ix],\n                            'y': deltaT,\n                            'z': value[1][ix],\n                            'style': value[1][ix]\n                        };\n                    }\n                }\n                $(\"#startTime\").text(new Date(timeStamp[0]).toLocaleString());\n                $(\"#stopTime\").text(new Date(timeStamp[itimeSlice - 1]).toLocaleString());\n                graph3d.setData(dataArray);\n            }\n        }\n        function freezeRun()\n        {\n            freeze = !freeze;\n            if (freeze)\n            {\n                $(\"#freezeButton\").text('Frozen');\n            }\n            else\n            {\n                $(\"#freezeButton\").text('Running');\n            }\n        }\n        \n        function birdsEyeView()\n        {\n            var horzAngle = 315.0 * 3.1415927 / 180.0;\n            var vertAngle = 45.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = true;\n            topViewActive = false;\n        }\n        function sliceView()\n        {\n            var horzAngle = 0.0 * 3.1415927 / 180.0;\n            var vertAngle = 0.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 1.1});\n            timeMax = 2;\n            $(\"#plotslices\").val(timeMax.toString());\n            itimeSlice = 0;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function topView()\n        {\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = false;\n            topViewActive = true;\n        }\n        function onCameraPositionChange(event)\n        {\n            if (sliceViewActive) sliceView();\n            if (birdsEyeViewActive) birdsEyeView();\n            if (topViewActive) topView();\n        }",
        "output": "str",
        "x": 640,
        "y": 40,
        "wires": [
            [
                "6f9d3e8e.5dd7c"
            ]
        ]
    },
    {
        "id": "6f9d3e8e.5dd7c",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Plotter",
        "output": "str",
        "x": 790,
        "y": 40,
        "wires": [
            [
                "43013e03.44494"
            ]
        ]
    },
    {
        "id": "c6c23586.848c58",
        "type": "subflow:f22a539a.a67b3",
        "z": "b94899c9.b16088",
        "x": 1050,
        "y": 40,
        "wires": []
    },
    {
        "id": "ee46cfff.2056c",
        "type": "json",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "23847e72.ad5052"
            ]
        ]
    },
    {
        "id": "23847e72.ad5052",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getArchiveValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 410,
        "y": 340,
        "wires": [
            [
                "239425dd.8a514a"
            ],
            [
                "c143b50b.37c0a8"
            ],
            [
                "567d6cad.83f094"
            ],
            [
                "80e43fea.99b4b"
            ],
            [
                "e42fbd97.1acb"
            ]
        ]
    },
    {
        "id": "239425dd.8a514a",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getDeviceList",
        "func": "var newMsg = \n{\n    topic           : 'getDeviceList',\n    userID          : msg.payload.userID,\n    payload         : [{},{projection:{deviceType:1, _id:0}}]\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 260,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "567d6cad.83f094",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getAttrList",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getAttrList',\n    userID          : msg.payload.userID,\n    payload         : [{$and : [{deviceType:msg.payload.deviceType}, {name:msg.payload.name}]}, projectionFilter],\n    prop            : msg.payload.prop,\n    name            : msg.payload.name,\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 340,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "80e43fea.99b4b",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getDeviceValues",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getDeviceValues',\n    userID          : msg.payload.userID,\n    payload         : [msg.payload.queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 380,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "cca5ce34.ad466",
        "type": "mongodb3 in",
        "z": "b94899c9.b16088",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "cf416706.322028"
            ]
        ]
    },
    {
        "id": "cf416706.322028",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1070,
        "y": 300,
        "wires": [
            [
                "1f313e3a.8bfc52"
            ],
            [
                "7737092b.94fb48"
            ],
            [
                "bcfe30d9.5f058"
            ],
            [
                "b731442a.4504b8"
            ]
        ]
    },
    {
        "id": "1f313e3a.8bfc52",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse device list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar deviceList = [];\ndeviceList[0] = msg.payload[0].deviceType;\nif (numDevices > 1)\n{\n    for (var idevice = 1; idevice < numDevices; ++idevice)\n    {\n        var deviceAlreadyFound = false;\n        for (ii = 0; ii < idevice; ++ii)\n        {\n            if (msg.payload[idevice].deviceType == deviceList[ii]) deviceAlreadyFound = true;\n        }\n        if (!deviceAlreadyFound) deviceList[idevice] = msg.payload[idevice].deviceType;\n    }\n}\n\nreturn {\n    topic:'getDeviceList',\n    payload:{\n        topic           : 'getDeviceList',\n        payload         : deviceList,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 240,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "bcfe30d9.5f058",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse attrList",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar device = msg.payload[0];\nvar attrList = [];\nvar keys = Object.keys(device);\nfor (var ii = 0; ii < keys.length; ++ii)\n{\n    if (device[keys[ii]].hasOwnProperty('type'))\n    {\n        if (device[keys[ii]].type == 'vector')\n        {\n            if (device[keys[ii]].action == msg.prop)\n            {\n                attrList.push(keys[ii]);\n            }\n        }\n    }\n}\nif (attrList.length < 1) return null;\nreturn {\n    topic:'getAttrList',\n    payload:{\n        topic           : 'getAttrList',\n        userID          : msg.userID,\n        prop            : msg.prop,\n        name            : msg.name,\n        trace           : msg.trace,\n        attrList        : attrList,\n        deviceType      : msg.deviceType,\n\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 320,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "b731442a.4504b8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse getDeviceValues",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar devices = [];\nfor (var idev = 0; idev < numDevices; ++idev) devices[idev] = msg.payload[idev];\nreturn {\n    topic:'getDeviceValues',\n    payload:{\n        topic           : 'getDeviceValues',\n        userID          : msg.userID,\n        devices         : devices,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 360,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "e42fbd97.1acb",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getArchiveValues",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1, \n        [msg.payload.device.attr]   :   1\n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n    maxPtsToPlot    : msg.payload.maxPtsToPlot,\n    itrace          : msg.payload.device.itrace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 420,
        "wires": [
            [
                "3ea29ec6.e9bfa2"
            ]
        ]
    },
    {
        "id": "3ea29ec6.e9bfa2",
        "type": "mongodb3 in",
        "z": "b94899c9.b16088",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 870,
        "y": 500,
        "wires": [
            [
                "22a317f1.3a10b8"
            ]
        ]
    },
    {
        "id": "22a317f1.3a10b8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic:'getArchiveValues',\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {itrace: msg.itrace, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nvar maxPts = msg.maxPtsToPlot;\nvar nstep = numRecords / msg.maxPtsToPlot;\nif (nstep < 1.0) \n{\n    nstep = 1.0;\n    maxPts = numRecords;\n}\nvar icnt = 0;\n\nwhile(icnt < maxPts)\n{\n    var index = Math.round(icnt * nstep);\n    trace[icnt] = {timeStamp: records[index].timeStamp, value: records[index][msg.device.attr]};\n    ++icnt\n}\n\nreturn {\n    topic:'getArchiveValues',\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {itrace: msg.itrace, trace:trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 540,
        "wires": [
            [
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "a45c73b4.cd0d1",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "vectorArchivePlotter",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "ee46cfff.2056c"
            ]
        ]
    },
    {
        "id": "aa9e819c.38f8f",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "vectorArchivePlotter",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 1600,
        "y": 520,
        "wires": []
    },
    {
        "id": "f424cab0.278588",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "/vectorArchivePlotter",
        "url": "/vectorArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "50b5b5d7.93c8ac"
            ]
        ]
    },
    {
        "id": "a2e15003.8612b",
        "type": "subflow:f22a539a.a67b3",
        "z": "b94899c9.b16088",
        "x": 1050,
        "y": 140,
        "wires": []
    },
    {
        "id": "fd934b09.f641b8",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 1;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var attrSelect=[];\n        var devInfo = [];\n        \n        var startDate = 0;\n        var stopDate = 0;\n        var csvFile = [];\n\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType  : '', name : '', prop : 'reading', attr : '',device : {}};\n\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n                csvFile[itrace] = null;\n\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#plotViewButtons').hide();\n        }\n        function onWebSocketOpen()\n        {\n            sendWebSocketMessageObject({topic : 'getDeviceList',payload : {}, 'userID' : userID,});\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getArchiveValues':\n                        archiveList.push(msg.payload);\n                        if (archiveRequestList.length > 0)\n                        {\n                            getArchiveValues();\n                        }\n                        else\n                        {\n                            plotArchive();\n                        }\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getNameList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                });\n        }\n        function nameSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getAttrList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : 'reading'\n                });\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            if (attrSelect[itrace].value == 'notSelected')  return;\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            \n        }\n        function getArchiveData()\n        {\n\n            archiveRequestList = [];\n            archiveList = [];\n            startDate = new Date($( \"#startDate\" ).val()).getTime();\n            stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0) \n                {\n                    archiveRequestList[traceCount] = \n                    {\n                        deviceType  : devInfo[itrace].deviceType, \n                        name        : devInfo[itrace].name, \n                        prop        : devInfo[itrace].prop, \n                        attr        : devInfo[itrace].attr,\n                        startDate: startDate, \n                        stopDate: stopDate,\n                        itrace  :   itrace\n                    };\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            $('#plotSetupTable').hide();\n            $('#timePlotCard').hide();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            }\n            messageDialog('Alert', 'Wait!', 'Requesting data ...');\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var maxPtsToPlot = Number($( \"#maxPtsToPlot\" ).val());\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getArchiveValues',\n                    userID      : userID,\n                    device      : archiveRequestList[0],\n                    maxPtsToPlot: maxPtsToPlot\n                });\n            archiveRequestList.shift();\n            return;\n        }\n        function plotArchive()\n        {\n            $( \"#messageDialog\" ).dialog('close');\n            $('#plotSetupTable').show();\n            \n            $('#plotViewButtons').show();\n            $('#timePlot').show();\n            makeCsvFile();\n            var npts = archiveList[0].trace.length;\n            var oodataArray = [];\n            \n            var nxMax = archiveList[0].trace[0].value[0].length;\n            for (var ii = 0; ii < npts; ++ii)\n            {\n                var yvalue = Math.round((archiveList[0].trace[ii].timeStamp - archiveList[0].trace[0].timeStamp)/3600) / 1000;\n                for (var ix = 0; ix < nxMax; ++ix)\n                {\n                    var zvalue = archiveList[0].trace[ii].value[1][ix];\n                    oodataArray[ii * nxMax + ix] =\n                    {\n                        'x': archiveList[0].trace[ii].value[0][ix],\n                        'y': yvalue,\n                        'z': zvalue,\n                        'style': zvalue\n                    };\n                }\n            }\n            var options = \n            {\n                width:  '100%',\n                height: '800px',\n                style: 'surface',\n                showPerspective: false,\n                showGrid: true,\n                showShadow: false,\n                keepAspectRatio: false,\n                verticalRatio: 1.0,\n                showZAxis: true,\n                yCenter: '50%',\n                xLabel: 'x',\n                yLabel: 'Time (hr)',\n                zLabel: 'y',\n                tooltip: true,\n                axisColor: '#000000'\n            };\n        \n            // create a graph3d\n            var container = document.getElementById('timePlot');\n        \n            graph3d = new vis.Graph3d(container, oodataArray, options);\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        }\n        function changePlotView(horzAngleDeg, vertAngleDeg)\n        {\n            var horzAngle = horzAngleDeg * 3.1415927 / 180.0;\n            var vertAngle = vertAngleDeg * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        }\n        function makeCsvFile ()\n        {\n            var itrace = 0;\n            var dataString = '';\n            var startT = archiveList[0].trace[0].timeStamp;\n        \n            dataString = dataString + 'Device,' + devInfo[0].deviceType + ',' + devInfo[0].name + ',' + devInfo[0].prop + ',' + devInfo[0].attr  +'\\n';\n            dataString = dataString + 'StartDate,' + new Date(startT).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}) + '\\n';\n            dataString = dataString + 'StartDate (mS),' + startT.toString() + '\\n';\n            dataString = dataString + 'Time (sec),  \\n 0,x';\n            for (var ipt = 0; ipt < archiveList[0].trace[0].value[0].length; ++ipt) dataString = dataString + ',' + archiveList[0].trace[0].value[0][ipt];\n            dataString = dataString + '\\n';\n\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n\n                var x = (archiveList[0].trace[ii].timeStamp - startT) / 1000;\n                dataString = dataString + x.toString() + ',y';\n                for (var ipt = 0; ipt < archiveList[0].trace[ii].value[1].length; ++ipt) dataString = dataString + ',' + archiveList[0].trace[ii].value[1][ipt];\n                dataString = dataString + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[itrace] !== null) {\n              window.URL.revokeObjectURL(csvFile[itrace]);\n            }\n        \n            csvFile[itrace] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ itrace.toString()).css('color', 'blue');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'underline');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            $('#csv'+ itrace.toString()).attr(\"href\", csvFile[itrace]);\n            $('#csv'+ itrace.toString()).attr(\"download\", devInfo[itrace].deviceType + '-' + devInfo[itrace].name + '-' + devInfo[itrace].prop + '-' + devInfo[itrace].attr + '.csv');\n        \n        }\n",
        "output": "str",
        "x": 650,
        "y": 140,
        "wires": [
            [
                "e01d1110.ea59"
            ]
        ]
    },
    {
        "id": "e01d1110.ea59",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Archive Plotter",
        "output": "str",
        "x": 790,
        "y": 140,
        "wires": [
            [
                "7bae9ecc.c5e5b"
            ]
        ]
    },
    {
        "id": "7bae9ecc.c5e5b",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"5%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv0' href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id='plotSetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                        <td width=10% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"500\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n       </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotTable'>\n                    <tr valign=\"top\">\n                        <td width='5%'>\n                            <table id='plotViewButtons'>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"changePlotView(315,45)\">Birds Eye</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"overviewButton\" type=\"button\" onclick=\"changePlotView(0,90)\" >Overview</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"xviewButton\"    type=\"button\" onclick=\"changePlotView(0,0)\"  >X View</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                        <td width='95%' >\n                            <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 910,
        "y": 140,
        "wires": [
            [
                "a2e15003.8612b"
            ]
        ]
    },
    {
        "id": "4caf3fb1.f3572",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "maxDbSize",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "maxDbSize",
        "payload": "MAXDBSIZE",
        "payloadType": "env",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "2208dd06.5d2ba2"
            ]
        ]
    },
    {
        "id": "2208dd06.5d2ba2",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save maxDbSize",
        "func": "global.set(msg.topic,Number(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "45a7d04b.f97db",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 660,
        "wires": [
            [
                "908d7fde.10525"
            ]
        ]
    },
    {
        "id": "f62ae826.1bfb58",
        "type": "mqtt in",
        "z": "8475ab9.3d26058",
        "name": "Subscribe Readings",
        "topic": "$(ARCHIVETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "ebb8ce.0c3d873"
            ]
        ]
    },
    {
        "id": "ebb8ce.0c3d873",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "764116fd.f6e648"
            ]
        ]
    },
    {
        "id": "81c39fe.b208a6",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload.mqttDevice.deviceType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "vad-kul",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 160,
        "wires": [
            [
                "5f767381.0ac26c",
                "3de68366.1ae5cc"
            ]
        ]
    },
    {
        "id": "764116fd.f6e648",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Check System Sync and Split MQTT topic",
        "func": "if (!global.get('systemClockSynchronized')) return null;\nvar mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 160,
        "wires": [
            [
                "81c39fe.b208a6"
            ]
        ]
    },
    {
        "id": "908d7fde.10525",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getArchive",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 660,
        "wires": [
            [
                "b6b8b063.9f62f"
            ],
            [
                "d7ff72cc.e5057"
            ]
        ]
    },
    {
        "id": "d7ff72cc.e5057",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 680,
        "wires": [
            [
                "2132a017.ba23f",
                "ee0ee61b.770a18"
            ]
        ]
    },
    {
        "id": "2132a017.ba23f",
        "type": "mqtt out",
        "z": "8475ab9.3d26058",
        "name": "Publish Setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 880,
        "y": 680,
        "wires": []
    },
    {
        "id": "347f36fe.94ed7a",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "Setup accessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n    } \n};\nvar queryFilter = \n{\n    userID: msg.userID\n}\nvar settingLogEntry = {topic:msg.topic, userID: msg.userID, device:msg.payload, timeStamp: new Date().getTime()};\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    payload         : [queryFilter, projectionFilter],\n    settingLogEntry : settingLogEntry\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "e24c42fb.5b61a"
            ]
        ]
    },
    {
        "id": "e24c42fb.5b61a",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "findOne",
        "x": 500,
        "y": 160,
        "wires": [
            [
                "c006fe2c.abbb1"
            ]
        ]
    },
    {
        "id": "c006fe2c.abbb1",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "setup settingLogEntry",
        "func": "var settingLogEntry = \n{\n    topic       :   msg.settingLogEntry.topic, \n    userID      :   msg.settingLogEntry.userID,\n    device      :   msg.settingLogEntry.device,\n    timeStamp   :   msg.settingLogEntry.timeStamp,\n    ipInfo      :   msg.payload\n}\nreturn {topic: 'settingLogEntry', payload: settingLogEntry};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 160,
        "wires": [
            [
                "9c60f57c.b85078"
            ]
        ]
    },
    {
        "id": "9c60f57c.b85078",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "insertOne",
        "x": 990,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ee0ee61b.770a18",
        "type": "subflow:e13648d6.d698c8",
        "z": "8475ab9.3d26058",
        "x": 870,
        "y": 740,
        "wires": []
    },
    {
        "id": "2e134ccf.236a14",
        "type": "subflow:e13648d6.d698c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 1230,
        "y": 560,
        "wires": []
    },
    {
        "id": "b9df3f26.ab53f",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "d1d9e12b.926ff"
            ]
        ]
    },
    {
        "id": "895ba39c.86e59",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "a9a62959.7c01e8"
            ]
        ]
    },
    {
        "id": "aa17ff35.7cdfd",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "895ba39c.86e59"
            ]
        ]
    },
    {
        "id": "d1d9e12b.926ff",
        "type": "http response",
        "z": "ca529822.9112f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 40,
        "wires": []
    },
    {
        "id": "c4ed2505.8c07e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var projectName = '{{{payload.projectname}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n        var wsConnected = false;\n\n        function webSocketConnected()\n        {\n            return wsConnected;\n        }\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                wsConnected = true;\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                wsConnected = false;\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n                wsConnectC();\n            };\n        }\n        function sendWebSocketMessageObject(message)\n        {\n            if (!webSocketConnected())\n            {\n                console.log(\"Reconnecting WebSocket\");\n                wsConnectC();\n                setTimeout(function(){ ws.send(JSON.stringify(message)); }, 2000);\n            }\n            else\n            {\n                ws.send(JSON.stringify(message));\n            }\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n            if ({{{payload.setServerTimeFlag}}})\n            {\n                var windowLocation = window.location.href\n                if (window.location.href.indexOf('/setServerTime') < 0) \n                {\n                    window.location.replace('/setServerTime?parentRef=' + windowLocation);\n                }\n            }\n        });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n       function sendSettingToMqtt(mqttMessage)\n        {\n            var socketMessage = \n            {\n                topic       : 'sendSettingToMqtt',\n                mqttMessage : mqttMessage,\n                userID      : userID\n            };\n            sendWebSocketMessageObject({topic : 'sendSettingToMqtt', mqttMessage : mqttMessage, userID : userID});\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "aa17ff35.7cdfd"
            ]
        ]
    },
    {
        "id": "99bb1519.85fc18",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "Get project name and userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['projectname'] = global.get('projectName')\nmsg.payload['userID'] = getRandomInt(32768);\nmsg.payload['setServerTimeFlag'] = !global.get('systemClockSynchronized');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 40,
        "wires": [
            [
                "c4ed2505.8c07e8"
            ]
        ]
    },
    {
        "id": "e87e796a.685178",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        node.warn('Booger');\n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 40,
        "wires": [
            [
                "b9df3f26.ab53f",
                "fe4fcd1f.16e39"
            ]
        ]
    },
    {
        "id": "fe4fcd1f.16e39",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nvar url = msg.req.url;\nreturn {\n    topic:'clientInfo', \n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {url:url, userID:msg.payload.userID},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 100,
        "wires": [
            [
                "8382c3d.0aeea4"
            ]
        ]
    },
    {
        "id": "8382c3d.0aeea4",
        "type": "http request",
        "z": "ca529822.9112f8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1130,
        "y": 140,
        "wires": [
            [
                "d0cd3f7.e986fc"
            ]
        ]
    },
    {
        "id": "d0cd3f7.e986fc",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = msg.extraInfo.url;\ndata['userID'] = msg.extraInfo.userID;\ndata['timeStamp'] = new Date().getTime();\nreturn {topic:'ipData', payload:data};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 180,
        "wires": [
            [
                "b7f38426.fa6658"
            ]
        ]
    },
    {
        "id": "a9a62959.7c01e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "e87e796a.685178"
            ]
        ]
    },
    {
        "id": "b7f38426.fa6658",
        "type": "mongodb3 in",
        "z": "ca529822.9112f8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "insertOne",
        "x": 1190,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "275c08.dff3c3f8",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/core",
        "url": "/core",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "9d23d6da.506538"
            ]
        ]
    },
    {
        "id": "59315144.42ea4",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class='container' width=\"100%\">\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarPlotter\" >Scalar Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarArchivePlotter\" >Scalar Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarViewer\" >Scalar Viewer</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarAlarmScanner\" >Scalar Alarm Scanner</a> \n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorPlotter\" >Vector Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorArchivePlotter\" >Vector Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/access-log\" >Access Log</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/settings-log\" >Settings Log</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/\" >Custom App Index</a> \n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1010,
        "y": 60,
        "wires": [
            [
                "a9d47de1.dae3f"
            ]
        ]
    },
    {
        "id": "a9d47de1.dae3f",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky-Lite Core",
        "output": "str",
        "x": 1130,
        "y": 60,
        "wires": [
            [
                "1e988252.38bf7e"
            ]
        ]
    },
    {
        "id": "f1353403.af8cb8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 870,
        "y": 60,
        "wires": [
            [
                "59315144.42ea4"
            ]
        ]
    },
    {
        "id": "2666eb47.cb2c24",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/access-log",
        "url": "/access-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "52f89484.3e06ac"
            ]
        ]
    },
    {
        "id": "c41bff2c.e8b63",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td align=\"center\">\n                            <span>Start Date</span>\n                        </td>\n                        <td align=\"center\">\n                            <span>Stop Date</span>\n                        </td>\n                        <td align=\"center\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n                <table width='100%' id='accessLogTable'>\n                    <thead>\n                        <tr>\n                            <th width='10%'>url</th>\n                            <th width='10%'>ip</th>\n                            <th width='7%' >country</th>\n                            <th width='6%' >region</th>\n                            <th width='7%' >city</th>\n                            <th width='20%'>rdns</th>\n                            <th width='10%'>isp</th>\n                            <th width='10%'>timezone</th>\n                            <th width='10%'>datetime</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"accessLogTableBody\"></tbody>\n                </table>\n            </div>\n       </div>\n    </div>\n",
        "output": "str",
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "56402369.244bec"
            ]
        ]
    },
    {
        "id": "56402369.244bec",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Access Log",
        "output": "str",
        "x": 1130,
        "y": 120,
        "wires": [
            [
                "e4c1258f.54e248"
            ]
        ]
    },
    {
        "id": "3836124.ae654ee",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getAccessLog':\n                        displayData(msg);\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            $(\"#accessLogTableBody\").remove();\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getAccessLog',\n                    userID      : userID,\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                });\n            \n        }\n        function displayData(msg)\n        {\n            var markup = '<tbody id=\"accessLogTableBody\">';\n            for (var ii = 0; ii < msg.payload.length; ++ii)\n            {\n                markup = markup + addRow(msg.payload[ii]);\n            }\n            markup = markup + '</tbody>';\n            $(\"#accessLogTable\").append(markup);\n        }\n\n        function addRow(record)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + record.url + '</td>';\n            markup = markup + '<td>' + record.ip + '</td>';\n            markup = markup + '<td>' + record.country + '</td>';\n            markup = markup + '<td>' + record.region + '</td>';\n            markup = markup + '<td>' + record.city + '</td>';\n            markup = markup + '<td>' + record.rdns + '</td>';\n            markup = markup + '<td>' + record.isp + '</td>';\n            markup = markup + '<td>' + record.timezone + '</td>';\n            markup = markup + '<td>' + record.datetime + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n",
        "output": "str",
        "x": 870,
        "y": 120,
        "wires": [
            [
                "c41bff2c.e8b63"
            ]
        ]
    },
    {
        "id": "47b50e0.c7354f4",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "adfb1983.8d4b08"
            ]
        ]
    },
    {
        "id": "adfb1983.8d4b08",
        "type": "json",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 200,
        "wires": [
            [
                "b9aba820.9dbf78"
            ]
        ]
    },
    {
        "id": "b9aba820.9dbf78",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup AccessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "aef63175.9e1f7"
            ]
        ]
    },
    {
        "id": "aef63175.9e1f7",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "find.toArray",
        "x": 780,
        "y": 200,
        "wires": [
            [
                "c60d9fa2.da0d4"
            ]
        ]
    },
    {
        "id": "c60d9fa2.da0d4",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.name,\n        payload:{\n            topic           : 'getAccessLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getAccessLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "7a08c826.6c9ca8"
            ]
        ]
    },
    {
        "id": "7a08c826.6c9ca8",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 1240,
        "y": 200,
        "wires": []
    },
    {
        "id": "7db6e983.ea0948",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/settings-log",
        "url": "/settings-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "13e19a9a.409655"
            ]
        ]
    },
    {
        "id": "207a1450.67f23c",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td align=\"center\">\n                            <span>Start Date</span>\n                        </td>\n                        <td align=\"center\">\n                            <span>Stop Date</span>\n                        </td>\n                        <td align=\"center\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n                <table width='100%' id='settingsLogTable'>\n                    <thead>\n                        <tr>\n                            <th width='10%' >url</th>\n                            <th width='10%' >device</th>\n                            <th width='10%' >ip</th>\n                            <th width='7%'  >country</th>\n                            <th width='6%'  >region</th>\n                            <th width='7%'  >city</th>\n                            <th width='20%' >rdns</th>\n                            <th width='10%' >isp</th>\n                            <th width='10%' >timezone</th>\n                            <th width='10%' >datetime</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"settingsLogTableBody\"></tbody>\n                </table>\n            </div>\n       </div>\n   </div>\n    <div id=\"showDeviceDialog\" title=\"Device\" class='card'>\n        <p class='card-title' id='showDeviceDialogName'>Device</p>\n        <div class='card-body'>\n            <table id='showDeviceTable' width='100%'>\n                <thead>\n                    <tr>\n                        <th width='50%' >Attribute</th>\n                        <th width='50%' >Value</th>\n                    </tr>\n                </thead>\n                <tbody id=\"showDeviceTableBody\"></tbody>\n            </table>\n        </div>\n    </div>  ",
        "output": "str",
        "x": 1010,
        "y": 280,
        "wires": [
            [
                "c3c60f3c.51f22"
            ]
        ]
    },
    {
        "id": "c3c60f3c.51f22",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Settings Log",
        "output": "str",
        "x": 1130,
        "y": 280,
        "wires": [
            [
                "1f057b8c.e3a574"
            ]
        ]
    },
    {
        "id": "78d16800.4adc18",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "61089c8b.87fe94"
            ]
        ]
    },
    {
        "id": "61089c8b.87fe94",
        "type": "json",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "8d3e512a.420f"
            ]
        ]
    },
    {
        "id": "8d3e512a.420f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup AccessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getSettingsLog',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "ce493245.30ca8"
            ]
        ]
    },
    {
        "id": "ce493245.30ca8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "find.toArray",
        "x": 780,
        "y": 360,
        "wires": [
            [
                "e1eb29b.c5c23d8"
            ]
        ]
    },
    {
        "id": "e1eb29b.c5c23d8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.name,\n        payload:{\n            topic           : 'getSettingsLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getSettingsLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 360,
        "wires": [
            [
                "89be3294.49e69"
            ]
        ]
    },
    {
        "id": "89be3294.49e69",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 1250,
        "y": 360,
        "wires": []
    },
    {
        "id": "3ff05971.6144b6",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var settingsHistory = null;\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getSettingsLog':\n                        settingsHistory = msg.payload;\n                        displayData();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            settingsHistory = null;\n            $(\"#settingsLogTableBody\").remove();\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getSettingsLog',\n                    userID      : userID,\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                });\n            \n        }\n        function displayData()\n        {\n            var markup = '<tbody id=\"settingsLogTableBody\">';\n            for (var ii = 0; ii < settingsHistory.length; ++ii)\n            {\n                markup = markup + addRow(ii);\n            }\n            markup = markup + '</tbody>';\n            $(\"#settingsLogTable\").append(markup);\n        }\n\n        function addRow(ii)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.url + '</td>';\n            markup = markup + '<td>' \n                +  '<button onclick=\"displayDevice(' + ii.toString() + ')\">' + settingsHistory[ii].device.deviceType  + '-' + settingsHistory[ii].device.name + '</button>' \n                + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.ip + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.country + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.region + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.city + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.rdns + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.isp + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.timezone + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.datetime + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n        function displayDevice(index)\n        {\n            var actionArray = [];\n            var attrList = [];\n            var keys = Object.keys(settingsHistory[index].device);\n            for (var ii = 0; ii < keys.length; ++ii)\n            {\n                if (settingsHistory[index].device[keys[ii]].hasOwnProperty('type'))\n                {\n                    if (settingsHistory[index].device[keys[ii]].type == 'scalar')\n                    {\n                        if (settingsHistory[index].device[keys[ii]].action == 'setting')\n                        {\n                            actionArray.push(settingsHistory[index].device[keys[ii]]);\n                            attrList.push(keys[ii]);\n                        }\n                    }\n                }\n            }\n\n            var time = new Date(settingsHistory[index].timeStamp).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', '');\n\n            $( \"#showDeviceDialogName\" ).html(settingsHistory[index].device.name + ' ' + time);\n            $( \"#showDeviceTableBody\" ).remove();\n            var markup = '<tbody id=\"showDeviceTableBody\">';\n\n            for (var ii = 0; ii < actionArray.length; ++ii)\n            {\n                markup = markup +'<tr>';\n                markup = markup + '<td align=\"left\">' + attrList[ii] + '</td>';\n                markup = markup + '<td>' + actionArray[ii].value.toString() + '</td>';\n                markup = markup + '</tr>';\n            }\n            markup = markup + '</tbody>';\n            $(\"#showDeviceTable\").append(markup);\n\n            $( \"#showDeviceDialog\" ).dialog( \"option\", \"title\", \"Device Setting\"); \n            $( \"#showDeviceDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#showDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Close\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n",
        "output": "str",
        "x": 870,
        "y": 280,
        "wires": [
            [
                "207a1450.67f23c"
            ]
        ]
    },
    {
        "id": "4140c1ee.dca18",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 700,
        "wires": [
            [
                "8bfd61eb.0f8f1"
            ]
        ]
    },
    {
        "id": "8bfd61eb.0f8f1",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "remove 127.0.0.1 from settings log",
        "func": "var queryFilter = \n{\n    'ipInfo.ip' : '127.0.0.1'\n}\nvar newMsg = \n{\n    topic           : 'remove127',\n    payload         : [queryFilter, null],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 700,
        "wires": [
            [
                "f7ff007a.8d8b"
            ]
        ]
    },
    {
        "id": "f7ff007a.8d8b",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "findAndRemove",
        "x": 710,
        "y": 700,
        "wires": [
            [
                "ab1257ae.74fda8"
            ]
        ]
    },
    {
        "id": "ab1257ae.74fda8",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "79a0dc4b.21aaa4",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "d3d9bc03.02e38"
            ]
        ]
    },
    {
        "id": "d3d9bc03.02e38",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "remove 127.0.0.1 from access log",
        "func": "var queryFilter = \n{\n    'ip' : '127.0.0.1'\n}\nvar newMsg = \n{\n    topic           : 'remove127',\n    payload         : [queryFilter, null],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 780,
        "wires": [
            [
                "7ffae9ab.87bee8"
            ]
        ]
    },
    {
        "id": "7ffae9ab.87bee8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "findAndRemove",
        "x": 710,
        "y": 780,
        "wires": [
            [
                "35a0f533.d24c2a"
            ]
        ]
    },
    {
        "id": "35a0f533.d24c2a",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "1e988252.38bf7e",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1270,
        "y": 60,
        "wires": []
    },
    {
        "id": "e4c1258f.54e248",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1270,
        "y": 120,
        "wires": []
    },
    {
        "id": "1f057b8c.e3a574",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1270,
        "y": 280,
        "wires": []
    },
    {
        "id": "80b3fbd.ba21908",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getNameList",
        "func": "var newMsg = \n{\n    topic           : 'getNameList',\n    userID          : msg.payload.userID,\n    payload         : [{deviceType:msg.payload.deviceType},{projection:{name:1, _id:0}}],\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 340,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "818972ac.61492",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse name list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numNames = objectLength(msg.payload);\nvar nameList = [];\n\nfor (var iname = 0; iname < numNames; ++iname)\n{\n    nameList[iname] = msg.payload[iname].name;\n}\nreturn {\n    topic:'getNameList',\n    payload:{\n        topic           : 'getNameList',\n        nameList        : nameList,\n        userID          : msg.userID,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 340,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "fa0c0cab.d9876",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var editedTrace = -1;\n        \n        function onDocumentReadySpecial()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#editDeviceButton'+ itrace.toString()).hide();\n            }\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getJwtToken':\n                    loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    break;\n                default:\n                // code block\n            }\n        }\n        $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" ); permitGetDeviceValues = true;},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(itrace)\n        {\n            permitGetDeviceValues = false;\n            editedTrace = itrace;\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\");    \n            $( \"#editDeviceDialogAttribute\").html(devInfo[itrace].deviceType + '-'  + devInfo[itrace].name + '-'  + devInfo[itrace].prop + '-'  + devInfo[itrace].attr);\n            var attr = devInfo[itrace].device[devInfo[itrace].attr];\n            $( \"#attrValue\").val(attr.value);\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = devInfo[editedTrace].device[devInfo[editedTrace].attr];\n            if (isNaN($('#attrValue').val()) \n                || isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                permitGetDeviceValues = true;\n                acknowledgeDialog('Error', 'Entry not a number!', attr.attr);\n                return;\n            }\n\n            attr.value = Number($( \"#attrValue\").val());\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n//            console.log(devInfo[editedTrace].device);\n            var mqttMessage = \n            {\n                topic   : projectName + '/' + devInfo[editedTrace].device.deviceType + '/' + devInfo[editedTrace].device.name + '/setting',\n                payload :  devInfo[editedTrace].device\n            };\n            sendSettingToMqtt(mqttMessage);\n            permitGetDeviceValues = true;\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n            $('#editDeviceButton'+ itrace.toString()).hide();\n        }\n        function attrSelectedSpecial(itrace)\n        {\n            $('#editDeviceButton'+ itrace.toString()).show();\n        }\n\n",
        "output": "str",
        "x": 670,
        "y": 160,
        "wires": [
            [
                "93a819a0.6e9808"
            ]
        ]
    },
    {
        "id": "93a819a0.6e9808",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 900,
        "y": 160,
        "wires": [
            [
                "64bfcc43.f50934"
            ]
        ]
    },
    {
        "id": "e98d4d33.bcca2",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.javascript.specialscalar}}}\n{{{payload.javascript.scalardevicemenu}}}",
        "output": "str",
        "x": 420,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "da88a362.516c9",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 900,
        "y": 40,
        "wires": [
            [
                "662fe630.391fd8"
            ]
        ]
    },
    {
        "id": "7d3145f.8eb39bc",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 900,
        "y": 100,
        "wires": [
            [
                "c767ad27.32df7"
            ]
        ]
    },
    {
        "id": "78c1fcc3.ec6164",
        "type": "debug",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1270,
        "y": 880,
        "wires": []
    },
    {
        "id": "c143b50b.37c0a8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getNameList",
        "func": "var newMsg = \n{\n    topic           : 'getNameList',\n    userID          : msg.payload.userID,\n    payload         : [{deviceType:msg.payload.deviceType},{projection:{name:1, _id:0}}],\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 300,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "7737092b.94fb48",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse name list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numNames = objectLength(msg.payload);\nvar nameList = [];\n\nfor (var iname = 0; iname < numNames; ++iname)\n{\n    nameList[iname] = msg.payload[iname].name;\n}\nreturn {\n    topic:'getNameList',\n    payload:{\n        topic           : 'getNameList',\n        nameList        : nameList,\n        userID          : msg.userID,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 280,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "aea924a9.6a9e68",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/device",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "fe60c45b.b5b258",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 590,
        "y": 920,
        "wires": [
            [
                "5610900e.5ca0b"
            ]
        ]
    },
    {
        "id": "5610900e.5ca0b",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 920,
        "wires": []
    },
    {
        "id": "7db15dac.050a44",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Prep query",
        "func": "var queryMsg = \n[\n    {\n        $and    :\n        [\n            {\n                deviceType  :   msg.payload.deviceType\n            },\n            {\n                name        :   msg.payload.name\n            }\n        ]\n    },\n    {\n        projection: \n        {\n            _id :   0\n        }\n    }\n];\nmsg.payload = queryMsg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 920,
        "wires": [
            [
                "fe60c45b.b5b258"
            ]
        ]
    },
    {
        "id": "281ae8e3.adc998",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "http://braincool-controlbox-01.local/device?deviceType=chillDetector&name=003",
        "info": "",
        "x": 340,
        "y": 880,
        "wires": []
    },
    {
        "id": "6427e682.999898",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "Inject after 2 seconds",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1060,
        "wires": [
            [
                "58b2c46f.831b8c"
            ]
        ]
    },
    {
        "id": "58b2c46f.831b8c",
        "type": "exec",
        "z": "90f83725.6dae08",
        "command": "timedatectl",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Get System Time Data",
        "x": 400,
        "y": 1060,
        "wires": [
            [
                "93bceb65.3003d8"
            ],
            [],
            []
        ]
    },
    {
        "id": "93bceb65.3003d8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check system time sync",
        "func": "var splitString = msg.payload.split('\\n');\ntimeInfo = {};\nfor (ii = 0; ii < splitString.length; ++ii)\n{\n    if (splitString[ii].indexOf(':') >= 0)\n    {\n        var timeKey = splitString[ii].substring(0,splitString[ii].indexOf(':'));\n        if (timeKey.indexOf(' ') == 0) timeKey = timeKey.substring(1);\n        var timeData = splitString[ii].substring(splitString[ii].indexOf(':') + 1);\n        if (timeData.indexOf(' ') == 0) timeData = timeData.substring(1);\n        timeKey = timeKey.replace(/\\s/g,'');\n        timeInfo[timeKey] = timeData;\n    }\n}\nvar systemClockSynchronized = true;\nif (timeInfo['Systemclocksynchronized'] == 'no') systemClockSynchronized = false;\nglobal.set('systemClockSynchronized', systemClockSynchronized);\nreturn {topic:'timeInfo',payload:timeInfo};",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 1040,
        "wires": [
            [
                "95fa04ef.3dc7a8"
            ]
        ]
    },
    {
        "id": "95fa04ef.3dc7a8",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 830,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7d8868df.dde518",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/setServerTime",
        "url": "/setServerTime",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "ffb289f5.f43748"
            ]
        ]
    },
    {
        "id": "c08f345e.b91608",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12' align='center'>\n                <input class=\"form-control big-text\" id=\"serverTime\" type=\"text\"/>\n            </div>\n       </div>\n    </div>\n",
        "output": "str",
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "825f0c7f.2dbd8"
            ]
        ]
    },
    {
        "id": "825f0c7f.2dbd8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Set System Time",
        "output": "str",
        "x": 1130,
        "y": 440,
        "wires": [
            [
                "e7584802.07eb68"
            ]
        ]
    },
    {
        "id": "4c2ffe1e.b39ee",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $( function()\n            {\n                $('#serverTime').datetimepicker();\n            } );\n            jQuery.datepicker._hideDatepicker = function() {setServerTime();};\n        }\n        function onWebSocketOpen()\n        {\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getServerTime',\n                    userID      : userID\n                });\n         }\n        function onWebSocketClose()\n        {\n            \n        }\n\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getServerTime':\n                        var serverTimeDate = new Date(msg.serverTime);\n                        $('#serverTime').val(serverTimeDate.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n                        $('#serverTime').focus();\n                        break;\n                    case 'setServerTime':\n                        window.location.replace('{{{payload.parentRef}}}');\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function setServerTime()\n        {\n            var month = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n            var serverTime = new Date($( \"#serverTime\" ).val());\n            var hoursString = serverTime.getHours().toString();\n            if (serverTime.getHours() < 10) hoursString = '0' + hoursString;\n            var minsString = serverTime.getMinutes().toString();\n            if (serverTime.getMinutes() < 10) minsString = '0' + minsString;\n            var dayString = (serverTime.getDay() + 1).toString();\n            if (serverTime.getDay() < 9) dayString = '0' + dayString;\n            var dateString =  dayString + ' ' + month[serverTime.getMonth()]  + ' ' + serverTime.getFullYear().toString();\n            dateString = dateString + ' ' + hoursString + ':' + minsString + ':00';\n            \n            dateString = 'sudo date -s \"' + dateString + '\"';\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'setServerTime',\n                    userID      : userID,\n                    serverTime   : dateString,\n                });\n            \n        }\n\n",
        "output": "str",
        "x": 870,
        "y": 440,
        "wires": [
            [
                "c08f345e.b91608"
            ]
        ]
    },
    {
        "id": "ba75eb0.30b8818",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/setServerTime/websocket",
        "server": "84a0efe3.385ca",
        "client": "",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "cb29f7d7.6e6728"
            ]
        ]
    },
    {
        "id": "cb29f7d7.6e6728",
        "type": "json",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 580,
        "wires": [
            [
                "496176b8.acb568"
            ]
        ]
    },
    {
        "id": "425df588.79192c",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/setServerTime/websocket",
        "server": "84a0efe3.385ca",
        "client": "",
        "x": 1240,
        "y": 560,
        "wires": []
    },
    {
        "id": "496176b8.acb568",
        "type": "switch",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getServerTime",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "setServerTime",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 580,
        "wires": [
            [
                "14e40e60.0f5e92"
            ],
            [
                "b36ee485.c65028"
            ]
        ]
    },
    {
        "id": "14e40e60.0f5e92",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Get Server Time",
        "func": "msg.payload['serverTime'] = new Date().getTime();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 560,
        "wires": [
            [
                "425df588.79192c"
            ]
        ]
    },
    {
        "id": "925da169.4d3ef",
        "type": "exec",
        "z": "90f83725.6dae08",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 770,
        "y": 620,
        "wires": [
            [
                "3d35e6b.324221a"
            ],
            [],
            []
        ]
    },
    {
        "id": "b36ee485.c65028",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set Server Time",
        "func": "return {topic : 'setServerTime', payload: msg.payload.serverTime, userID: msg.payload.userID};",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 620,
        "wires": [
            [
                "925da169.4d3ef"
            ]
        ]
    },
    {
        "id": "3d35e6b.324221a",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set Time Sync Completed",
        "func": "global.set('systemClockSynchronized', true);\nreturn {topic:'timeInfo',payload:{topic : 'setServerTime', payload: {} , userID: msg.userID}};",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 620,
        "wires": [
            [
                "425df588.79192c"
            ]
        ]
    },
    {
        "id": "e7584802.07eb68",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1270,
        "y": 440,
        "wires": []
    },
    {
        "id": "a3efdc0a.76eff",
        "type": "mongodb3 in",
        "z": "8475ab9.3d26058",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 730,
        "y": 500,
        "wires": [
            [
                "28d7885b.29ba58"
            ]
        ]
    },
    {
        "id": "28d7885b.29ba58",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.deviceType,\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {device: msg.device, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nfor (var ii = 0; ii < numRecords; ++ii)\n{\n    trace[ii] = {timeStamp: records[ii].timeStamp};\n    for (var ij = 0; ij < msg.device.attr.length; ++ij)\n    {\n        trace[ii][msg.device.attr[ij]] = records[ii][msg.device.attr[ij]];\n    }\n}\n\nreturn {\n    topic : msg.device.deviceType,\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {device: msg.device, trace: trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 500,
        "wires": [
            [
                "e8d9edd7.6f769"
            ]
        ]
    },
    {
        "id": "b6b8b063.9f62f",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Setup Archive Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1 \n    } \n};\nfor (var ii = 0; ii < msg.payload.device.attr.length; ++ii)\n{\n    projectionFilter.projection[msg.payload.device.attr[ii]] = 1;\n}\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 500,
        "wires": [
            [
                "a3efdc0a.76eff"
            ]
        ]
    },
    {
        "id": "5f767381.0ac26c",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "vad-kul-flir-lepton device mqtt",
        "links": [
            "7e343bf8.8fec14"
        ],
        "x": 855,
        "y": 160,
        "wires": []
    },
    {
        "id": "68378c41.1d2814",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-sensor/websocket",
        "server": "e71c9288.03dd3",
        "client": "",
        "x": 1140,
        "y": 160,
        "wires": []
    },
    {
        "id": "7e343bf8.8fec14",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "vad-kul-flir-lepton device socket",
        "links": [
            "5f767381.0ac26c",
            "439b1d51.6f5e64",
            "27616c81.533484",
            "133903b.1d72afc"
        ],
        "x": 955,
        "y": 160,
        "wires": [
            [
                "68378c41.1d2814",
                "a22a4059.b84a8",
                "b703adb9.a6106",
                "85b2d1c0.f6aca",
                "e755ffa5.cbbc3"
            ]
        ]
    },
    {
        "id": "e0b147d3.332368",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-sensor/websocket",
        "server": "e71c9288.03dd3",
        "client": "",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "45a7d04b.f97db",
                "bba93a6e.3bdbd8"
            ]
        ]
    },
    {
        "id": "bba93a6e.3bdbd8",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 1020,
        "wires": [
            [
                "c808d99f.eddb18"
            ]
        ]
    },
    {
        "id": "c808d99f.eddb18",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "parse topic",
        "func": "if (msg.payload.topic != 'getLastImage') return null;\nreturn {\n    topic   :msg.payload.restfulDevice.deviceType + '-' + msg.payload.restfulDevice.name, \n    payload : \n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.restfulDevice.deviceType\n                },\n                {\n                    name : msg.payload.restfulDevice.name\n                }\n            ]\n        }, \n        {\n            projection  :\n            {\n                _id :   0\n                \n            }\n        }\n    ],\n    'device'    :   msg.payload\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 1020,
        "wires": [
            [
                "25932781.fdea58"
            ]
        ]
    },
    {
        "id": "25932781.fdea58",
        "type": "mongodb3 in",
        "z": "8475ab9.3d26058",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 710,
        "y": 1020,
        "wires": [
            [
                "40e7209b.74dbb"
            ]
        ]
    },
    {
        "id": "40e7209b.74dbb",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Parse results",
        "func": "return {topic : msg.topic, payload:{topic:'lastImage' ,userID:msg.device.userID,payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 1020,
        "wires": [
            [
                "27616c81.533484"
            ]
        ]
    },
    {
        "id": "27616c81.533484",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "vad-kul-flir-lepton last image out",
        "links": [
            "7e343bf8.8fec14"
        ],
        "x": 1075,
        "y": 1020,
        "wires": []
    },
    {
        "id": "fd63f991.69fd78",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/apps",
        "url": "/apps",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "9ac6b7f7.c896a8"
            ]
        ]
    },
    {
        "id": "82a3ad6e.8e328",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/vad-kul-monitor?name=11\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/discoYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Monitor</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/vad-kul-archive?names=11\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/discoYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Archiver</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/vad-kul-sensor?name=11\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/discoYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Setup</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1010,
        "y": 40,
        "wires": [
            [
                "c5035666.c97758"
            ]
        ]
    },
    {
        "id": "19310ace.c992d5",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Apps",
        "output": "str",
        "x": 730,
        "y": 40,
        "wires": [
            [
                "c241b88d.b93c68"
            ]
        ]
    },
    {
        "id": "ef751ae9.e06be8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 590,
        "y": 40,
        "wires": [
            [
                "19310ace.c992d5"
            ]
        ]
    },
    {
        "id": "c5035666.c97758",
        "type": "subflow:8341090a.df9758",
        "z": "a858ad3a.95706",
        "name": "",
        "env": [],
        "x": 1150,
        "y": 40,
        "wires": []
    },
    {
        "id": "c241b88d.b93c68",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "appsYellow.png",
        "output": "str",
        "x": 870,
        "y": 40,
        "wires": [
            [
                "82a3ad6e.8e328"
            ]
        ]
    },
    {
        "id": "7475027d.6c11fc",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 1120,
        "wires": [
            [
                "a397bafe.51f798"
            ]
        ]
    },
    {
        "id": "ac3ea01f.a3491",
        "type": "mongodb3 in",
        "z": "8475ab9.3d26058",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 750,
        "y": 1120,
        "wires": [
            [
                "2f5820b2.d52e9"
            ]
        ]
    },
    {
        "id": "a397bafe.51f798",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "parse getImage",
        "func": "if (msg.payload.topic != 'getImage') return null;\nvar projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0 \n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.restfulDevice.deviceType\n        },\n        {\n            name: msg.payload.restfulDevice.name\n        },\n        {\n            timeStamp : msg.payload.timeStamp\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 1120,
        "wires": [
            [
                "ac3ea01f.a3491"
            ]
        ]
    },
    {
        "id": "2f5820b2.d52e9",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Parse image results",
        "func": "var imageMsg = \n{\n    topic:'image' ,\n    userID:msg.userID,\n    payload:msg.payload[0]\n}\nreturn {topic : msg.topic, payload:imageMsg};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 1120,
        "wires": [
            [
                "350f2ab6.194ae6"
            ]
        ]
    },
    {
        "id": "bd9824df.ef3118",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/vad-kul-sensor",
        "url": "/vad-kul-sensor",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "13193347.eb277d"
            ]
        ]
    },
    {
        "id": "69209694.8d9f08",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul {{{payload.script.name}}}",
        "output": "str",
        "x": 320,
        "y": 200,
        "wires": [
            [
                "6e63e54e.04e54c"
            ]
        ]
    },
    {
        "id": "4c50f332.84057c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "69209694.8d9f08"
            ]
        ]
    },
    {
        "id": "c6d4dfc7.827cb",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1170,
        "y": 240,
        "wires": []
    },
    {
        "id": "ed95d0ce.35dcc",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var name = msg.payload.name;\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['name'] = name;\nmsg.payload['script']['deviceType'] = 'vad-kul';\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "4c50f332.84057c"
            ]
        ]
    },
    {
        "id": "242737b6.141448",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/vad-kul-archive",
        "url": "/vad-kul-archive",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1120,
        "wires": [
            [
                "5bf73b4f.de0f54"
            ]
        ]
    },
    {
        "id": "43a3e163.d3c4b",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul Archive",
        "output": "str",
        "x": 310,
        "y": 1240,
        "wires": [
            [
                "c477444f.0052b8"
            ]
        ]
    },
    {
        "id": "a0b6b18e.c3f26",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var deviceType = 'vad-kul';\nvar names = JSON.stringify(msg.payload.names.split(\",\"));\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['names'] = names;\nmsg.payload['script']['deviceType'] = 'vad-kul';\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 1200,
        "wires": [
            [
                "43a3e163.d3c4b"
            ]
        ]
    },
    {
        "id": "c477444f.0052b8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 330,
        "y": 1280,
        "wires": [
            [
                "6a03ac5.bd5a654"
            ]
        ]
    },
    {
        "id": "6a03ac5.bd5a654",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var project    = '{{{payload.script.project}}}';\n        var deviceType = '{{{payload.script.deviceType}}}';\n        var deviceNames  = JSON.parse('{{{payload.script.names}}}');\n        var deviceColors = ['red', 'blue','green','magenta'];\n        var deviceShapes = ['circle', 'square','triangle-up','cross'];\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var imageArray = null;\n        var lastArchiveDate = 0;\n        var programStarted = false;\n\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $('#imageView').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                getArchive(2);\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'image' :\n                    if (msg.userID == userID)\n                    {\n                        $('#imageView').show();\n                        $('#snapshotTimeStamp').text(new Date(msg.payload.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }).replace(',', ''));\n                        pgm = JSON.parse(JSON.stringify(msg.payload.imageData));\n                        var processImage = 1;\n                        processImage = msg.payload.processImage;\n                        switch (processImage)\n                        {\n                            case 0:  \n                                imageArray = pgm.imageArray;\n                                break;\n                            case 1:  \n                                imageArray = blurImage(pgm.imageArray);\n                                break;\n                            default: \n                                imageArray = blurImage(pgm.imageArray);\n                                break;\n                        }\n                        $('#sensorName').text('Sensor ' + msg.payload.name + ' @ ' + msg.payload.bodyTemp.toString() + ' C');\n                        plotImage();\n                    }\n                    break;\n                case 'getArchiveValues':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload.device.deviceType == deviceType )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function getImage(timeStamp, name)\n        {\n            var queryMsg = \n            {\n                topic : 'getImage', \n                userID : userID, \n                'restfulDevice': \n                {\n                    deviceType  : deviceType,\n                    name        : name,\n                    project     : project\n                },\n                'timeStamp' : timeStamp,\n            };\n            sendWebSocketMessageObject(queryMsg);\n        }\n        function plotImage()\n        {\n            var rgb = [];\n            var plow = (pgm.minval - 27315) / 100;\n            var phigh = (pgm.maxval - 27315) / 100;\n            var pdelta = phigh - plow;\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = Math.round(((phigh - plow) * intensity + plow) * 10.0) / 10.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n                if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                if (colorScale)\n                {\n                    rgb = getRGB(intensity);\n                }\n                else\n                {\n                    rgb[0] = Math.floor(255 * intensity);\n                    rgb[1] = Math.floor(255 * intensity);\n                    rgb[2] = Math.floor(255 * intensity);\n                }\n                var style='width:88px;height:50px;background-color:' + 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                $('#box' + (ibox + 1).toString()).attr('style',style);\n            }\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.font = \"30px Arial\";\n            tipContext.fillStyle = \"cyan\";\n            tipPointerContext.fillStyle = \"cyan\";\n            if (colorScale) tipContext.fillStyle = \"black\";\n            if (colorScale) tipPointerContext.fillStyle = \"black\";\n            tipContext.textAlign = \"left\";\n\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            var rectWidth  = canvasWidth  / pgm.ncols;\n            var rectHeight = canvasHeight / pgm.nrows;\n            canvas.onmousemove = function (e) \n            {\n                var icol = Math.floor(e.layerX / rectWidth);\n                if (icol < 0) icol = 0;\n                if (icol >= pgm.ncols) icol = pgm.ncols - 1;\n                var irow = Math.floor((canvasHeight - e.layerY) / rectHeight);\n                if (irow < 0) irow = 0;\n                if (irow >= pgm.nrows) irow = pgm.nrows - 1;\n                var temp = Math.floor(100.0 * (pdelta * imageArray[irow][icol] / 256.0 + plow)) / 100;\n\n                tipPointer.style.top = (e.layerY  - tipPointer.height / 2).toString()  + \"px\";\n                tipPointer.style.left = (e.layerX - tipPointer.width / 2).toString() + \"px\";\n                tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n                tipPointerContext.fillRect( 0, 0, tipPointer.width, tipPointer.height);\n\n                tip.style.top = (e.layerY - tip.height - tipPointer.height).toString()  + \"px\";\n                tip.style.left = (e.layerX).toString() + \"px\";\n                tipContext.clearRect(0, 0, tip.width, tip.height);\n                tipContext.fillText(temp.toString() + ' C', 0, 30);\n            };\n\n            for (var irow = 0; irow < pgm.nrows; ++irow)\n            {\n                for (var icol = 0; icol < pgm.ncols; ++icol)\n                {\n                    var intensity = imageArray[irow][icol] / 256.0;\n                    if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                    if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                    if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                    if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                    if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                    if (colorScale)\n                    {\n                        rgb = getRGB(intensity);\n                        rgb[0] = Math.floor(rgb[0]);\n                        rgb[1] = Math.floor(rgb[1]);\n                        rgb[2] = Math.floor(rgb[2]);\n                    }\n                    else\n                    {\n                        rgb[0] = Math.floor(255 * intensity);\n                        rgb[1] = Math.floor(255 * intensity);\n                        rgb[2] = Math.floor(255 * intensity);\n                    }\n                    canvasContext.fillStyle = 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                    if (intensity > 0.98) \n                    {\n                        canvasContext.fillStyle='magenta';\n                        if (colorScale) canvasContext.fillStyle='white';\n                    }\n\n                    canvasContext.fillRect(icol * rectWidth, canvasHeight - rectHeight - irow * rectHeight, rectWidth, rectHeight);\n                }    \n            }\n        }\n        function blurImage(inputImage)\n        {\n            var kernal = [[1,2,1], [2,4,2], [1,2,1]];\n            var blurImage = [];\n            var nrows = inputImage.length;\n            var ncols = inputImage[0].length;\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                blurImage[irow] = [];\n                for (var icol = 0; icol < ncols; ++icol)\n                {\n                    if ((irow == 0) || (irow == (nrows - 1)))\n                    {\n                        blurImage[irow][icol] =  inputImage[irow][icol];\n                    }\n                    else\n                    {\n                        if ((icol == 0) || (icol == (ncols - 1)))\n                        {\n                            blurImage[irow][icol] =  inputImage[irow][icol];\n                        }\n                        else\n                        {\n                            blurImage[irow][icol] = 0;\n                            for (var ikrow = 0; ikrow < 3; ++ikrow)\n                            {\n                                for (var ikcol = 0; ikcol < 3; ++ikcol)\n                                {\n                                    blurImage[irow][icol] = blurImage[irow][icol] + inputImage[irow + ikrow - 1][icol + ikcol - 1] * kernal[ikrow][ikcol];\n                                }\n                            }\n                            blurImage[irow][icol] = Math.round(blurImage[irow][icol] / 16.0);\n                        }\n                    }\n                }\n            }\n            return blurImage;\n        }\n        function mouseLeftCanvas()\n        {\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.clearRect(0, 0, tip.width, tip.height);\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n        }\n        function getRGB(intensity)\n        {\n          var rgb = [0,0,0];\n          if ( (0 <= intensity) && (intensity <= 0.25) )\n          {\n            rgb[0] = 0;\n            rgb[1] = Math.floor(255 * intensity * 4);    \n            rgb[2] = 255;\n          }\n          if ( (0.25 < intensity) && (intensity <= 0.50) )\n          {\n            rgb[0] = 0;\n            rgb[1] = 255;    \n            rgb[2] = Math.floor(255 * (0.50 - intensity) * 4);\n          }\n          if ( (0.50 < intensity) && (intensity <= 0.75) )\n          {\n            rgb[0] = Math.floor(255 * (intensity - 0.50) * 4);\n            rgb[1] = 255;    \n            rgb[2] = 0;\n          }\n          if ( (0.75 < intensity) && (intensity <= 1.0) )\n          {\n            rgb[0] = 255;\n            rgb[1] = Math.floor(255 * (1.0 - intensity) * 4);    \n            rgb[2] = 0;\n          }\n          return rgb;\n        }\n        function toggleColorScale()\n        {\n            colorScale = !colorScale;\n            if (colorScale)\n            {\n                $('#colorScaleButton').text('Color');\n            }\n            else\n            {\n                $('#colorScaleButton').text('Gray');\n            }\n            plotImage();\n        }\n        function toggleEnhancedScale(deltaEnhanced)\n        {\n            enhancementLevel = enhancementLevel + deltaEnhanced;\n            if (enhancementLevel >  2) enhancementLevel = 2;\n            if (enhancementLevel < -2) enhancementLevel = -2;\n            $('#enhancementLevel').text(enhancementLevel.toString());\n            plotImage();\n        }\n        function clearImage()\n        {\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);        \n            $('#snapshotTimeStamp').text('-');\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = 0.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n            } \n        }\n",
        "output": "str",
        "x": 610,
        "y": 1120,
        "wires": [
            [
                "2f9fb617.e783fa"
            ]
        ]
    },
    {
        "id": "b0d978e4.6bf488",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.archive}}}",
        "output": "str",
        "x": 600,
        "y": 1200,
        "wires": [
            [
                "9eddb755.220d98"
            ]
        ]
    },
    {
        "id": "8464a064.b70e",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.imageView}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 910,
        "y": 1200,
        "wires": [
            [
                "4d8f32af.1ec28c"
            ]
        ]
    },
    {
        "id": "9eddb755.220d98",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.imageView",
        "field": "payload.html.imageView",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- imageView HTML -->\n                <div class='card' id='imageView'>\n                    <p class='card-title'>Image View</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\">\n                                <table width='800px'>\n                                    <tr>\n                                        <td>\n                                            <div id=\"wrapper\" width=\"800\" height=\"600\" style=\"position:relative;\"  onmouseleave=\"mouseLeftCanvas()\">\n                                                <canvas id=\"flirCanvas\" width=\"800\" height=\"600\" style=\"border:1px solid #000000;\"></canvas>\n                                                <canvas id=\"tip\" width=125 height=30 style=\"position:absolute;\"></canvas>\n                                                <canvas id=\"tipPointer\" width=10 height=10 style=\"position:absolute;\"></canvas>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <table  width='792'>\n                                    <tr>\n                                        <td width=\"88px\">\n                                            <div id='box1' style=\"width:88px;height:50px;background-color:#0000ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box2' style=\"width:88px;height:50px;background-color:#0088ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box3' style=\"width:88px;height:50px;background-color:#00ffff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box4' style=\"width:88px;height:50px;background-color:#00ff88\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box5' style=\"width:88px;height:50px;background-color:#00ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box6' style=\"width:88px;height:50px;background-color:#88ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box7' style=\"width:88px;height:50px;background-color:#ffff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box8' style=\"width:88px;height:50px;background-color:#ff8800\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box9' style=\"width:88px;height:50px;background-color:#ff0000\"></div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box1Label'>1</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box2Label'>2</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box3Label'>3</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box4Label'>4</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box5Label'>5</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box6Label'>6</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box7Label'>7</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box8Label'>8</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box9Label'>9</span>\n                                        </td>\n                                    </tr>\n                                </table>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                           <tr>\n                                                <td width='40%' align='left'>\n                                                    <span  class='card-text' id='sensorName'>Sensor xx</span>\n                                                </td>\n                                                <td width='60%' align='right'>\n                                                    <span  class='card-text' id='snapshotTimeStamp'></span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Color Mode</span>\n                                                </td>\n                                                <td width=\"40%\">\n                                                    <button class='btn btn-block card-button big-text' id=\"colorScaleButton\" onclick=\"toggleColorScale()\" >Color</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Enhancement Level</span>\n                                                </td>\n                                                <td width=\"14%\" >\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(-1)\">-</button>\n                                                </td>\n                                                <td width=\"12%px\" align='center'>\n                                                    <span  class='card-text' id=\"enhancementLevel\" >0</span>\n                                                </td>\n                                                <td width=\"14%\">\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(1)\">+</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 940,
        "y": 1120,
        "wires": [
            [
                "699b0776.2a3b58"
            ]
        ]
    },
    {
        "id": "4d8f32af.1ec28c",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1190,
        "y": 1200,
        "wires": []
    },
    {
        "id": "699b0776.2a3b58",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card'>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archiveButton1\" onclick=\"getArchive(1)\" >1</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archiveButton2\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archiveButton3\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archiveButton4\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archiveButton5\" onclick=\"getArchive(16)\" >16</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archiveButton6\" onclick=\"getArchive(32)\" >32</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Days</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 1160,
        "wires": [
            [
                "8464a064.b70e"
            ]
        ]
    },
    {
        "id": "2f9fb617.e783fa",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(days)\n        { \n            $('#imageView').hide();\n            $('#archiveButton1').attr(\"disabled\", true); \n            $('#archiveButton2').attr(\"disabled\", true); \n            $('#archiveButton3').attr(\"disabled\", true); \n            $('#archiveButton4').attr(\"disabled\", true); \n            $('#archiveButton5').attr(\"disabled\", true); \n            $('#archiveButton6').attr(\"disabled\", true); \n            $('#archiveButton1').css('color', 'var(--color5)'); \n            $('#archiveButton1').css('background-color', 'var(--color1)'); \n            $('#archiveButton2').css('color', 'var(--color5)'); \n            $('#archiveButton2').css('background-color', 'var(--color1)'); \n            $('#archiveButton3').css('color', 'var(--color5)'); \n            $('#archiveButton3').css('background-color', 'var(--color1)'); \n            $('#archiveButton4').css('color', 'var(--color5)'); \n            $('#archiveButton4').css('background-color', 'var(--color1)'); \n            $('#archiveButton5').css('color', 'var(--color5)'); \n            $('#archiveButton5').css('background-color', 'var(--color1)'); \n            $('#archiveButton6').css('color', 'var(--color5)'); \n            $('#archiveButton6').css('background-color', 'var(--color1)'); \n            switch(days)\n            {\n                case 1:\n                    $('#archiveButton1').css('color', 'var(--color1)'); \n                    $('#archiveButton1').css('background-color', 'var(--color5)'); \n                    break;\n                case 2:\n                    $('#archiveButton2').css('color', 'var(--color1)'); \n                    $('#archiveButton2').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archiveButton3').css('color', 'var(--color1)'); \n                    $('#archiveButton3').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archiveButton4').css('color', 'var(--color1)'); \n                    $('#archiveButton4').css('background-color', 'var(--color5)'); \n                    break;\n                case 16:\n                    $('#archiveButton5').css('color', 'var(--color1)'); \n                    $('#archiveButton5').css('background-color', 'var(--color5)'); \n                    break;\n                case 32:\n                    $('#archiveButton6').css('color', 'var(--color1)'); \n                    $('#archiveButton6').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - days * 24 * 3600000;\n            for (var idevice = 0; idevice < deviceNames.length; ++idevice)\n            {\n                archiveRequestList[idevice] = \n                {\n                    deviceType : deviceType,\n                    name : deviceNames[idevice], \n                    attr : ['bodyTemp'],\n                    startDate: startDate, \n                    stopDate: stopDate,\n                };\n            }\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getArchive',\n                    userID      : userID,\n                    device      : archiveRequestList[0],\n                 });\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        var plotConfig = \n        {\n            trace1Title : 'Temperature (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            plotLength  : 600,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                margin: \n                    {\n                        t: 70, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var traces = [];\n            for (var itrace = 0; itrace < archiveList.length; ++itrace)\n            {\n                traces[itrace] =\n                {\n                    x: [],\n                    y: [],\n                    name: deviceNames[itrace],\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: deviceColors[itrace],\n                        size: 10,\n                        symbol: deviceShapes[itrace]\n                    }        \n                };\n                if (archiveList[itrace].trace != null)\n                {\n                    for (var ii = 0; ii < archiveList[itrace].trace.length; ++ii)\n                    {\n                        traces[itrace].x[ii] = archiveList[itrace].trace[ii].timeStamp;;\n                        traces[itrace].y[ii] = archiveList[itrace].trace[ii][archiveList[itrace].device.attr[0]] ;\n                    }\n                }\n            }\n\n            var myPlot = document.getElementById('archiveChart');\n\n            Plotly.newPlot('archiveChart', traces, layout);\n\n//            myPlot.on('plotly_click', function(data){console.log(data.points[0].curveNumber); });\n            myPlot.on('plotly_click', function(data){getImage(archiveList[data.points[0].curveNumber].trace[data.points[0].pointIndex].timeStamp, deviceNames[data.points[0].curveNumber]); });\n\n            $('#archiveButton1').attr(\"disabled\", false); \n            $('#archiveButton2').attr(\"disabled\", false); \n            $('#archiveButton3').attr(\"disabled\", false); \n            $('#archiveButton4').attr(\"disabled\", false); \n            $('#archiveButton5').attr(\"disabled\", false); \n            $('#archiveButton6').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 610,
        "y": 1160,
        "wires": [
            [
                "b0d978e4.6bf488"
            ]
        ]
    },
    {
        "id": "e8d9edd7.6f769",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-global-archive/websocket",
        "server": "e154ab6.e010658",
        "client": "",
        "x": 1220,
        "y": 500,
        "wires": []
    },
    {
        "id": "350f2ab6.194ae6",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-archive/websocket",
        "server": "e154ab6.e010658",
        "client": "",
        "x": 1240,
        "y": 1120,
        "wires": []
    },
    {
        "id": "16e5839b.629abc",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-archive/websocket",
        "server": "e154ab6.e010658",
        "client": "",
        "x": 170,
        "y": 1120,
        "wires": [
            [
                "7475027d.6c11fc",
                "45a7d04b.f97db"
            ]
        ]
    },
    {
        "id": "b16afde7.508fa",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/sensors",
        "url": "/sensors",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "6993cc06.850954"
            ]
        ]
    },
    {
        "id": "eb2a884d.a32b38",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/vad-kul-sensor?name=05\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/discoYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Vad Kul 05</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/vad-kul-sensor?name=06\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/discoYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Vad Kul 06</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/core\" id=\"blinky-lite-core\">\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/coreYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Core Apps</td>\n                        </tr>\n                    </table>\n                </a> \n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1010,
        "y": 200,
        "wires": [
            [
                "2a628b17.64c3e4"
            ]
        ]
    },
    {
        "id": "516a3217.036b0c",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul",
        "output": "str",
        "x": 730,
        "y": 200,
        "wires": [
            [
                "9c23e48c.80cc38"
            ]
        ]
    },
    {
        "id": "f04f7a94.2eec78",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 590,
        "y": 200,
        "wires": [
            [
                "516a3217.036b0c"
            ]
        ]
    },
    {
        "id": "2a628b17.64c3e4",
        "type": "subflow:8341090a.df9758",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "9c23e48c.80cc38",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 870,
        "y": 200,
        "wires": [
            [
                "eb2a884d.a32b38"
            ]
        ]
    },
    {
        "id": "9c0f9ecb.60ca8",
        "type": "http in",
        "z": "e170e03.a0caf2",
        "name": "/protected",
        "url": "/protected",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "dffce358.cdab2"
            ]
        ]
    },
    {
        "id": "29822a72.7731e6",
        "type": "JsonWebToken",
        "z": "2dba0745.a98d98",
        "name": "decrypt Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 640,
        "y": 140,
        "wires": [
            [
                "f3358361.19029"
            ]
        ]
    },
    {
        "id": "8f2cea69.190348",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/vad-kul-history",
        "url": "/vad-kul-history",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 400,
        "wires": [
            [
                "d03bec5.8e8901"
            ]
        ]
    },
    {
        "id": "41878d6d.09e144",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul History",
        "output": "str",
        "x": 310,
        "y": 520,
        "wires": [
            [
                "22153884.a4fe48"
            ]
        ]
    },
    {
        "id": "22710dda.91aa22",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var deviceType = 'vad-kul';\nvar names = JSON.stringify(msg.payload.names.split(\",\"));\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['names'] = names;\nmsg.payload['script']['deviceType'] = 'vad-kul';\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 480,
        "wires": [
            [
                "41878d6d.09e144"
            ]
        ]
    },
    {
        "id": "22153884.a4fe48",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 330,
        "y": 560,
        "wires": [
            [
                "b15ce17.d8e112"
            ]
        ]
    },
    {
        "id": "b15ce17.d8e112",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var project    = '{{{payload.script.project}}}';\n        var deviceType = '{{{payload.script.deviceType}}}';\n        var deviceNames  = JSON.parse('{{{payload.script.names}}}');\n        var deviceColors = ['red', 'blue','green','magenta'];\n        var deviceShapes = ['circle', 'square','triangle-up','cross'];\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var programStarted = false;\n        \n        var plotConfig = \n        {\n            trace1Title : 'Temperature (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            plotLength  : 600,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        var layout =\n        {\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15},\n            height      : '500',\n            width       : '',\n            xaxis       :\n            {\n                type: 'date'\n            },\n            yaxis:\n            {\n                title           : plotConfig.trace1Title,\n                titlefont       : {color: plotConfig.trace1Color},\n                tickfont        : {color:plotConfig.trace1Color},\n                gridcolor       : plotConfig.trace1GridColor,\n                zerolinecolor   : plotConfig.trace1GridColor,\n                linecolor       : plotConfig.trace1GridColor,\n                range           : [30,39]\n\n            },\n            margin: \n                {\n                    t: 70, //top margin\n//                    l: 0, //left margin\n//                    r: 0, //right margin\n//                    b: 20 //bottom margin\n                },\n        };\n        var traces = [];\n        for (var itrace = 0; itrace < deviceNames.length; ++itrace)\n        {\n            traces[itrace] =\n            {\n                x: [],\n                y: [],\n                name: deviceNames[itrace],\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: deviceColors[itrace],\n                    size: 10,\n                    symbol: deviceShapes[itrace]\n                }        \n            };\n        }\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.payload.imageData.value != null)\n                        updateDmaReadings(msg.payload);\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function updateDmaReadings(device)\n        {\n            if (device.imageData.value != null)\n            {\n                for (var itrace = 0; itrace < deviceNames.length; ++itrace)\n                {\n                    if (deviceNames[itrace] == device.name)\n                    {\n                        traces[itrace].x.push(device.timeStamp);\n                        traces[itrace].y.push(device.bodyTemp.value);\n                    }\n                }\n                Plotly.newPlot(plotConfig.htmlId, traces, layout);\n            }\n        }\n",
        "output": "str",
        "x": 610,
        "y": 400,
        "wires": [
            [
                "684cec83.2fd034"
            ]
        ]
    },
    {
        "id": "684cec83.2fd034",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 600,
        "y": 440,
        "wires": [
            [
                "347df882.ad3b08"
            ]
        ]
    },
    {
        "id": "97abf3ea.4e15a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 910,
        "y": 440,
        "wires": [
            [
                "b2ffa262.fb9f7"
            ]
        ]
    },
    {
        "id": "b2ffa262.fb9f7",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1190,
        "y": 440,
        "wires": []
    },
    {
        "id": "347df882.ad3b08",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 400,
        "wires": [
            [
                "97abf3ea.4e15a"
            ]
        ]
    },
    {
        "id": "a22a4059.b84a8",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-history/websocket",
        "server": "da60ea3b.6a2998",
        "client": "",
        "x": 1140,
        "y": 200,
        "wires": []
    },
    {
        "id": "24ae6bf4.21f5d4",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/vad-kul-tv",
        "url": "/vad-kul-tv",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 640,
        "wires": [
            [
                "d9fa4f85.736cd"
            ]
        ]
    },
    {
        "id": "b48eb487.f67028",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul TV",
        "output": "str",
        "x": 310,
        "y": 760,
        "wires": [
            [
                "3b9d8cd1.63c144"
            ]
        ]
    },
    {
        "id": "e75cbeef.10f68",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var deviceType = 'vad-kul';\nvar names = JSON.stringify(msg.payload.names.split(\",\"));\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['names'] = names;\nmsg.payload['script']['deviceType'] = 'vad-kul';\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 720,
        "wires": [
            [
                "b48eb487.f67028"
            ]
        ]
    },
    {
        "id": "3b9d8cd1.63c144",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 330,
        "y": 800,
        "wires": [
            [
                "5b2cff10.8019b"
            ]
        ]
    },
    {
        "id": "5b2cff10.8019b",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var project    = '{{{payload.script.project}}}';\n        var deviceType = '{{{payload.script.deviceType}}}';\n        var deviceNames  = JSON.parse('{{{payload.script.names}}}');\n        var devicePgm  = [null, null,null, null];\n        var imageArray  = [null, null,null, null];\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var programStarted = false;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            if (deviceNames.length < 3) $('#card2').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                for (var itrace = 0; itrace < deviceNames.length; ++itrace)\n                {\n                    var restfulDevice = \n                    {\n                        deviceType  : deviceType,\n                        name        : deviceNames[itrace],\n                        project     : project\n                    };\n                    sendWebSocketMessageObject({topic : 'getLastImage', userID : userID, 'restfulDevice': restfulDevice});\n                }\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.payload.imageData.value != null)\n                        updateDmaReadings(msg.payload);\n                    break;\n                case 'lastImage' :\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload.imageData.value != null)\n                            updateDmaReadings(msg.payload);\n                    }\n                    break;\n               case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function updateDmaReadings(device)\n        {\n            if (device.imageData.value != null)\n            {\n                for (var itrace = 0; itrace < deviceNames.length; ++itrace)\n                {\n                    if (deviceNames[itrace] == device.name)\n                    {\n                        devicePgm[itrace] = JSON.parse(JSON.stringify(device.imageData.value));\n                        var processImage = 1;\n                        try {processImage = device.processImage.value;} catch(err) {processImage = 1;}\n                        switch (processImage)\n                        {\n                            case 0:  \n                                imageArray[itrace] = devicePgm[itrace].imageArray;\n                                break;\n                            case 1:  \n                                imageArray[itrace] = blurImage(devicePgm[itrace].imageArray);\n                                break;\n                            default: \n                                imageArray[itrace] = blurImage(devicePgm[itrace].imageArray);\n                                break;\n                        }\n                        $('#timeStamp' + itrace.toString()).text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }).replace(',', ''));\n                        $('#sensorName' + itrace.toString()).text('Sensor ' + device.name + ' @ ' + device.bodyTemp.value.toString() + ' C');\n                        plotImage(itrace);\n                    }\n                }\n            }\n        }\n        function plotImage(deviceIndex)\n        {\n            if (devicePgm[deviceIndex] == null) return;\n            var rgb = [];\n            var plow = (devicePgm[deviceIndex].minval - 27315) / 100;\n            var phigh = (devicePgm[deviceIndex].maxval - 27315) / 100;\n            var pdelta = phigh - plow;\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = Math.round(((phigh - plow) * intensity + plow) * 10.0) / 10.0;\n                $('#box' + (ibox + 1).toString() + '_' + deviceIndex.toString() + 'Label').text(pbox.toString());\n                if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                if (colorScale)\n                {\n                    rgb = getRGB(intensity);\n                }\n                else\n                {\n                    rgb[0] = Math.floor(255 * intensity);\n                    rgb[1] = Math.floor(255 * intensity);\n                    rgb[2] = Math.floor(255 * intensity);\n                }\n                var style='width:44px;height:25px;background-color:' + 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                $('#box' + (ibox + 1).toString() + '_' + deviceIndex.toString()).attr('style',style);\n            }\n            var canvas = document.getElementById(\"flirCanvas\" + deviceIndex.toString());\n            var canvasContext = canvas.getContext(\"2d\");\n\n            var canvasWidth  = Number($('#' + \"flirCanvas\" + deviceIndex.toString()).attr('width'));\n            var canvasHeight = Number($('#' + \"flirCanvas\" + deviceIndex.toString()).attr('height'));\n            var rectWidth  = canvasWidth  / devicePgm[deviceIndex].ncols;\n            var rectHeight = canvasHeight / devicePgm[deviceIndex].nrows;\n\n            for (var irow = 0; irow < devicePgm[deviceIndex].nrows; ++irow)\n            {\n                for (var icol = 0; icol < devicePgm[deviceIndex].ncols; ++icol)\n                {\n                    var intensity = imageArray[deviceIndex][irow][icol] / 256.0;\n                    if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                    if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                    if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                    if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                    if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                    if (colorScale)\n                    {\n                        rgb = getRGB(intensity);\n                        rgb[0] = Math.floor(rgb[0]);\n                        rgb[1] = Math.floor(rgb[1]);\n                        rgb[2] = Math.floor(rgb[2]);\n                    }\n                    else\n                    {\n                        rgb[0] = Math.floor(255 * intensity);\n                        rgb[1] = Math.floor(255 * intensity);\n                        rgb[2] = Math.floor(255 * intensity);\n                    }\n                    canvasContext.fillStyle = 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                    if (intensity > 0.98) \n                    {\n                        canvasContext.fillStyle='magenta';\n                        if (colorScale) canvasContext.fillStyle='white';\n                    }\n\n                    canvasContext.fillRect(icol * rectWidth, canvasHeight - rectHeight - irow * rectHeight, rectWidth, rectHeight);\n                }    \n            }\n        }\n        function blurImage(inputImage)\n        {\n            var kernal = [[1,2,1], [2,4,2], [1,2,1]];\n            var blurImage = [];\n            var nrows = inputImage.length;\n            var ncols = inputImage[0].length;\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                blurImage[irow] = [];\n                for (var icol = 0; icol < ncols; ++icol)\n                {\n                    if ((irow == 0) || (irow == (nrows - 1)))\n                    {\n                        blurImage[irow][icol] =  inputImage[irow][icol];\n                    }\n                    else\n                    {\n                        if ((icol == 0) || (icol == (ncols - 1)))\n                        {\n                            blurImage[irow][icol] =  inputImage[irow][icol];\n                        }\n                        else\n                        {\n                            blurImage[irow][icol] = 0;\n                            for (var ikrow = 0; ikrow < 3; ++ikrow)\n                            {\n                                for (var ikcol = 0; ikcol < 3; ++ikcol)\n                                {\n                                    blurImage[irow][icol] = blurImage[irow][icol] + inputImage[irow + ikrow - 1][icol + ikcol - 1] * kernal[ikrow][ikcol];\n                                }\n                            }\n                            blurImage[irow][icol] = Math.round(blurImage[irow][icol] / 16.0);\n                        }\n                    }\n                }\n            }\n            return blurImage;\n        }\n        function getRGB(intensity)\n        {\n          var rgb = [0,0,0];\n          if ( (0 <= intensity) && (intensity <= 0.25) )\n          {\n            rgb[0] = 0;\n            rgb[1] = Math.floor(255 * intensity * 4);    \n            rgb[2] = 255;\n          }\n          if ( (0.25 < intensity) && (intensity <= 0.50) )\n          {\n            rgb[0] = 0;\n            rgb[1] = 255;    \n            rgb[2] = Math.floor(255 * (0.50 - intensity) * 4);\n          }\n          if ( (0.50 < intensity) && (intensity <= 0.75) )\n          {\n            rgb[0] = Math.floor(255 * (intensity - 0.50) * 4);\n            rgb[1] = 255;    \n            rgb[2] = 0;\n          }\n          if ( (0.75 < intensity) && (intensity <= 1.0) )\n          {\n            rgb[0] = 255;\n            rgb[1] = Math.floor(255 * (1.0 - intensity) * 4);    \n            rgb[2] = 0;\n          }\n          return rgb;\n        }\n        function toggleColorScale()\n        {\n            colorScale = !colorScale;\n            if (colorScale)\n            {\n                $('#colorScaleButton').text('Color');\n            }\n            else\n            {\n                $('#colorScaleButton').text('Gray');\n            }\n            for (var itrace = 0; itrace < deviceNames.length; ++itrace) plotImage(itrace);\n        }\n        function toggleEnhancedScale(deltaEnhanced)\n        {\n            enhancementLevel = enhancementLevel + deltaEnhanced;\n            if (enhancementLevel >  2) enhancementLevel = 2;\n            if (enhancementLevel < -2) enhancementLevel = -2;\n            $('#enhancementLevel').text(enhancementLevel.toString());\n            for (var itrace = 0; itrace < deviceNames.length; ++itrace) plotImage(itrace);\n        }\n        function clearImage(canvasId, snapshotTimeStampId)\n        {\n            var canvas = document.getElementById(\"flirCanvas\" + deviceIndex.toString());\n            var canvasContext = canvas.getContext(\"2d\");\n            var canvasWidth  = Number($('#' + \"flirCanvas\" + deviceIndex.toString()).attr('width'));\n            var canvasHeight = Number($('#' + \"flirCanvas\" + deviceIndex.toString()).attr('height'));\n            canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);        \n            $('#' + 'snapshotTimeStampId' + deviceIndex.toString()).text('-');\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = 0.0;\n                $('#box' + (ibox + 1).toString() + deviceIndex.toString() + 'Label').text(pbox.toString());\n            } \n        }\n",
        "output": "str",
        "x": 610,
        "y": 640,
        "wires": [
            [
                "6679740e.29f5bc"
            ]
        ]
    },
    {
        "id": "6679740e.29f5bc",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.stripChartWidget}}}",
        "output": "str",
        "x": 600,
        "y": 680,
        "wires": [
            [
                "3e2dfb73.da0544"
            ]
        ]
    },
    {
        "id": "e75303b4.25d9",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.imageView}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.imageControl}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 910,
        "y": 720,
        "wires": [
            [
                "5654f3af.a7347c"
            ]
        ]
    },
    {
        "id": "5654f3af.a7347c",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1190,
        "y": 720,
        "wires": []
    },
    {
        "id": "3e2dfb73.da0544",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.imageView",
        "field": "payload.html.imageView",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- imageView HTML -->\n                <div class='card' id='imageView'>\n                    <p class='card-title'>Image View</p>\n                    <div class='card-body' align=\"center\" id=\"card1\">\n                        <table width='100%'>\n                            <tr>\n                                <td width='50%'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table width='400px'>\n                                            <tr>\n                                                <td>\n                                                    <canvas id=\"flirCanvas0\" width=\"400\" height=\"300\" style=\"border:1px solid #000000;\"></canvas>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                        <table  width='396px'>\n                                            <tr>\n                                                <td width=\"44px\">\n                                                    <div id='box1_0' style=\"width:44px;height:25px;background-color:#0000ff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box2_0' style=\"width:44px;height:25px;background-color:#0088ff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box3_0' style=\"width:44px;height:25px;background-color:#00ffff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box4_0' style=\"width:44px;height:25px;background-color:#00ff88\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box5_0' style=\"width:44px;height:25px;background-color:#00ff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box6_0' style=\"width:44px;height:25px;background-color:#88ff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box7_0' style=\"width:44px;height:25px;background-color:#ffff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box8_0' style=\"width:44px;height:25px;background-color:#ff8800\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box9_0' style=\"width:44px;height:25px;background-color:#ff0000\"></div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box1_0Label'>1</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box2_0Label'>2</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box3_0Label'>3</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box4_0Label'>4</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box5_0Label'>5</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box6_0Label'>6</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box7_0Label'>7</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box8_0Label'>8</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box9_0Label'>9</span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                        <div class='row' style='padding-bottom: 15px;'>\n                                            <div class=\"container-fluid \" align=\"center\">\n                                                <table  width='100%'>\n                                                   <tr>\n                                                        <td width='40%' align='right'>\n                                                            <span  id='sensorName0'>Sensor xx</span>\n                                                        </td>\n                                                        <td width='60%' align='center'>\n                                                            <span  id='timeStamp0'></span>\n                                                        </td>\n                                                    </tr>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td width='50%'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table width='400px'>\n                                            <tr>\n                                                <td>\n                                                    <canvas id=\"flirCanvas1\" width=\"400\" height=\"300\" style=\"border:1px solid #000000;\"></canvas>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                        <table  width='396px'>\n                                            <tr>\n                                                <td width=\"44px\">\n                                                    <div id='box1_1' style=\"width:44px;height:25px;background-color:#0000ff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box2_1' style=\"width:44px;height:25px;background-color:#0088ff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box3_1' style=\"width:44px;height:25px;background-color:#00ffff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box4_1' style=\"width:44px;height:25px;background-color:#00ff88\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box5_1' style=\"width:44px;height:25px;background-color:#00ff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box6_1' style=\"width:44px;height:25px;background-color:#88ff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box7_1' style=\"width:44px;height:25px;background-color:#ffff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box8_1' style=\"width:44px;height:25px;background-color:#ff8800\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box9_1' style=\"width:44px;height:25px;background-color:#ff0000\"></div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box1_1Label'>1</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box2_1Label'>2</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box3_1Label'>3</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box4_1Label'>4</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box5_1Label'>5</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box6_1Label'>6</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box7_1Label'>7</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box8_1Label'>8</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box9_1Label'>9</span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                        <div class='row' style='padding-bottom: 15px;'>\n                                            <div class=\"container-fluid \" align=\"center\">\n                                                <table  width='100%'>\n                                                   <tr>\n                                                        <td width='40%' align='right'>\n                                                            <span  id='sensorName1'>Sensor xx</span>\n                                                        </td>\n                                                        <td width='60%' align='center'>\n                                                            <span   id='timeStamp1'></span>\n                                                        </td>\n                                                    </tr>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div class='card-body' align=\"center\"  id=\"card2\">\n                        <table width='100%'>\n                            <tr>\n                                <td width='50%'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table width='400px'>\n                                            <tr>\n                                                <td>\n                                                    <canvas id=\"flirCanvas2\" width=\"400\" height=\"300\" style=\"border:1px solid #000000;\"></canvas>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                        <table  width='396px'>\n                                            <tr>\n                                                <td width=\"44px\">\n                                                    <div id='box1_2' style=\"width:44px;height:25px;background-color:#0000ff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box2_2' style=\"width:44px;height:25px;background-color:#0088ff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box3_2' style=\"width:44px;height:25px;background-color:#00ffff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box4_2' style=\"width:44px;height:25px;background-color:#00ff88\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box5_2' style=\"width:44px;height:25px;background-color:#00ff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box6_2' style=\"width:44px;height:25px;background-color:#88ff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box7_2' style=\"width:44px;height:25px;background-color:#ffff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box8_2' style=\"width:44px;height:25px;background-color:#ff8800\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box9_2' style=\"width:44px;height:25px;background-color:#ff0000\"></div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box1_2Label'>1</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box2_2Label'>2</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box3_2Label'>3</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box4_2Label'>4</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box5_2Label'>5</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box6_2Label'>6</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box7_2Label'>7</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box8_2Label'>8</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box9_2Label'>9</span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                        <div class='row' style='padding-bottom: 15px;'>\n                                            <div class=\"container-fluid \" align=\"center\">\n                                                <table  width='100%'>\n                                                   <tr>\n                                                        <td width='40%' align='right'>\n                                                            <span  id='sensorName2'>Sensor xx</span>\n                                                        </td>\n                                                        <td width='60%' align='center'>\n                                                            <span  id='timeStamp2'></span>\n                                                        </td>\n                                                    </tr>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td width='50%'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table width='400px'>\n                                            <tr>\n                                                <td>\n                                                    <canvas id=\"flirCanvas3\" width=\"400\" height=\"300\" style=\"border:1px solid #000000;\"></canvas>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                        <table  width='396px'>\n                                            <tr>\n                                                <td width=\"44px\">\n                                                    <div id='box1_3' style=\"width:44px;height:25px;background-color:#0000ff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box2_3' style=\"width:44px;height:25px;background-color:#0088ff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box3_3' style=\"width:44px;height:25px;background-color:#00ffff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box4_3' style=\"width:44px;height:25px;background-color:#00ff88\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box5_3' style=\"width:44px;height:25px;background-color:#00ff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box6_3' style=\"width:44px;height:25px;background-color:#88ff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box7_3' style=\"width:44px;height:25px;background-color:#ffff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box8_3' style=\"width:44px;height:25px;background-color:#ff8800\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box9_3' style=\"width:44px;height:25px;background-color:#ff0000\"></div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box1_3Label'>1</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box2_3Label'>2</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box3_3Label'>3</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box4_3Label'>4</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box5_3Label'>5</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box6_3Label'>6</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box7_3Label'>7</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box8_3Label'>8</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%;' id='box9_3Label'>9</span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                        <div class='row' style='padding-bottom: 15px;'>\n                                            <div class=\"container-fluid \" align=\"center\">\n                                                <table  width='100%'>\n                                                   <tr>\n                                                        <td width='40%' align='right'>\n                                                            <span  id='sensorName3'>Sensor xx</span>\n                                                        </td>\n                                                        <td width='60%' align='center'>\n                                                            <span   id='timeStamp3'></span>\n                                                        </td>\n                                                    </tr>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 940,
        "y": 640,
        "wires": [
            [
                "bb20eaee.3742c8"
            ]
        ]
    },
    {
        "id": "b703adb9.a6106",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-tv/websocket",
        "server": "6308abaa.624654",
        "client": "",
        "x": 1120,
        "y": 240,
        "wires": []
    },
    {
        "id": "bb20eaee.3742c8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.imageControl",
        "field": "payload.html.imageControl",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- imageView HTML -->\n                <div class='card' id='imageView'>\n                    <p class='card-title'>Image Control</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\">\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Color Mode</span>\n                                                </td>\n                                                <td width=\"40%\">\n                                                    <button class='btn btn-block card-button big-text' id=\"colorScaleButton\" onclick=\"toggleColorScale()\" >Color</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Enhancement Level</span>\n                                                </td>\n                                                <td width=\"14%\" >\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(-1)\">-</button>\n                                                </td>\n                                                <td width=\"12%px\" align='center'>\n                                                    <span  class='card-text' id=\"enhancementLevel\" >0</span>\n                                                </td>\n                                                <td width=\"14%\">\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(1)\">+</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 950,
        "y": 680,
        "wires": [
            [
                "e75303b4.25d9"
            ]
        ]
    },
    {
        "id": "5f719ef4.ca354",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-tv/websocket",
        "server": "6308abaa.624654",
        "client": "",
        "x": 160,
        "y": 960,
        "wires": [
            [
                "bba93a6e.3bdbd8"
            ]
        ]
    },
    {
        "id": "85b2d1c0.f6aca",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-bar/websocket",
        "server": "f7a2f382.03ec3",
        "client": "",
        "x": 1130,
        "y": 280,
        "wires": []
    },
    {
        "id": "e06db55d.544e98",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-bar/websocket",
        "server": "f7a2f382.03ec3",
        "client": "",
        "x": 160,
        "y": 900,
        "wires": [
            [
                "bba93a6e.3bdbd8"
            ]
        ]
    },
    {
        "id": "3f96bf6d.ba5be",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/vad-kul-bar",
        "url": "/vad-kul-bar",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 880,
        "wires": [
            [
                "4be231ec.c0be6"
            ]
        ]
    },
    {
        "id": "9d872e4d.ed70a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul Bar",
        "output": "str",
        "x": 310,
        "y": 1000,
        "wires": [
            [
                "8741b7b7.5be468"
            ]
        ]
    },
    {
        "id": "c1b724c7.8c1268",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var deviceType = 'vad-kul';\nvar names = JSON.stringify(msg.payload.names.split(\",\"));\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['names'] = names;\nmsg.payload['script']['deviceType'] = 'vad-kul';\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 960,
        "wires": [
            [
                "9d872e4d.ed70a"
            ]
        ]
    },
    {
        "id": "8741b7b7.5be468",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 330,
        "y": 1040,
        "wires": [
            [
                "a22b7bca.196c48"
            ]
        ]
    },
    {
        "id": "a22b7bca.196c48",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var project    = '{{{payload.script.project}}}';\n        var deviceType = '{{{payload.script.deviceType}}}';\n        var deviceType = '{{{payload.script.deviceType}}}';\n        var deviceNames  = JSON.parse('{{{payload.script.names}}}');\n        var deviceColors = ['red', 'blue','green','magenta'];\n        var deviceShapes = ['circle', 'square','triangle-up','cross'];\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var programStarted = false;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.payload.imageData.value != null)\n                        updatePixelMaxBarChart(msg.payload);\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function updatePixelMaxBarChart(device)\n        {\n            if (device.imageData.value == null) return;\n            var deviceIndex = -1;\n            for (var itrace = 0; itrace < deviceNames.length; ++itrace)\n            {\n                if (deviceNames[itrace] == device.name)\n                {\n                   deviceIndex = itrace;\n                }\n            }\n            var timeStamp  = new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }).replace(',', '');\n            var title ='Sensor ' + deviceNames[deviceIndex] + '--' + timeStamp;\n            var pixelMaxBarConfig = \n                {\n                    lolo            : device.bodyTemp.alarm.limits.lolo, \n                    low             : device.bodyTemp.alarm.limits.low, \n                    high            : device.bodyTemp.alarm.limits.high, \n                    hihi            : device.bodyTemp.alarm.limits.hihi, \n                    value           : device.bodyTemp.value, \n                    unit            : device.bodyTemp.unit, \n                    textsize        : 25,\n                    label           : 'body Temp', \n                    lowColor        : '#0000ff', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    gridColor       : '#ffffff',\n                    height          : 150, \n                    title           : title,\n                    htmlId          : 'pixelMaxBarPlot' + deviceIndex.toString()\n                };\n            setHorzBarWidget(pixelMaxBarConfig);\n        }\n",
        "output": "str",
        "x": 610,
        "y": 880,
        "wires": [
            [
                "1509b6bc.6f6a99"
            ]
        ]
    },
    {
        "id": "c46f51c2.46aef",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.horzbarWidget}}}",
        "output": "str",
        "x": 600,
        "y": 960,
        "wires": [
            [
                "97976e1f.6092c"
            ]
        ]
    },
    {
        "id": "83d8f1cb.b5f8b",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.bar}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 910,
        "y": 920,
        "wires": [
            [
                "1b33c6b9.ed56c9"
            ]
        ]
    },
    {
        "id": "1b33c6b9.ed56c9",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1190,
        "y": 920,
        "wires": []
    },
    {
        "id": "97976e1f.6092c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.bar",
        "field": "payload.html.bar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"pixelMaxBarPlot0\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"pixelMaxBarPlot1\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 920,
        "y": 880,
        "wires": [
            [
                "83d8f1cb.b5f8b"
            ]
        ]
    },
    {
        "id": "1509b6bc.6f6a99",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.horzbarWidget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 50, //top margin\n                            l: 20, //left margin\n                            r: 20, //right margin\n                            b: 50 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.title,\n//                            font: {color: valueColor, size:barConfig.textsize},\n                            font: {color: '#000000', size:25},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n        \n        \n        \n        \n        \n    \n",
        "output": "str",
        "x": 640,
        "y": 920,
        "wires": [
            [
                "c46f51c2.46aef"
            ]
        ]
    },
    {
        "id": "3deefd6d.1dde92",
        "type": "function",
        "z": "2dba0745.a98d98",
        "name": "Check for Project Cookies",
        "func": "var projectCookie = msg.req.cookies[global.get('projectName')];\nif(projectCookie == undefined)\n{\n    msg.cookies = { };\n    msg.cookies[global.get('projectName') + 'Url'] = msg.req.url;\n    return [msg,null];\n}\nmsg.token = projectCookie;\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "8884bafd.6881d8"
            ],
            [
                "29822a72.7731e6"
            ]
        ]
    },
    {
        "id": "8884bafd.6881d8",
        "type": "change",
        "z": "2dba0745.a98d98",
        "name": "Redirect to /login",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "302",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.location",
                "pt": "msg",
                "to": "/login",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 80,
        "wires": [
            [
                "e93bcc4b.b72c8"
            ]
        ]
    },
    {
        "id": "e93bcc4b.b72c8",
        "type": "http response",
        "z": "2dba0745.a98d98",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 80,
        "wires": []
    },
    {
        "id": "f3358361.19029",
        "type": "function",
        "z": "2dba0745.a98d98",
        "name": "Check permitted roles",
        "func": "var permittedRole = false;\nfor (irole = 0; irole < msg.token.length; ++irole)\n{\n    if (msg.token[irole] == msg.payload.allowedRole) permittedRole = true;\n}\nif (permittedRole)\n{\n    return [msg,null];\n}\nmsg.payload.errorInfo = 'Error: App not accessible';\nmsg.cookies = { };\nmsg.cookies[global.get('projectName') + 'Url'] = msg.req.url;\n\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 140,
        "wires": [
            [],
            [
                "7ddaaee4.d7485"
            ]
        ]
    },
    {
        "id": "9a3f2b94.104a28",
        "type": "template",
        "z": "e170e03.a0caf2",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <h1 style=\"text-align:center;color:red;\">Yippee</h1>\n",
        "output": "str",
        "x": 1010,
        "y": 80,
        "wires": [
            [
                "d183aa79.e68b78"
            ]
        ]
    },
    {
        "id": "3c2e3199.d3963e",
        "type": "template",
        "z": "e170e03.a0caf2",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul",
        "output": "str",
        "x": 730,
        "y": 80,
        "wires": [
            [
                "b657676d.93f7f8"
            ]
        ]
    },
    {
        "id": "d171eaee.efd5d8",
        "type": "template",
        "z": "e170e03.a0caf2",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 590,
        "y": 80,
        "wires": [
            [
                "3c2e3199.d3963e"
            ]
        ]
    },
    {
        "id": "d183aa79.e68b78",
        "type": "subflow:8341090a.df9758",
        "z": "e170e03.a0caf2",
        "name": "",
        "x": 1150,
        "y": 80,
        "wires": []
    },
    {
        "id": "b657676d.93f7f8",
        "type": "template",
        "z": "e170e03.a0caf2",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 870,
        "y": 80,
        "wires": [
            [
                "9a3f2b94.104a28"
            ]
        ]
    },
    {
        "id": "360e39e7.c89036",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <h1 style=\"text-align:center;color:red;\">{{{payload.errorInfo}}}</h1>\n    <div class='row vert-pad' >\n        <div class='col-md-4'></div>\n        <div class='col-md-4'>\n            <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/\" >Ok</a>\n        </div>\n        <div class='col-md-4'></div>\n    </div>\n        ",
        "output": "str",
        "x": 610,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "39fe0176.56919e",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul",
        "output": "str",
        "x": 330,
        "y": 200,
        "wires": [
            [
                "38ea8b2b.de4a34"
            ]
        ]
    },
    {
        "id": "7ddaaee4.d7485",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "39fe0176.56919e"
            ]
        ]
    },
    {
        "id": "38ea8b2b.de4a34",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 470,
        "y": 200,
        "wires": [
            [
                "360e39e7.c89036"
            ]
        ]
    },
    {
        "id": "dffce358.cdab2",
        "type": "function",
        "z": "e170e03.a0caf2",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 80,
        "wires": [
            [
                "ff020242.3a10e"
            ]
        ]
    },
    {
        "id": "9ac6b7f7.c896a8",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 40,
        "wires": [
            [
                "44ca52be.20d65c"
            ]
        ]
    },
    {
        "id": "3966deae.453262",
        "type": "subflow:2dba0745.a98d98",
        "z": "2d027d69.1fdeb2",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [],
            [
                "6a38d804.df8fa8"
            ]
        ]
    },
    {
        "id": "6a38d804.df8fa8",
        "type": "subflow:8341090a.df9758",
        "z": "2d027d69.1fdeb2",
        "name": "",
        "x": 370,
        "y": 120,
        "wires": []
    },
    {
        "id": "ff020242.3a10e",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "e170e03.a0caf2",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "d171eaee.efd5d8"
            ]
        ]
    },
    {
        "id": "8e411315.2b09f",
        "type": "subflow:2dba0745.a98d98",
        "z": "495f0879.c831c8",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [],
            [
                "ecfe972c.7c72e8"
            ]
        ]
    },
    {
        "id": "ecfe972c.7c72e8",
        "type": "subflow:f22a539a.a67b3",
        "z": "495f0879.c831c8",
        "name": "",
        "x": 370,
        "y": 100,
        "wires": []
    },
    {
        "id": "84bdb59e.552b18",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/login",
        "url": "/login",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1180,
        "wires": [
            [
                "aff12a21.2e53c8"
            ]
        ]
    },
    {
        "id": "3dbc8e22.aafca2",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/process-login",
        "url": "/process-login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1380,
        "wires": [
            [
                "2623a5b9.60e51a"
            ]
        ]
    },
    {
        "id": "c7dcd2fd.f38ec",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "users",
        "operation": "findOne",
        "x": 510,
        "y": 1380,
        "wires": [
            [
                "d0b46e62.c61f3"
            ]
        ]
    },
    {
        "id": "2623a5b9.60e51a",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "user query",
        "func": "msg.userData = {cred : {}};\nmsg.userData.cred = {username : msg.payload.username, password : msg.payload.password};\nmsg.payload =  [{username : msg.userData.cred.username },  {projection  :{_id :   0}}]\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 1380,
        "wires": [
            [
                "c7dcd2fd.f38ec"
            ]
        ]
    },
    {
        "id": "d0b46e62.c61f3",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check username",
        "func": "function isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload))\n{\n    msg.userData = {};\n    msg.payload.errorInfo = 'Error: User not found';\n    return [msg, null];\n}\nvar pwcheck = \n{\n    \"topic\"     : \"checkPassword\",\n    \"txt\"       : msg.userData.cred.password,\n    \"hash\"      : msg.payload.password\n}\nmsg.userData.cred.roles = msg.payload.roles\nmsg.payload = pwcheck;\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 1380,
        "wires": [
            [
                "d1cf61fb.35fc1"
            ],
            [
                "2497b9a4.db7a46"
            ]
        ]
    },
    {
        "id": "2497b9a4.db7a46",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "decrypt password",
        "action": "verify",
        "field": "payload.txt",
        "hash": "payload.hash",
        "rounds": 10,
        "x": 930,
        "y": 1420,
        "wires": [
            [
                "25cbcda4.aaf522"
            ]
        ]
    },
    {
        "id": "25cbcda4.aaf522",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check password and roles",
        "func": "if (msg.match == false)  \n{\n    msg.userData = {};\n    msg.payload.errorInfo = 'Error: Invalid password';\n    return [msg, null];\n\n}\nmsg.payload = JSON.stringify(msg.userData.cred.roles);\ndelete msg['userData'];\ndelete msg['match'];\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 1420,
        "wires": [
            [
                "abf9b132.7c298"
            ],
            [
                "3abe79d2.fee286"
            ]
        ]
    },
    {
        "id": "3abe79d2.fee286",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "get Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 940,
        "y": 1500,
        "wires": [
            [
                "26477e37.472222"
            ]
        ]
    },
    {
        "id": "c10f4686.4bfa58",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <form action=\"/process-login\" method=\"POST\">\n        <table align='center'>\n            <tr>\n                <td>\n                    <label for=\"username\" class=\"big-text\">Login</label>\n                </td>\n                <td>\n                    <input name=\"username\" type=\"text\" class=\"big-text\"/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"password\" class=\"big-text\">Password</label>\n                </td>\n                <td>\n                    <input name=\"password\" type=\"password\" class=\"big-text\"/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                </td>\n                <td>\n                    <input type=\"submit\" class=\"big-text\"/>\n                </td>\n            </tr>\n        </table>    \n    </form>  ",
        "output": "str",
        "x": 710,
        "y": 1180,
        "wires": [
            [
                "67f4ab6d.c1fd04"
            ]
        ]
    },
    {
        "id": "7e91110a.c2165",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul",
        "output": "str",
        "x": 430,
        "y": 1180,
        "wires": [
            [
                "5a857f25.a6af6"
            ]
        ]
    },
    {
        "id": "aff12a21.2e53c8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 290,
        "y": 1180,
        "wires": [
            [
                "7e91110a.c2165"
            ]
        ]
    },
    {
        "id": "67f4ab6d.c1fd04",
        "type": "subflow:8341090a.df9758",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 850,
        "y": 1180,
        "wires": []
    },
    {
        "id": "5a857f25.a6af6",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 570,
        "y": 1180,
        "wires": [
            [
                "c10f4686.4bfa58"
            ]
        ]
    },
    {
        "id": "26477e37.472222",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set project cookie",
        "func": "msg.cookies = { };\nmsg.cookies[global.get('projectName')] = msg.token;\nmsg.statusCode = 302;\nmsg.headers = {};\nmsg.headers.location = '/'\nvar previousUrl = msg.req.cookies[global.get('projectName') + 'Url'];\nif(previousUrl == undefined)\n{\n    msg.headers.location = '/'\n}\nelse\n{\n    msg.headers.location = previousUrl;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1110,
        "y": 1500,
        "wires": [
            [
                "fee60e7.48d0cf"
            ]
        ]
    },
    {
        "id": "fee60e7.48d0cf",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 1500,
        "wires": []
    },
    {
        "id": "6bdd2c85.7c6fd4",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <h1 style=\"text-align:center;color:red;\">{{{payload.errorInfo}}}</h1>\n    <div class='row vert-pad' >\n        <div class='col-md-4'></div>\n        <div class='col-md-4'>\n            <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/login\" >Ok</a>\n        </div>\n        <div class='col-md-4'></div>\n    </div>\n        ",
        "output": "str",
        "x": 710,
        "y": 1240,
        "wires": [
            [
                "24fbd58c.84d57a"
            ]
        ]
    },
    {
        "id": "2c9c7a92.316d66",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul",
        "output": "str",
        "x": 430,
        "y": 1240,
        "wires": [
            [
                "cf6e4a4c.7e4aa8"
            ]
        ]
    },
    {
        "id": "cdb33716.16d218",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 290,
        "y": 1240,
        "wires": [
            [
                "2c9c7a92.316d66"
            ]
        ]
    },
    {
        "id": "24fbd58c.84d57a",
        "type": "subflow:8341090a.df9758",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 850,
        "y": 1240,
        "wires": []
    },
    {
        "id": "cf6e4a4c.7e4aa8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 570,
        "y": 1240,
        "wires": [
            [
                "6bdd2c85.7c6fd4"
            ]
        ]
    },
    {
        "id": "e322d811.8b4178",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Login Error",
        "links": [
            "d1cf61fb.35fc1",
            "abf9b132.7c298"
        ],
        "x": 175,
        "y": 1240,
        "wires": [
            [
                "cdb33716.16d218"
            ]
        ]
    },
    {
        "id": "d1cf61fb.35fc1",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "No User",
        "links": [
            "e322d811.8b4178"
        ],
        "x": 855,
        "y": 1360,
        "wires": []
    },
    {
        "id": "abf9b132.7c298",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Bad Password",
        "links": [
            "e322d811.8b4178"
        ],
        "x": 1315,
        "y": 1380,
        "wires": []
    },
    {
        "id": "ab328d8b.b827a",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "users",
        "operation": "insertOne",
        "x": 570,
        "y": 1600,
        "wires": [
            [
                "1965db8f.5178e4"
            ]
        ]
    },
    {
        "id": "1965db8f.5178e4",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ba337c11.0eb2f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Add User",
        "func": "var user = {\n  \"username\"        : \"hornan\",\n  \"password\"    : \"$2a$10$/RMz6rBzXwSyS1W77HMcPe35f8ek/u7SJn/hoiGlgU1oZ0rzZK2aq\",\n  \"roles\"       : [\"expert\"]\n}\nreturn {topic:'user',payload:user};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 1600,
        "wires": [
            [
                "ab328d8b.b827a"
            ]
        ]
    },
    {
        "id": "297ec315.26eb4c",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1600,
        "wires": [
            [
                "ba337c11.0eb2f"
            ]
        ]
    },
    {
        "id": "ea16c2f2.cc51f",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "",
        "action": "encrypt",
        "field": "",
        "hash": "payload",
        "rounds": 10,
        "x": 310,
        "y": 1660,
        "wires": [
            [
                "b3869c42.e862d"
            ]
        ]
    },
    {
        "id": "78dde377.f2284c",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "TestEncrypt",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "corner",
        "payloadType": "str",
        "x": 170,
        "y": 1660,
        "wires": [
            [
                "ea16c2f2.cc51f"
            ]
        ]
    },
    {
        "id": "b3869c42.e862d",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 1660,
        "wires": []
    },
    {
        "id": "174053b9.1f51bc",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "TestVerify",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"txt\":\"zebograf\",\"hash\":\"$2a$10$NO0QftMJiHQPA8z7BmlFWOW0uajRSg3gP4Nq1IdwjEndxHRRihjkW\"}",
        "payloadType": "json",
        "x": 160,
        "y": 1720,
        "wires": [
            [
                "3a224a45.c10eb6"
            ]
        ]
    },
    {
        "id": "f1f8d58.a302028",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 1720,
        "wires": []
    },
    {
        "id": "3a224a45.c10eb6",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "",
        "action": "verify",
        "field": "payload.txt",
        "hash": "payload.hash",
        "rounds": 10,
        "x": 310,
        "y": 1720,
        "wires": [
            [
                "f1f8d58.a302028"
            ]
        ]
    },
    {
        "id": "9d23d6da.506538",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 60,
        "wires": [
            [
                "781dbbc5.3a2e14"
            ]
        ]
    },
    {
        "id": "781dbbc5.3a2e14",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 700,
        "y": 60,
        "wires": [
            [
                "f1353403.af8cb8"
            ]
        ]
    },
    {
        "id": "52f89484.3e06ac",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 120,
        "wires": [
            [
                "44733e49.ba7ec"
            ]
        ]
    },
    {
        "id": "44733e49.ba7ec",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 700,
        "y": 120,
        "wires": [
            [
                "3836124.ae654ee"
            ]
        ]
    },
    {
        "id": "13e19a9a.409655",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 280,
        "wires": [
            [
                "64665cab.c46c24"
            ]
        ]
    },
    {
        "id": "64665cab.c46c24",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "env": [],
        "x": 700,
        "y": 280,
        "wires": [
            [
                "3ff05971.6144b6"
            ]
        ]
    },
    {
        "id": "ffb289f5.f43748",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "2a6a8fe7.d0c42"
            ]
        ]
    },
    {
        "id": "2a6a8fe7.d0c42",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 700,
        "y": 440,
        "wires": [
            [
                "4c2ffe1e.b39ee"
            ]
        ]
    },
    {
        "id": "83301a46.e7b368",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 40,
        "wires": [
            [
                "5edcffd1.23572"
            ]
        ]
    },
    {
        "id": "5edcffd1.23572",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 40,
        "wires": [
            [
                "7b9e1c55.c445c4"
            ]
        ]
    },
    {
        "id": "5fe2ee6b.e7801",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "86c26641.91e478"
            ]
        ]
    },
    {
        "id": "86c26641.91e478",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 160,
        "wires": [
            [
                "fa0c0cab.d9876"
            ]
        ]
    },
    {
        "id": "fac3ac47.cbce",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 220,
        "wires": [
            [
                "6141143b.207eec"
            ]
        ]
    },
    {
        "id": "6141143b.207eec",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 220,
        "wires": [
            [
                "30fbb3de.45ba1c"
            ]
        ]
    },
    {
        "id": "bc63b66b.867d18",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "87b81ba7.286ac8"
            ]
        ]
    },
    {
        "id": "87b81ba7.286ac8",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 100,
        "wires": [
            [
                "3662caf5.96ce96"
            ]
        ]
    },
    {
        "id": "50b5b5d7.93c8ac",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "bb1b3802.2e34b8"
            ]
        ]
    },
    {
        "id": "bb1b3802.2e34b8",
        "type": "subflow:495f0879.c831c8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 480,
        "y": 140,
        "wires": [
            [
                "fd934b09.f641b8"
            ]
        ]
    },
    {
        "id": "421bd3a6.9feaac",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 40,
        "wires": [
            [
                "1a4ad963.adfef7"
            ]
        ]
    },
    {
        "id": "1a4ad963.adfef7",
        "type": "subflow:495f0879.c831c8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 480,
        "y": 40,
        "wires": [
            [
                "6a7aaea9.6b97f"
            ]
        ]
    },
    {
        "id": "13193347.eb277d",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 40,
        "wires": [
            [
                "f1f3e0dd.83dae"
            ]
        ]
    },
    {
        "id": "f1f3e0dd.83dae",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "ed95d0ce.35dcc"
            ]
        ]
    },
    {
        "id": "d03bec5.8e8901",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 400,
        "wires": [
            [
                "f050932.de46b7"
            ]
        ]
    },
    {
        "id": "f050932.de46b7",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 340,
        "y": 440,
        "wires": [
            [
                "22710dda.91aa22"
            ]
        ]
    },
    {
        "id": "d9fa4f85.736cd",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 640,
        "wires": [
            [
                "f3837f64.baedc"
            ]
        ]
    },
    {
        "id": "f3837f64.baedc",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 340,
        "y": 680,
        "wires": [
            [
                "e75cbeef.10f68"
            ]
        ]
    },
    {
        "id": "4be231ec.c0be6",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 880,
        "wires": [
            [
                "362c717e.634fde"
            ]
        ]
    },
    {
        "id": "362c717e.634fde",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 340,
        "y": 920,
        "wires": [
            [
                "c1b724c7.8c1268"
            ]
        ]
    },
    {
        "id": "5bf73b4f.de0f54",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 1120,
        "wires": [
            [
                "e7479070.636cb"
            ]
        ]
    },
    {
        "id": "e7479070.636cb",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 340,
        "y": 1160,
        "wires": [
            [
                "a0b6b18e.c3f26"
            ]
        ]
    },
    {
        "id": "44ca52be.20d65c",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 420,
        "y": 40,
        "wires": [
            [
                "ef751ae9.e06be8"
            ]
        ]
    },
    {
        "id": "6993cc06.850954",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 200,
        "wires": [
            [
                "4d15a160.21c18"
            ]
        ]
    },
    {
        "id": "4d15a160.21c18",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 420,
        "y": 200,
        "wires": [
            [
                "f04f7a94.2eec78"
            ]
        ]
    },
    {
        "id": "ec4b776f.c2f368",
        "type": "sendsms",
        "z": "8475ab9.3d26058",
        "creds": "23623a1c.e4ce46",
        "to": "{{msg.to}}",
        "fr": "{{msg.from}}",
        "text": "{{msg.payload}}",
        "unicode": false,
        "x": 1330,
        "y": 80,
        "wires": [
            [
                "765e7bf5.14dea4"
            ]
        ]
    },
    {
        "id": "765e7bf5.14dea4",
        "type": "debug",
        "z": "8475ab9.3d26058",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1470,
        "y": 80,
        "wires": []
    },
    {
        "id": "58f29d7b.2cfe24",
        "type": "delay",
        "z": "8475ab9.3d26058",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1140,
        "y": 80,
        "wires": [
            [
                "ec4b776f.c2f368",
                "9fad58f9.ba8838"
            ]
        ]
    },
    {
        "id": "9fad58f9.ba8838",
        "type": "debug",
        "z": "8475ab9.3d26058",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1350,
        "y": 40,
        "wires": []
    },
    {
        "id": "3de68366.1ae5cc",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Check bodyTemp alarm",
        "func": "if (msg.payload.payload.imageData.value == null) return null;\nif (msg.payload.payload.bodyTemp.value < msg.payload.payload.bodyTemp.alarm.limits.high ) return null;\n\nif (msg.payload.payload.bodyTemp.alarm.notify.name.length < 1) return null;\nif (msg.payload.payload.bodyTemp.alarm.notify.number.length < 1) return null;\nvar message = 'Alarm! ' + msg.payload.payload.deviceType + '-' + msg.payload.payload.name + '-bodyTemp';\nmessage = message + ' is at ' + msg.payload.payload.bodyTemp.value.toString() + ' ' + msg.payload.payload.bodyTemp.unit\nreturn {topic:'sms',to:msg.payload.payload.bodyTemp.alarm.notify.number, payload:message, from:'46000000000'};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 930,
        "y": 80,
        "wires": [
            [
                "58f29d7b.2cfe24"
            ]
        ]
    },
    {
        "id": "9720ea4d.158138",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/info",
        "url": "/info",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "8df4fc1c.18b5c"
            ]
        ]
    },
    {
        "id": "6c48b578.c3f71c",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class=\"googleSlide4by3-container\">\n        <iframe class=\"googleSlide4by3-iframe\" src=\"https://docs.google.com/presentation/d/e/2PACX-1vSiftZeJzEHz0O8HUyCaQbL4mfq-hUQtYyMgRUUS6vKrS5I-55htPu-AohYbQzjEpKPtk4_qGKTCbnh/embed?start=true&loop=false&delayms=5000\" gesture=\"media\"  allow=\"encrypted-media\" allowfullscreen></iframe>\n    </div>\n    \n",
        "output": "str",
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "466cd250.a8184c"
            ]
        ]
    },
    {
        "id": "ec6f5c2e.228e",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Info",
        "output": "str",
        "x": 730,
        "y": 400,
        "wires": [
            [
                "ed94644c.2acb18"
            ]
        ]
    },
    {
        "id": "8df4fc1c.18b5c",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 590,
        "y": 400,
        "wires": [
            [
                "ec6f5c2e.228e"
            ]
        ]
    },
    {
        "id": "466cd250.a8184c",
        "type": "subflow:8341090a.df9758",
        "z": "a858ad3a.95706",
        "name": "",
        "env": [],
        "x": 1150,
        "y": 400,
        "wires": []
    },
    {
        "id": "ed94644c.2acb18",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "infoYellow.png",
        "output": "str",
        "x": 870,
        "y": 400,
        "wires": [
            [
                "6c48b578.c3f71c"
            ]
        ]
    },
    {
        "id": "f93e57ba.d1c0c8",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "d1a2144f.104418"
            ]
        ]
    },
    {
        "id": "b8258236.e7b89",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/apps\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/appsYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Apps</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/info\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/infoYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Info</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n   </div>",
        "output": "str",
        "x": 1010,
        "y": 100,
        "wires": [
            [
                "d4836c97.d7cf4"
            ]
        ]
    },
    {
        "id": "4ef71e20.8adf4",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vad Kul på Hörnan",
        "output": "str",
        "x": 730,
        "y": 100,
        "wires": [
            [
                "4aa2529f.bbaf6c"
            ]
        ]
    },
    {
        "id": "d1a2144f.104418",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "4ef71e20.8adf4"
            ]
        ]
    },
    {
        "id": "d4836c97.d7cf4",
        "type": "subflow:8341090a.df9758",
        "z": "a858ad3a.95706",
        "name": "",
        "env": [],
        "x": 1150,
        "y": 100,
        "wires": []
    },
    {
        "id": "4aa2529f.bbaf6c",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "discoYellow.png",
        "output": "str",
        "x": 870,
        "y": 100,
        "wires": [
            [
                "b8258236.e7b89"
            ]
        ]
    },
    {
        "id": "1df91e68.621a42",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/vad-kul-monitor",
        "url": "/vad-kul-monitor",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1640,
        "wires": [
            [
                "4c1b430d.3c8cdc"
            ]
        ]
    },
    {
        "id": "f4f40f05.e00ce",
        "type": "subflow:ca529822.9112f8",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1370,
        "y": 1680,
        "wires": []
    },
    {
        "id": "ce17b644.bed438",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var name = msg.payload.name;\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['name'] = name;\nmsg.payload['script']['deviceType'] = 'vad-kul';\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 1720,
        "wires": [
            [
                "68c4a19f.47afb"
            ]
        ]
    },
    {
        "id": "4c1b430d.3c8cdc",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRole = 'expert';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 1640,
        "wires": [
            [
                "c2cb6a81.ccf248"
            ]
        ]
    },
    {
        "id": "c2cb6a81.ccf248",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "name": "",
        "env": [],
        "x": 340,
        "y": 1680,
        "wires": [
            [
                "ce17b644.bed438"
            ]
        ]
    },
    {
        "id": "e755ffa5.cbbc3",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/vad-kul-monitor/websocket",
        "server": "ee7a7e47.e8f98",
        "client": "",
        "x": 1140,
        "y": 360,
        "wires": []
    },
    {
        "id": "68c4a19f.47afb",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var lastUpdate = new Date().getTime();\n        var maxDisplayTime = 5000;\n        var imageArray =  null;\n        var language = 0;\n        var warnings = [\n            [\"Person outside range\"     ,\"Person utanför räckhåll\"    ,\"Άτομο εκτός εμβέλειας\"   ,\"Persona fuera del alcance\"  ,\"Persona fuori portata\"  ,\"Person außerhalb der Reichweite\"  ,\"Personne hors de portée\"],\n            [\"Normal Temperature\"       ,\"Normal temperatur\"          ,\"Κανονική θερμοκρασία\"    ,\"Temperatura normal\"         ,\"Temperatura normale\"    ,\"Normale Temperatur\"               ,\"Température normale\"],\n            [\"High Temperature\"         ,\"Hög temperatur\"             ,\"Υψηλή θερμοκρασία\"       ,\"Alta temperatura\"           ,\"Alta temperatura\"       ,\"Hohe Temperatur\"                  ,\"Haute température\"],\n            [\"Temperature outside range\",\"Temperatur utanför räckhåll\",\"Θερμοκρασία εκτός εύρους\",\"Temperatura fuera del rango\",\"Temperatura fuori range\",\"Temperatur außerhalb des Bereichs\",\"Température hors plage\"] ];\n        \n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $('#tempLegend').hide();\n            $('#pixelMaxBarPlot').hide();\n            setInterval(function()\n            {\n                if ((new Date().getTime() - lastUpdate) > maxDisplayTime)\n                {\n                    $('#tempComment').text(\" \");\n                    $('#maxTemp').text(\" \");\n                    clearImage();\n                    $('#tempLegend').hide();\n                    $('#pixelMaxBarPlot').hide();\n                    \n                }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                        \n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            if (device.imageData.value != null)\n            {\n                var style = 'font-size:300%; font-weight:300; color:yellow';\n                if ((device.triggerMode.value == 0) || (device.triggerMode.value == 1))\n                {\n                    if (device.autoModeAction.value == 0)\n                    {\n                        $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                        $('#maxTemp').attr(\"style\", style);\n                        $('#maxTemp').text(\"\");\n                    }\n                    if (device.autoModeAction.value == 1)\n                    {\n                        style = 'font-size:300%; font-weight:300; color:cyan';\n                        $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                        $('#maxTemp').attr(\"style\", style);\n                        $('#maxTemp').text(device.bodyTemp.value.toString() + \" C\");\n                    }\n                    if (device.autoModeAction.value == 2)\n                    {\n                        style = 'font-size:300%; font-weight:300; color:red';\n                        $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                        $('#maxTemp').attr(\"style\", style);\n                        $('#maxTemp').text(device.bodyTemp.value.toString() + \" C\");\n                    }\n                    if (device.autoModeAction.value == 3)\n                    {\n                        style = 'font-size:300%; font-weight:300; color:yellow';\n                        $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                        $('#maxTemp').attr(\"style\", style);\n                        $('#maxTemp').text(device.bodyTemp.value.toString() + \" C\");\n                    }\n                }\n                else\n                {\n                    $('#tempComment').attr(\"style\", style);\n                    $('#tempComment').text(\"Surface Temperature\");\n                    $('#maxTemp').attr(\"style\", style);\n                    $('#maxTemp').text(device.pixelMax.value.toString() + \" C\");\n                }\n                lastUpdate = new Date().getTime();\n            }\n            if (device.imageData.value != null)\n            {\n                pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                var processImage = 1;\n// blur image for privacy                \n//                try {processImage = device.processImage.value;} catch(err) {processImage = 1;}\n                switch (processImage)\n                {\n                    case 0:  \n                        imageArray = pgm.imageArray;\n                        break;\n                    case 1:  \n                        imageArray = blurImage(pgm.imageArray);\n                        break;\n                    default: \n                        imageArray = blurImage(pgm.imageArray);\n                        break;\n                }\n                plotImage();\n                $('#pixelMaxBarPlot').show();\n                var devTempSource = device.pixelMax;\n                if ((device.triggerMode.value == 0) || (device.triggerMode.value == 1)) devTempSource = device.bodyTemp;\n                var pixelMaxBarConfig = \n                    {\n                        lolo            : devTempSource.alarm.limits.lolo, \n                        low             : devTempSource.alarm.limits.low, \n                        high            : devTempSource.alarm.limits.high, \n                        hihi            : devTempSource.alarm.limits.hihi, \n                        value           : devTempSource.value, \n                        unit            : devTempSource.unit, \n                        textsize        : 20,\n                        label           : 'temp', \n                        lowColor        : '#0000ff', \n                        mediumColor     : '#00ff00',\n                        highColor       : '#ff0000', \n                        backgroundColor : '#000000', \n                        labelColor      : '#ffffff', \n                        gridColor       : '#000000',\n                        height          : 50, \n                        htmlId          : 'pixelMaxBarPlot'\n                    };\n                setHorzBarWidget(pixelMaxBarConfig);\n             }\n        }\n        function plotImage()\n        {\n            $('#tempLegend').show();\n            var rgb = [];\n            var plow = (pgm.minval - 27315) / 100;\n            var phigh = (pgm.maxval - 27315) / 100;\n            var pdelta = phigh - plow;\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = Math.round(((phigh - plow) * intensity + plow) * 10.0) / 10.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n                if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                if (colorScale)\n                {\n                    rgb = getRGB(intensity);\n                }\n                else\n                {\n                    rgb[0] = Math.floor(255 * intensity);\n                    rgb[1] = Math.floor(255 * intensity);\n                    rgb[2] = Math.floor(255 * intensity);\n                }\n                var style='width:44px;height:25px;background-color:' + 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                $('#box' + (ibox + 1).toString()).attr('style',style);\n            }\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.font = \"15px Arial\";\n            tipContext.fillStyle = \"cyan\";\n            tipPointerContext.fillStyle = \"cyan\";\n            if (colorScale) tipContext.fillStyle = \"black\";\n            if (colorScale) tipPointerContext.fillStyle = \"black\";\n            tipContext.textAlign = \"left\";\n\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            var rectWidth  = canvasWidth  / pgm.ncols;\n            var rectHeight = canvasHeight / pgm.nrows;\n            canvas.onmousemove = function (e) \n            {\n                var icol = Math.floor(e.layerX / rectWidth);\n                if (icol < 0) icol = 0;\n                if (icol >= pgm.ncols) icol = pgm.ncols - 1;\n                var irow = Math.floor((canvasHeight - e.layerY) / rectHeight);\n                if (irow < 0) irow = 0;\n                if (irow >= pgm.nrows) irow = pgm.nrows - 1;\n                var temp = Math.floor(100.0 * (pdelta * imageArray[irow][icol] / 256.0 + plow)) / 100;\n\n                tipPointer.style.top = (e.layerY  - tipPointer.height / 2).toString()  + \"px\";\n                tipPointer.style.left = (e.layerX - tipPointer.width / 2).toString() + \"px\";\n                tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n                tipPointerContext.fillRect( 0, 0, tipPointer.width, tipPointer.height);\n\n                tip.style.top = (e.layerY - tip.height - tipPointer.height).toString()  + \"px\";\n                tip.style.left = (e.layerX).toString() + \"px\";\n                tipContext.clearRect(0, 0, tip.width, tip.height);\n                tipContext.fillText(temp.toString() + ' C', 0, 30);\n            };\n\n            for (var irow = 0; irow < pgm.nrows; ++irow)\n            {\n                for (var icol = 0; icol < pgm.ncols; ++icol)\n                {\n                    var intensity = imageArray[irow][icol] / 256.0;\n                    if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                    if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                    if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                    if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                    if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                    if (colorScale)\n                    {\n                        rgb = getRGB(intensity);\n                        rgb[0] = Math.floor(rgb[0]);\n                        rgb[1] = Math.floor(rgb[1]);\n                        rgb[2] = Math.floor(rgb[2]);\n                    }\n                    else\n                    {\n                        rgb[0] = Math.floor(255 * intensity);\n                        rgb[1] = Math.floor(255 * intensity);\n                        rgb[2] = Math.floor(255 * intensity);\n                    }\n                    canvasContext.fillStyle = 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                    if (intensity > 0.98) \n                    {\n                        canvasContext.fillStyle='magenta';\n                        if (colorScale) canvasContext.fillStyle='white';\n                    }\n\n                    canvasContext.fillRect(icol * rectWidth, canvasHeight - rectHeight - irow * rectHeight, rectWidth, rectHeight);\n                }    \n            }\n            var ellipseWidth = 100;\n            var ellipseHeight = 150;\n            canvasContext.fillStyle='black';\n            if ((device.triggerMode.value == 0) || (device.triggerMode.value == 1)) \n            {\n                drawEllipse(canvasContext, (canvasWidth - ellipseWidth) / 2, (canvasHeight -  ellipseHeight)/ 2, ellipseWidth, ellipseHeight);\n            }\n        }\n        function blurImage(inputImage)\n        {\n            var kernal = [[1,2,1], [2,4,2], [1,2,1]];\n            var blurImage = [];\n            var nrows = inputImage.length;\n            var ncols = inputImage[0].length;\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                blurImage[irow] = [];\n                for (var icol = 0; icol < ncols; ++icol)\n                {\n                    if ((irow == 0) || (irow == (nrows - 1)))\n                    {\n                        blurImage[irow][icol] =  inputImage[irow][icol];\n                    }\n                    else\n                    {\n                        if ((icol == 0) || (icol == (ncols - 1)))\n                        {\n                            blurImage[irow][icol] =  inputImage[irow][icol];\n                        }\n                        else\n                        {\n                            blurImage[irow][icol] = 0;\n                            for (var ikrow = 0; ikrow < 3; ++ikrow)\n                            {\n                                for (var ikcol = 0; ikcol < 3; ++ikcol)\n                                {\n                                    blurImage[irow][icol] = blurImage[irow][icol] + inputImage[irow + ikrow - 1][icol + ikcol - 1] * kernal[ikrow][ikcol];\n                                }\n                            }\n                            blurImage[irow][icol] = Math.round(blurImage[irow][icol] / 16.0);\n                        }\n                    }\n                }\n            }\n            return blurImage;\n        }\n        function mouseLeftCanvas()\n        {\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.clearRect(0, 0, tip.width, tip.height);\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n        }\n        function getRGB(intensity)\n        {\n          var rgb = [0,0,0];\n          if ( (0 <= intensity) && (intensity <= 0.25) )\n          {\n            rgb[0] = 0;\n            rgb[1] = Math.floor(255 * intensity * 4);    \n            rgb[2] = 255;\n          }\n          if ( (0.25 < intensity) && (intensity <= 0.50) )\n          {\n            rgb[0] = 0;\n            rgb[1] = 255;    \n            rgb[2] = Math.floor(255 * (0.50 - intensity) * 4);\n          }\n          if ( (0.50 < intensity) && (intensity <= 0.75) )\n          {\n            rgb[0] = Math.floor(255 * (intensity - 0.50) * 4);\n            rgb[1] = 255;    \n            rgb[2] = 0;\n          }\n          if ( (0.75 < intensity) && (intensity <= 1.0) )\n          {\n            rgb[0] = 255;\n            rgb[1] = Math.floor(255 * (1.0 - intensity) * 4);    \n            rgb[2] = 0;\n          }\n          return rgb;\n        }\n       function clearImage()\n        {\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);        \n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var pbox = 0.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(' ');\n            } \n        }\n        function drawEllipse(ctx, x, y, w, h) \n        {\n            var kappa = .5522848,\n              ox = (w / 2) * kappa, // control point offset horizontal\n              oy = (h / 2) * kappa, // control point offset vertical\n              xe = x + w,           // x-end\n              ye = y + h,           // y-end\n              xm = x + w / 2,       // x-middle\n              ym = y + h / 2;       // y-middle\n            \n            ctx.beginPath();\n            ctx.moveTo(x, ym);\n            ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n            ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n            ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n            ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n            //ctx.closePath(); // not used correctly, see comments (use to close off open path)\n            ctx.stroke();\n        }\n",
        "output": "str",
        "x": 590,
        "y": 1640,
        "wires": [
            [
                "94407f94.3a091"
            ]
        ]
    },
    {
        "id": "647603a9.542f9c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.horzbarWidget}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.dangerZone}}}\n",
        "output": "str",
        "x": 580,
        "y": 1720,
        "wires": [
            [
                "350fb7d3.990658"
            ]
        ]
    },
    {
        "id": "b81ed169.a0cb6",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.display}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 910,
        "y": 1680,
        "wires": [
            [
                "2c8aa744.0a8448"
            ]
        ]
    },
    {
        "id": "350fb7d3.990658",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.display",
        "field": "payload.html.display",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                    <div id=\"pixelMaxBarPlot\" width=\"90%\" ></div>\n                </div>\n                <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                    <table width=90%>\n                        <tr>\n                            <td width=45%>\n                                <table width='100%'>\n                                    <tr>\n                                        <td width='100%' align='center'>\n                                            <span  style='' id='tempComment'></span>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td width='100%' align='center'>\n                                            <span  style='' id='maxTemp'></span>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </td>\n                            <td width=55%>\n                                <div class='row' style='padding-bottom: 1px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table width='400px'>\n                                            <tr>\n                                                <td>\n                                                    <div id=\"wrapper\" width=\"400\" height=\"300\" style=\"position:relative;\"  onmouseleave=\"mouseLeftCanvas()\">\n                                                        <canvas id=\"flirCanvas\" width=\"400\" height=\"300\" style=\"border:1px solid #000000;\"></canvas>\n                                                        <canvas id=\"tip\" width=63 height=15 style=\"position:absolute;\"></canvas>\n                                                        <canvas id=\"tipPointer\" width=5 height=5 style=\"position:absolute;\"></canvas>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div id='tempLegend' class=\"container-fluid \" align=\"center\" >\n                                        <table  width='396'>\n                                            <tr>\n                                                <td width=\"44px\">\n                                                    <div id='box1' style=\"width:44px;height:25px;background-color:#0000ff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box2' style=\"width:44px;height:25px;background-color:#0088ff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box3' style=\"width:44px;height:25px;background-color:#00ffff\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box4' style=\"width:44px;height:25px;background-color:#00ff88\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box5' style=\"width:44px;height:25px;background-color:#00ff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box6' style=\"width:44px;height:25px;background-color:#88ff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box7' style=\"width:44px;height:25px;background-color:#ffff00\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box8' style=\"width:44px;height:25px;background-color:#ff8800\"></div>\n                                                </td>\n                                                <td width=\"44px\">\n                                                    <div id='box9' style=\"width:44px;height:25px;background-color:#ff0000\"></div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%; color:white;' id='box1Label'>1</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%; color:white;' id='box2Label'>2</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%; color:white;' id='box3Label'>3</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%; color:white;' id='box4Label'>4</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%; color:white;' id='box5Label'>5</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%; color:white;' id='box6Label'>6</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%; color:white;' id='box7Label'>7</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%; color:white;' id='box8Label'>8</span>\n                                                </td>\n                                                <td align='center' width=\"44px\">\n                                                    <span style='font-size: 100%; color:white;' id='box9Label'>9</span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 1640,
        "wires": [
            [
                "b81ed169.a0cb6"
            ]
        ]
    },
    {
        "id": "2c8aa744.0a8448",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: black !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n",
        "output": "str",
        "x": 1090,
        "y": 1680,
        "wires": [
            [
                "712dd2d1.e06f3c"
            ]
        ]
    },
    {
        "id": "712dd2d1.e06f3c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n",
        "output": "str",
        "x": 1240,
        "y": 1680,
        "wires": [
            [
                "f4f40f05.e00ce"
            ]
        ]
    },
    {
        "id": "94407f94.3a091",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.horzbarWidget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 1, //top margin\n                            l: 10, //left margin\n                            r: 10, //right margin\n                            b: 30 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.value.toString() + ' ' + barConfig.unit,\n//                            font: {color: valueColor, size:barConfig.textsize},\n                            font: {color: '#000000', size:45},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n        \n        \n        \n        \n        \n    \n",
        "output": "str",
        "x": 620,
        "y": 1680,
        "wires": [
            [
                "647603a9.542f9c"
            ]
        ]
    },
    {
        "id": "b26c7cd5.f209b",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.spectrogram}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.controls}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 890,
        "y": 240,
        "wires": [
            [
                "c6d4dfc7.827cb"
            ]
        ]
    },
    {
        "id": "6e63e54e.04e54c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var plotConfig = \n        {\n            trace1Title : 'Temp (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Distance (cm)',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        let historyStripChart = new StripChart(plotConfig);\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var imageArray = null;\n        var programStarted = false;\n        var audioAlarm = new Audio('/audio/hold-your-horses.ogg');\n        var audioAlarmOn = true;\n        var imageDelayChanged = false;\n        var ultraSoundRangeChanged = false;\n        var offsetTempChanged = false;\n        var archiveMinTempChanged = false;\n        var archivePixelPercentChanged = false;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $('#imageDelayButtonId').hide();\n            $('#ultraSoundRangeButtonId').hide();\n            $('#offsetTempButtonId').hide();\n            $('#archiveMinTempButtonId').hide();\n            $('#archivePixelPercentButtonId').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                sendWebSocketMessageObject({topic : 'getLastImage', userID : userID, 'restfulDevice': restfulDevice});\n            }\n        }\n        function onWebSocketClose()\n        {\n//            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                        \n                    }\n                    break;\n                case 'lastImage':\n                    if (msg.userID == userID)\n                    {\n                        device = msg.payload;\n                        if (device.imageData.value != null)\n                        {\n                            $('#snapshotTimeStamp').text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n                            pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                            var processImage = 1;\n                            try {processImage = device.processImage.value;} catch(err) {processImage = 1;}\n                            switch (processImage)\n                            {\n                                case 0:  \n                                    imageArray = pgm.imageArray;\n                                    break;\n                                case 1:  \n                                    imageArray = blurImage(pgm.imageArray);\n                                    break;\n                                default: \n                                    imageArray = blurImage(pgm.imageArray);\n                                    break;\n                            }\n                            $('#sensorName').text('Sensor ' + device.name + ' @ ' + device.pixelMax.value.toString() + ' C');\n                            plotImage();\n                        }\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            if (!imageDelayChanged)$('#imageDelayInputId').val(device.imageDelay.value);\n            if (!ultraSoundRangeChanged)$('#ultraSoundRangeInputId').val(device.ultraSoundRange.value);\n            if (!archiveMinTempChanged)$('#archiveMinTempInputId').val(device.archiveMinTemp.value);\n            if (!offsetTempChanged)$('#offsetTempInputId').val(device.offsetTemp.value);\n            if (!archivePixelPercentChanged)$('#archivePixelPercentInputId').val(device.archivePixelPercent.value);\n            $('#processImageInputId').val(device.processImage.value);\n            $('#triggerModeInputId').val(device.triggerMode.value);\n            if (device.triggerMode.value == 2)\n            {\n                $('#manualTrigger').show();\n            }\n            else\n            {\n                $('#manualTrigger').hide();\n            }\n            $('#gateModeInputId').val(device.gateMode.value);\n            $('#languageModeInputId').val(device.language.value);\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            if (device.imageData.value != null)\n            {\n                $('#manualTriggerButton').text('Take Image');\n                historyStripChart.add3TracePoints(device.pixelMax.value, device.pixelMin.value, device.ultraSoundDistance.value);\n                $('#snapshotTimeStamp').text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n                $('#sensorName').text('Sensor ' + device.name + ' @ ' + device.pixelMax.value.toString() + ' C');\n                pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                var processImage = 1;\n                try {processImage = device.processImage.value;} catch(err) {processImage = 1;}\n                switch (processImage)\n                {\n                    case 0:  \n                        imageArray = pgm.imageArray;\n                        break;\n                    case 1:  \n                        imageArray = blurImage(pgm.imageArray);\n                        break;\n                    default: \n                        imageArray = blurImage(pgm.imageArray);\n                        break;\n                }\n                plotImage();\n                var image1dArray = [];\n                var ipixel = 0;\n                var plow = (pgm.minval - 27315) / 100;\n                var phigh = (pgm.maxval - 27315) / 100;\n                if ((device.pixelMax.alarm.value == 2) || (device.pixelMax.alarm.value == 4))\n                {\n                    if (audioAlarmOn && (device.triggerMode.value != 2) )\n                    {\n                        var playPromise = audioAlarm.play();\n                        if (playPromise !== undefined) \n                        {\n                            playPromise.then(_ => \n                            {\n                            // Automatic playback started!\n                            // Show playing UI.\n                            }).catch(error => \n                            {\n                            // Auto-play was prevented\n                            // Show paused UI.\n                            });\n                         }\n                    }\n                }\n            }\n            else\n            {\n                historyStripChart.add1TracePoints(device.ultraSoundDistance.value);\n             }\n            \n            var buttonColor = 'green';\n            var buttonTextColor = 'black';\n            var buttonText = \"Off\";\n            if (device.flipHorizontal.value > 0) \n            {\n                buttonColor = 'red';\n                buttonText = 'On';\n            }\n            $('#flipHorizontalId').css('color', buttonTextColor); \n            $('#flipHorizontalId').css('background-color', buttonColor); \n            $('#flipHorizontalId').text(buttonText); \n\n            buttonColor = 'green';\n            buttonTextColor = 'black';\n            buttonText = \"Off\";\n            if (device.flipVertical.value > 0) \n            {\n                buttonColor = 'red';\n                buttonText = 'On';\n            }\n            $('#flipVerticalId').css('color', buttonTextColor); \n            $('#flipVerticalId').css('background-color', buttonColor); \n            $('#flipVerticalId').text(buttonText); \n        }\n        function plotImage()\n        {\n            var rgb = [];\n            var plow = (pgm.minval - 27315) / 100;\n            var phigh = (pgm.maxval - 27315) / 100;\n            var pdelta = phigh - plow;\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = Math.round(((phigh - plow) * intensity + plow) * 10.0) / 10.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n                if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                if (colorScale)\n                {\n                    rgb = getRGB(intensity);\n                }\n                else\n                {\n                    rgb[0] = Math.floor(255 * intensity);\n                    rgb[1] = Math.floor(255 * intensity);\n                    rgb[2] = Math.floor(255 * intensity);\n                }\n                var style='width:88px;height:50px;background-color:' + 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                $('#box' + (ibox + 1).toString()).attr('style',style);\n            }\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.font = \"30px Arial\";\n            tipContext.fillStyle = \"cyan\";\n            tipPointerContext.fillStyle = \"cyan\";\n            if (colorScale) tipContext.fillStyle = \"black\";\n            if (colorScale) tipPointerContext.fillStyle = \"black\";\n            tipContext.textAlign = \"left\";\n\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            var rectWidth  = canvasWidth  / pgm.ncols;\n            var rectHeight = canvasHeight / pgm.nrows;\n            canvas.onmousemove = function (e) \n            {\n                var icol = Math.floor(e.layerX / rectWidth);\n                if (icol < 0) icol = 0;\n                if (icol >= pgm.ncols) icol = pgm.ncols - 1;\n                var irow = Math.floor((canvasHeight - e.layerY) / rectHeight);\n                if (irow < 0) irow = 0;\n                if (irow >= pgm.nrows) irow = pgm.nrows - 1;\n                var temp = Math.floor(100.0 * (pdelta * imageArray[irow][icol] / 256.0 + plow)) / 100;\n\n                tipPointer.style.top = (e.layerY  - tipPointer.height / 2).toString()  + \"px\";\n                tipPointer.style.left = (e.layerX - tipPointer.width / 2).toString() + \"px\";\n                tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n                tipPointerContext.fillRect( 0, 0, tipPointer.width, tipPointer.height);\n\n                tip.style.top = (e.layerY - tip.height - tipPointer.height).toString()  + \"px\";\n                tip.style.left = (e.layerX).toString() + \"px\";\n                tipContext.clearRect(0, 0, tip.width, tip.height);\n                tipContext.fillText(temp.toString() + ' C', 0, 30);\n            };\n\n            for (var irow = 0; irow < pgm.nrows; ++irow)\n            {\n                for (var icol = 0; icol < pgm.ncols; ++icol)\n                {\n                    var intensity = imageArray[irow][icol] / 256.0;\n                    if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                    if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                    if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                    if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                    if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                    if (colorScale)\n                    {\n                        rgb = getRGB(intensity);\n                        rgb[0] = Math.floor(rgb[0]);\n                        rgb[1] = Math.floor(rgb[1]);\n                        rgb[2] = Math.floor(rgb[2]);\n                    }\n                    else\n                    {\n                        rgb[0] = Math.floor(255 * intensity);\n                        rgb[1] = Math.floor(255 * intensity);\n                        rgb[2] = Math.floor(255 * intensity);\n                    }\n                    canvasContext.fillStyle = 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                    if (intensity > 0.98) \n                    {\n                        canvasContext.fillStyle='magenta';\n                        if (colorScale) canvasContext.fillStyle='white';\n                    }\n\n                    canvasContext.fillRect(icol * rectWidth, canvasHeight - rectHeight - irow * rectHeight, rectWidth, rectHeight);\n                }    \n            }\n        }\n        function blurImage(inputImage)\n        {\n            var kernal = [[1,2,1], [2,4,2], [1,2,1]];\n            var blurImage = [];\n            var nrows = inputImage.length;\n            var ncols = inputImage[0].length;\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                blurImage[irow] = [];\n                for (var icol = 0; icol < ncols; ++icol)\n                {\n                    if ((irow == 0) || (irow == (nrows - 1)))\n                    {\n                        blurImage[irow][icol] =  inputImage[irow][icol];\n                    }\n                    else\n                    {\n                        if ((icol == 0) || (icol == (ncols - 1)))\n                        {\n                            blurImage[irow][icol] =  inputImage[irow][icol];\n                        }\n                        else\n                        {\n                            blurImage[irow][icol] = 0;\n                            for (var ikrow = 0; ikrow < 3; ++ikrow)\n                            {\n                                for (var ikcol = 0; ikcol < 3; ++ikcol)\n                                {\n                                    blurImage[irow][icol] = blurImage[irow][icol] + inputImage[irow + ikrow - 1][icol + ikcol - 1] * kernal[ikrow][ikcol];\n                                }\n                            }\n                            blurImage[irow][icol] = Math.round(blurImage[irow][icol] / 16.0);\n                        }\n                    }\n                }\n            }\n            return blurImage;\n        }\n        function mouseLeftCanvas()\n        {\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.clearRect(0, 0, tip.width, tip.height);\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n        }\n        function getRGB(intensity)\n        {\n          var rgb = [0,0,0];\n          if ( (0 <= intensity) && (intensity <= 0.25) )\n          {\n            rgb[0] = 0;\n            rgb[1] = Math.floor(255 * intensity * 4);    \n            rgb[2] = 255;\n          }\n          if ( (0.25 < intensity) && (intensity <= 0.50) )\n          {\n            rgb[0] = 0;\n            rgb[1] = 255;    \n            rgb[2] = Math.floor(255 * (0.50 - intensity) * 4);\n          }\n          if ( (0.50 < intensity) && (intensity <= 0.75) )\n          {\n            rgb[0] = Math.floor(255 * (intensity - 0.50) * 4);\n            rgb[1] = 255;    \n            rgb[2] = 0;\n          }\n          if ( (0.75 < intensity) && (intensity <= 1.0) )\n          {\n            rgb[0] = 255;\n            rgb[1] = Math.floor(255 * (1.0 - intensity) * 4);    \n            rgb[2] = 0;\n          }\n          return rgb;\n        }\n        function toggleColorScale()\n        {\n            colorScale = !colorScale;\n            if (colorScale)\n            {\n                $('#colorScaleButton').text('Color');\n            }\n            else\n            {\n                $('#colorScaleButton').text('Gray');\n            }\n            plotImage();\n        }\n        function toggleEnhancedScale(deltaEnhanced)\n        {\n            enhancementLevel = enhancementLevel + deltaEnhanced;\n            if (enhancementLevel >  2) enhancementLevel = 2;\n            if (enhancementLevel < -2) enhancementLevel = -2;\n            $('#enhancementLevel').text(enhancementLevel.toString());\n            plotImage();\n        }\n        function clearImage()\n        {\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);        \n            $('#snapshotTimeStamp').text('-');\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = 0.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n            } \n            $('#pixelMaxBarPlot').hide();\n        }\n        function toggleSound()\n        {\n            audioAlarmOn = !audioAlarmOn;\n            if(audioAlarmOn)\n            {\n                $('#soundButtonId').css('color', 'black'); \n                $('#soundButtonId').css('background-color', 'green'); \n                $('#soundButtonId').text('On'); \n            }\n            else\n            {\n                $('#soundButtonId').css('color', 'black'); \n                $('#soundButtonId').css('background-color', 'grey'); \n                $('#soundButtonId').text('Off'); \n            }\n\n        }\n        function flipHorizontal()\n        {\n            if (device.flipHorizontal.value > 0)\n            {\n                device.flipHorizontal.value = 0;\n            }\n            else\n            {\n                device.flipHorizontal.value = 1;\n                \n            }\n            $('#flipHorizontalId').css('color', 'black'); \n            $('#flipHorizontalId').css('background-color', 'grey'); \n            $('#flipHorizontalId').text('?'); \n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n        function flipVertical()\n        {\n            if (device.flipVertical.value > 0)\n            {\n                device.flipVertical.value = 0;\n            }\n            else\n            {\n                device.flipVertical.value = 1;\n                \n            }\n            $('#flipVerticalId').css('color', 'black'); \n            $('#flipVerticalId').css('background-color', 'grey'); \n            $('#flipVerticalId').text('?'); \n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                var mqttMessage = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload :  device\n                };\n                sendSettingToMqtt(mqttMessage);\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function imageDelayChange()\n        {\n            imageDelayChanged = true;\n            $('#imageDelayButtonId').show();\n        }\n        function ultraSoundRangeChange()\n        {\n            ultraSoundRangeChanged = true;\n            $('#ultraSoundRangeButtonId').show();\n        }\n        function archiveMinTempChange()\n        {\n            archiveMinTempChanged = true;\n            $('#archiveMinTempButtonId').show();\n        }\n        function offsetTempChange()\n        {\n            offsetTempChanged = true;\n            $('#offsetTempButtonId').show();\n        }\n        function archivePixelPercentChange()\n        {\n            archivePixelPercentChanged = true;\n            $('#archivePixelPercentButtonId').show();\n        }\n        function imageDelay()\n        {\n            $('#imageDelayButtonId').hide();\n            if (isNaN($('#imageDelayInputId').val()))\n            {\n                imageDelayChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#imageDelayInputId').val()), 'imageDelay');\n            imageDelayChanged = false;\n        }\n        function ultraSoundRange()\n        {\n            $('#ultraSoundRangeButtonId').hide();\n            if (isNaN($('#ultraSoundRangeInputId').val()))\n            {\n                ultraSoundRangeChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#ultraSoundRangeInputId').val()), 'ultraSoundRange');\n            ultraSoundRangeChanged = false;\n        }\n        function archiveMinTemp()\n        {\n            $('#archiveMinTempButtonId').hide();\n            if (isNaN($('#archiveMinTempInputId').val()))\n            {\n                archiveMinTempChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#archiveMinTempInputId').val()), 'archiveMinTemp');\n            archiveMinTempChanged = false;\n        }\n        function offsetTemp()\n        {\n            $('#offsetTempButtonId').hide();\n            if (isNaN($('#offsetTempInputId').val()))\n            {\n                offsetTempChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#offsetTempInputId').val()), 'offsetTemp');\n            offsetTempChanged = false;\n        }\n        function archivePixelPercent()\n        {\n            $('#archivePixelPercentButtonId').hide();\n            if (isNaN($('#archivePixelPercentInputId').val()))\n            {\n                archivePixelPercentChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#archivePixelPercentInputId').val()), 'archivePixelPercent');\n            archivePixelPercentChanged = false;\n        }\n        function processImage()\n        {\n            if (isNaN($('#processImageInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#processImageInputId').val()), 'processImage');\n        }\n        function triggerMode()\n        {\n            if (isNaN($('#triggerModeInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#triggerModeInputId').val()), 'triggerMode');\n        }\n        function manualTrigger()\n        {\n            if (device.manualTrigger.value == 0)\n            {\n                setScalarValue(1, 'manualTrigger');\n                $('#manualTriggerButton').text('ABORT');\n            }\n            else\n            {\n                setScalarValue(0, 'manualTrigger');\n                $('#manualTriggerButton').text('Take Image');\n            }\n        }\n        function gateMode()\n        {\n            if (isNaN($('#gateModeInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#gateModeInputId').val()), 'gateMode');\n        }\n        function languageMode()\n        {\n            if (isNaN($('#languageModeInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#languageModeInputId').val()), 'language');\n        }\n",
        "output": "str",
        "x": 590,
        "y": 40,
        "wires": [
            [
                "674613fd.07739c"
            ]
        ]
    },
    {
        "id": "1f79f587.cc8a0a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.horzbarWidget}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.dangerZone}}}\n",
        "output": "str",
        "x": 580,
        "y": 200,
        "wires": [
            [
                "6c56e03b.2d3a1"
            ]
        ]
    },
    {
        "id": "6c56e03b.2d3a1",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.spectrogram",
        "field": "payload.html.spectrogram",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Temperature</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\">\n                                <table width='800px'>\n                                    <tr>\n                                        <td>\n                                            <div id=\"wrapper\" width=\"800\" height=\"600\" style=\"position:relative;\"  onmouseleave=\"mouseLeftCanvas()\">\n                                                <canvas id=\"flirCanvas\" width=\"800\" height=\"600\" style=\"border:1px solid #000000;\"></canvas>\n                                                <canvas id=\"tip\" width=125 height=30 style=\"position:absolute;\"></canvas>\n                                                <canvas id=\"tipPointer\" width=10 height=10 style=\"position:absolute;\"></canvas>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <table  width='792'>\n                                    <tr>\n                                        <td width=\"88px\">\n                                            <div id='box1' style=\"width:88px;height:50px;background-color:#0000ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box2' style=\"width:88px;height:50px;background-color:#0088ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box3' style=\"width:88px;height:50px;background-color:#00ffff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box4' style=\"width:88px;height:50px;background-color:#00ff88\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box5' style=\"width:88px;height:50px;background-color:#00ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box6' style=\"width:88px;height:50px;background-color:#88ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box7' style=\"width:88px;height:50px;background-color:#ffff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box8' style=\"width:88px;height:50px;background-color:#ff8800\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box9' style=\"width:88px;height:50px;background-color:#ff0000\"></div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box1Label'>1</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box2Label'>2</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box3Label'>3</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box4Label'>4</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box5Label'>5</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box6Label'>6</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box7Label'>7</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box8Label'>8</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box9Label'>9</span>\n                                        </td>\n                                    </tr>\n                                </table>\n                                <div class='row' style='padding-bottom: 15px;' id='manualTrigger'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                           <tr>\n                                                <td width='20%' align='left'> </td>\n                                                <td width='60%' align='center'>\n                                                    <button class='btn btn-block card-button big-text' id=\"manualTriggerButton\" onclick=\"manualTrigger()\" >Take Image</button>\n                                                </td>\n                                                <td width='20%' align='left'> </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                           <tr>\n                                                <td width='40%' align='left'>\n                                                    <span  class='card-text' id='sensorName'>Sensor xx</span>\n                                                </td>\n                                                <td width='60%' align='right'>\n                                                    <span  class='card-text' id='snapshotTimeStamp'></span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Color Mode</span>\n                                                </td>\n                                                <td width=\"40%\">\n                                                    <button class='btn btn-block card-button big-text' id=\"colorScaleButton\" onclick=\"toggleColorScale()\" >Color</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Enhancement Level</span>\n                                                </td>\n                                                <td width=\"14%\" >\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(-1)\">-</button>\n                                                </td>\n                                                <td width=\"12%px\" align='center'>\n                                                    <span  class='card-text' id=\"enhancementLevel\" >0</span>\n                                                </td>\n                                                <td width=\"14%\">\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(1)\">+</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 40,
        "wires": [
            [
                "513e1e95.78205"
            ]
        ]
    },
    {
        "id": "4af17674.71c308",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.dangerZone",
        "field": "payload.script.dangerZone",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// dangerZone JavaScript\n        function restartTray()\n        {\n            optionDialog('Danger! Will Robinson, Danger!', 'Restart Tray', 'This should not be done lightly', ['Reset Tray','Cancel'], [function (){restartTrayButtonPress();}, function (){$( \"#optionDialog\" ).dialog( \"close\" );}]);\n        }\n        function restartTrayButtonPress()\n        {\n            $( \"#optionDialog\" ).dialog( \"close\" );\n            var mqttMessage = \n            {\n                topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/restartTray',\n                payload :  1\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n",
        "output": "str",
        "x": 610,
        "y": 160,
        "wires": [
            [
                "1f79f587.cc8a0a"
            ]
        ]
    },
    {
        "id": "d28d3be8.82f088",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dangerZone",
        "field": "payload.html.dangerZone",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='danger-card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='danger-card-title'>Danger Zone</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='danger-card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='100%' align=\"center\">\n                                        <button class='btn danger-card-button big-text' id=\"restartTrayButton\" onclick=\"restartTray()\" >Restart Tray</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 200,
        "wires": [
            [
                "b26c7cd5.f209b"
            ]
        ]
    },
    {
        "id": "96b7a61e.009768",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 910,
        "y": 160,
        "wires": [
            [
                "d28d3be8.82f088"
            ]
        ]
    },
    {
        "id": "d315a12e.8b282",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n",
        "output": "str",
        "x": 600,
        "y": 120,
        "wires": [
            [
                "4af17674.71c308"
            ]
        ]
    },
    {
        "id": "c84f1d1c.12227",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.controls",
        "field": "payload.html.controls",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Controls</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Alarm Sound</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:green;color:black' id='soundButtonId' onclick=\"toggleSound()\" >On</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Flip Horizontal</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:grey;color:black' id='flipHorizontalId' onclick=\"flipHorizontal()\" >?</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Flip Vertical</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:grey;color:black' id='flipVerticalId' onclick=\"flipVertical()\" >?</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Image Delay (mS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"imageDelayInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"imageDelayChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"imageDelayButtonId\" onclick=\"imageDelay()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >UltraSound Range (cm)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"ultraSoundRangeInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"ultraSoundRangeChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"ultraSoundRangeButtonId\" onclick=\"ultraSoundRange()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Offset Temp (C)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"offsetTempInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"offsetTempChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"offsetTempButtonId\" onclick=\"offsetTemp()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Archive Temp (C)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"archiveMinTempInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"archiveMinTempChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"archiveMinTempButtonId\" onclick=\"archiveMinTemp()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Archive Pixel (%)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"archivePixelPercentInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"archivePixelPercentChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"archivePixelPercentButtonId\" onclick=\"archivePixelPercent()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Process Image</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"processImageInputId\" onchange=\"processImage()\">\n                                                        <option value=\"0\">Sharp</option>\n                                                        <option value=\"1\">Blur</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Trigger Mode</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"triggerModeInputId\" onchange=\"triggerMode()\" >\n                                                        <option value=\"0\">Automatic</option>\n                                                        <option value=\"1\">Periodic</option>\n                                                        <option value=\"2\">Manual</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Gate Mode</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"gateModeInputId\" onchange=\"gateMode()\" >\n                                                        <option value=\"0\">Off</option>\n                                                        <option value=\"1\">On</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Language</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"languageModeInputId\" onchange=\"languageMode()\" >\n                                                        <option value=\"0\">English</option>\n                                                        <option value=\"1\">Swedish</option>\n                                                        <option value=\"2\">Greek</option>\n                                                        <option value=\"3\">Spanish</option>\n                                                        <option value=\"4\">Italian</option>\n                                                        <option value=\"5\">German</option>\n                                                        <option value=\"6\">French</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 910,
        "y": 120,
        "wires": [
            [
                "96b7a61e.009768"
            ]
        ]
    },
    {
        "id": "513e1e95.78205",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 910,
        "y": 80,
        "wires": [
            [
                "c84f1d1c.12227"
            ]
        ]
    },
    {
        "id": "674613fd.07739c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Max Temp',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: 'red',\n                        size: 10,\n                        symbol: 'circle'\n                    }\n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Min Temp',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: 'green',\n                        size: 10,\n                        symbol: 'square'\n                    }\n                };\n                this.trace3 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Distance',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace2Color,\n                        size: 5,\n                        symbol: 'diamond'\n                    }\n                };\n            }\n            add1TracePoints(trace3Pt)\n            {\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace2.x[0] < plotBeginning)\n                    {\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace3.x[0] < plotBeginning)\n                    {\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2, this.trace3], this.layout);\n            }\n            add3TracePoints(trace1Pt, trace2Pt, trace3Pt)\n            {\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace2.x[0] < plotBeginning)\n                    {\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace3.x[0] < plotBeginning)\n                    {\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2, this.trace3], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 620,
        "y": 80,
        "wires": [
            [
                "d315a12e.8b282"
            ]
        ]
    }
]